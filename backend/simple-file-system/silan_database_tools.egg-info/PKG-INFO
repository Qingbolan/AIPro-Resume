Metadata-Version: 2.4
Name: silan-database-tools
Version: 1.0.0
Summary: A lightweight tool for syncing markdown content to databases
Author-email: Silan Hu <Silan.Hu@u.nus.edu>
License: MIT
Project-URL: Homepage, https://github.com/Qingbolan/AIPro-Resume
Project-URL: Documentation, https://github.com/Qingbolan/AIPro-Resume/blob/main/README.md
Project-URL: Repository, https://github.com/Qingbolan/AIPro-Resume.git
Project-URL: Bug Tracker, https://github.com/Qingbolan/AIPro-Resume/issues
Keywords: database,sync,markdown,migration,tools
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Database
Classifier: Topic :: Software Development :: Build Tools
Classifier: Topic :: Text Processing :: Markup :: Markdown
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: click>=8.0.0
Requires-Dist: rich>=13.0.0
Requires-Dist: python-frontmatter>=1.0.0
Requires-Dist: PyYAML>=6.0
Requires-Dist: sqlalchemy>=2.0.0
Requires-Dist: pymysql>=1.0.0
Requires-Dist: psycopg2-binary>=2.9.0
Provides-Extra: dev
Requires-Dist: black>=22.0.0; extra == "dev"
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: mypy>=0.991; extra == "dev"
Requires-Dist: flake8>=5.0.0; extra == "dev"
Requires-Dist: isort>=5.10.0; extra == "dev"

# Silan Personal Website Generator

A lightweight, file-based personal website system that requires no database setup. Create and maintain your personal website using markdown files and a simple CLI tool.

## Features

- **Zero Database**: All content stored in markdown files
- **Easy Setup**: One command to install and setup
- **Simple Build**: One command to build the entire website
- **Git-Friendly**: All content is version-controlled with Git
- **Self-Contained**: No external dependencies or services required
- **Multi-language Support**: Built-in internationalization
- **Hot Reload**: Development server with automatic rebuilding
- **Multiple Deployment Targets**: GitHub Pages, Netlify, Vercel, and more

## Installation

### Option 1: Quick Setup with Conda (Recommended)

```bash
cd /Users/macbook.silan.tech/Documents/GitHub/AIPro-Resume/backend/simple-file-system

# Run the automated setup script
./setup_environment.sh
```

This will create a conda environment with all dependencies and install the CLI tool.

### Option 2: Manual Conda Setup

```bash
# Create environment from YAML file
conda env create -f environment.yml

# Activate the environment
conda activate silan-website

# Install the CLI tool
pip install -e .
```

### Option 3: Using pip and Virtual Environment

```bash
# Create virtual environment
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate

# Install dependencies
pip install -r requirements.txt

# Install the package
pip install -e .
```

### Option 4: Using pip (when published)

```bash
pip install silan-personal-website
```

### Verify Installation

```bash
# Check if CLI is available
silan --help

# Check version
silan --version
```

## Quick Start

### 1. Activate Environment (if using conda)

```bash
conda activate silan-website
```

### 2. Initialize a New Project

```bash
silan init my-website --template academic
cd my-website
```

Available templates:
- `academic` - For researchers and academics
- `developer` - For software developers
- `creative` - For designers and artists
- `minimal` - Clean and simple design

### 2. Edit Your Content

The `init` command creates a project structure:

```
my-website/
├── silan-config.json          # Main configuration
├── content/                   # All content in markdown
│   ├── resume/
│   │   ├── personal.md       # Personal information
│   │   ├── education.md      # Education history
│   │   ├── experience.md     # Work experience
│   │   └── skills.md         # Skills and technologies
│   ├── projects/
│   │   └── sample-project.md
│   ├── blog/
│   │   └── articles/
│   │       └── welcome.md
│   ├── ideas/
│   └── plans/
├── assets/                   # Static assets
│   ├── images/
│   ├── videos/
│   └── documents/
├── themes/                   # Theme customization
│   └── default/
└── build/                    # Generated website
```

### 3. Start Development Server

```bash
silan dev
```

This starts a development server at `http://localhost:3000` with hot reload.

### 4. Build for Production

```bash
silan build
```

Generates optimized static site in the `build/` directory.

### 5. Deploy Your Website

```bash
# Deploy to GitHub Pages
silan deploy github-pages

# Deploy to Netlify
silan deploy netlify

# Deploy to Vercel
silan deploy vercel
```

## CLI Commands

### Core Commands

```bash
# Initialize new project
silan init <project-name> [--template <template-name>]

# Development server with hot reload
silan dev [--port 3000] [--host localhost]

# Build static website
silan build [--output dist] [--watch]

# Deploy to hosting service
silan deploy <target> [--build-first]

# Sync content to database backend (hybrid mode)
silan sync [--api-endpoint http://localhost:8080] [--dry-run]
```

### Content Management

```bash
# Create new content
silan new project "My New Project"
silan new blog "My Blog Post"
silan new idea "Research Idea"
silan new plan "2025 Goals"

# Validate all content files
silan validate
```

### Theme Management

```bash
# List available themes
silan theme list

# Install new theme
silan theme install <theme-name>

# Set active theme
silan theme set <theme-name>
```

## Content Types

### Personal Information

Edit `content/resume/personal.md`:

```markdown
---
name: "Your Name"
title: "Your Professional Title"
current: "What you're currently doing"
location: "Your Location"
email: "your.email@example.com"
website: "https://yourwebsite.com"
social:
  - type: "linkedin"
    url: "https://linkedin.com/in/yourprofile"
  - type: "github"
    url: "https://github.com/yourusername"
languages:
  zh:
    name: "你的名字"
    title: "你的职业头衔"
---

# About Me

Write your bio here...
```

### Projects

Create project files in `content/projects/`:

```markdown
---
title: "Project Title"
slug: "project-title"
description: "Brief description"
type: "Web Application"
status: "active"
featured: true
technologies:
  - "Python"
  - "React"
  - "PostgreSQL"
github: "https://github.com/username/project"
demo: "https://project-demo.com"
---

# Project Title

## Overview
Project description...

## Features
- Feature 1
- Feature 2

## Technical Details
Architecture and implementation details...
```

### Blog Posts

Create blog posts in `content/blog/articles/`:

```markdown
---
title: "Blog Post Title"
slug: "blog-post-title"
excerpt: "Brief excerpt of the post"
type: "article"
publishDate: "2024-01-01"
tags:
  - "Technology"
  - "Programming"
categories:
  - "Tutorial"
---

# Blog Post Title

Your blog content here...
```

### Ideas

Document research ideas in `content/ideas/`:

```markdown
---
title: "Research Idea"
slug: "research-idea"
status: "hypothesis"
priority: "high"
collaborationNeeded: true
public: false
---

# Research Idea

## Abstract
Brief summary...

## Methodology
How you plan to execute...
```

## Configuration

Edit `silan-config.json` to customize your website:

```json
{
  "site": {
    "title": "Your Website Title",
    "description": "Website description",
    "url": "https://yourwebsite.com",
    "author": "Your Name",
    "email": "your.email@example.com"
  },
  "theme": {
    "name": "academic",
    "colors": {
      "primary": "#3b82f6",
      "secondary": "#8b5cf6"
    }
  },
  "features": {
    "resume": true,
    "projects": true,
    "blog": true,
    "ideas": true,
    "analytics": false
  },
  "deployment": {
    "type": "github-pages",
    "repository": "username/username.github.io"
  }
}
```

## Hybrid Mode (Optional)

For advanced analytics and dynamic features, you can sync your content to a database backend:

```bash
# Start the Go backend (see hybrid-database-system/)
cd ../hybrid-database-system
docker-compose up -d

# Sync your content
silan sync --api-endpoint http://localhost:8080
```

This enables:
- Real-time analytics
- Content performance tracking
- API access to your content
- Dynamic features

## Development

### Setting up Development Environment

```bash
# Clone the repository
git clone https://github.com/silanhu/silan-personal-website.git
cd silan-personal-website/backend/simple-file-system

# Install in development mode
pip install -e ".[dev]"

# Run tests
pytest

# Format code
black silan/

# Type checking
mypy silan/
```

### Project Structure

```
silan/
├── __init__.py
├── cli.py                    # Main CLI entry point
├── commands/                 # CLI command implementations
│   ├── init.py              # Project initialization
│   ├── build.py             # Static site generation
│   ├── dev.py               # Development server
│   ├── sync.py              # Database synchronization
│   ├── deploy.py            # Deployment
│   ├── new.py               # Content creation
│   └── validate.py          # Content validation
├── parsers/                 # Content processing
│   └── markdown.py          # Markdown parsing
├── generators/              # Site generation
│   └── static.py            # Static site generator
└── utils/                   # Utilities
    └── config.py            # Configuration management
```

## Contributing

1. Fork the repository
2. Create a feature branch
3. Make your changes
4. Add tests
5. Submit a pull request

## License

MIT License - see LICENSE file for details.

## Support

- **Documentation**: Check the docs/ directory
- **Issues**: Report bugs on GitHub Issues
- **Discussions**: Join GitHub Discussions for questions

## Roadmap

- [ ] Theme marketplace
- [ ] Plugin system
- [ ] Advanced SEO optimization
- [ ] Performance monitoring
- [ ] Multi-site management
- [ ] Collaboration features

---

Built with ❤️ by [Silan Hu](https://github.com/silanhu)
