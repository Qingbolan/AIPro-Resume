// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AwardsColumns holds the columns for the "awards" table.
	AwardsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString, Size: 300},
		{Name: "awarding_organization", Type: field.TypeString, Size: 200},
		{Name: "award_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "date"}},
		{Name: "award_type", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "certificate_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// AwardsTable holds the schema information for the "awards" table.
	AwardsTable = &schema.Table{
		Name:       "awards",
		Columns:    AwardsColumns,
		PrimaryKey: []*schema.Column{AwardsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "awards_users_awards",
				Columns:    []*schema.Column{AwardsColumns[11]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// AwardTranslationsColumns holds the columns for the "award_translations" table.
	AwardTranslationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString, Size: 300},
		{Name: "awarding_organization", Type: field.TypeString, Size: 200},
		{Name: "award_type", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "award_id", Type: field.TypeUUID},
		{Name: "language_code", Type: field.TypeString, Size: 5},
	}
	// AwardTranslationsTable holds the schema information for the "award_translations" table.
	AwardTranslationsTable = &schema.Table{
		Name:       "award_translations",
		Columns:    AwardTranslationsColumns,
		PrimaryKey: []*schema.Column{AwardTranslationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "award_translations_awards_translations",
				Columns:    []*schema.Column{AwardTranslationsColumns[7]},
				RefColumns: []*schema.Column{AwardsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "award_translations_languages_award_translations",
				Columns:    []*schema.Column{AwardTranslationsColumns[8]},
				RefColumns: []*schema.Column{LanguagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// BlogCategoriesColumns holds the columns for the "blog_categories" table.
	BlogCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "slug", Type: field.TypeString, Unique: true, Size: 100},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "color", Type: field.TypeString, Nullable: true, Size: 7},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// BlogCategoriesTable holds the schema information for the "blog_categories" table.
	BlogCategoriesTable = &schema.Table{
		Name:       "blog_categories",
		Columns:    BlogCategoriesColumns,
		PrimaryKey: []*schema.Column{BlogCategoriesColumns[0]},
	}
	// BlogCategoryTranslationsColumns holds the columns for the "blog_category_translations" table.
	BlogCategoryTranslationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "blog_category_id", Type: field.TypeUUID},
		{Name: "language_code", Type: field.TypeString, Size: 5},
	}
	// BlogCategoryTranslationsTable holds the schema information for the "blog_category_translations" table.
	BlogCategoryTranslationsTable = &schema.Table{
		Name:       "blog_category_translations",
		Columns:    BlogCategoryTranslationsColumns,
		PrimaryKey: []*schema.Column{BlogCategoryTranslationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "blog_category_translations_blog_categories_translations",
				Columns:    []*schema.Column{BlogCategoryTranslationsColumns[5]},
				RefColumns: []*schema.Column{BlogCategoriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "blog_category_translations_languages_blog_category_translations",
				Columns:    []*schema.Column{BlogCategoryTranslationsColumns[6]},
				RefColumns: []*schema.Column{LanguagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// BlogCommentsColumns holds the columns for the "blog_comments" table.
	BlogCommentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "author_name", Type: field.TypeString, Size: 100},
		{Name: "author_email", Type: field.TypeString, Size: 255},
		{Name: "author_website", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "is_approved", Type: field.TypeBool, Default: false},
		{Name: "ip_address", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "user_agent", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "parent_id", Type: field.TypeUUID, Nullable: true},
		{Name: "blog_post_id", Type: field.TypeUUID},
	}
	// BlogCommentsTable holds the schema information for the "blog_comments" table.
	BlogCommentsTable = &schema.Table{
		Name:       "blog_comments",
		Columns:    BlogCommentsColumns,
		PrimaryKey: []*schema.Column{BlogCommentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "blog_comments_blog_comments_parent",
				Columns:    []*schema.Column{BlogCommentsColumns[10]},
				RefColumns: []*schema.Column{BlogCommentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "blog_comments_blog_posts_comments",
				Columns:    []*schema.Column{BlogCommentsColumns[11]},
				RefColumns: []*schema.Column{BlogPostsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// BlogPostsColumns holds the columns for the "blog_posts" table.
	BlogPostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString, Size: 500},
		{Name: "slug", Type: field.TypeString, Unique: true, Size: 300},
		{Name: "excerpt", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "content_type", Type: field.TypeEnum, Enums: []string{"article", "vlog", "podcast", "tutorial"}, Default: "article"},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"draft", "published", "archived"}, Default: "draft"},
		{Name: "is_featured", Type: field.TypeBool, Default: false},
		{Name: "featured_image_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "reading_time_minutes", Type: field.TypeInt, Nullable: true},
		{Name: "view_count", Type: field.TypeInt, Default: 0},
		{Name: "like_count", Type: field.TypeInt, Default: 0},
		{Name: "comment_count", Type: field.TypeInt, Default: 0},
		{Name: "published_at", Type: field.TypeTime, Nullable: true},
		{Name: "series_order", Type: field.TypeInt, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "category_id", Type: field.TypeUUID, Nullable: true},
		{Name: "series_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// BlogPostsTable holds the schema information for the "blog_posts" table.
	BlogPostsTable = &schema.Table{
		Name:       "blog_posts",
		Columns:    BlogPostsColumns,
		PrimaryKey: []*schema.Column{BlogPostsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "blog_posts_blog_categories_blog_posts",
				Columns:    []*schema.Column{BlogPostsColumns[17]},
				RefColumns: []*schema.Column{BlogCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "blog_posts_blog_series_blog_posts",
				Columns:    []*schema.Column{BlogPostsColumns[18]},
				RefColumns: []*schema.Column{BlogSeriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "blog_posts_users_blog_posts",
				Columns:    []*schema.Column{BlogPostsColumns[19]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// BlogPostTagsColumns holds the columns for the "blog_post_tags" table.
	BlogPostTagsColumns = []*schema.Column{
		{Name: "created_at", Type: field.TypeTime},
		{Name: "blog_post_id", Type: field.TypeUUID},
		{Name: "blog_tag_id", Type: field.TypeUUID},
	}
	// BlogPostTagsTable holds the schema information for the "blog_post_tags" table.
	BlogPostTagsTable = &schema.Table{
		Name:       "blog_post_tags",
		Columns:    BlogPostTagsColumns,
		PrimaryKey: []*schema.Column{BlogPostTagsColumns[1], BlogPostTagsColumns[2]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "blog_post_tags_blog_posts_blog_post",
				Columns:    []*schema.Column{BlogPostTagsColumns[1]},
				RefColumns: []*schema.Column{BlogPostsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "blog_post_tags_blog_tags_blog_tag",
				Columns:    []*schema.Column{BlogPostTagsColumns[2]},
				RefColumns: []*schema.Column{BlogTagsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// BlogPostTranslationsColumns holds the columns for the "blog_post_translations" table.
	BlogPostTranslationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString, Size: 500},
		{Name: "excerpt", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "blog_post_id", Type: field.TypeUUID},
		{Name: "language_code", Type: field.TypeString, Size: 5},
	}
	// BlogPostTranslationsTable holds the schema information for the "blog_post_translations" table.
	BlogPostTranslationsTable = &schema.Table{
		Name:       "blog_post_translations",
		Columns:    BlogPostTranslationsColumns,
		PrimaryKey: []*schema.Column{BlogPostTranslationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "blog_post_translations_blog_posts_translations",
				Columns:    []*schema.Column{BlogPostTranslationsColumns[6]},
				RefColumns: []*schema.Column{BlogPostsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "blog_post_translations_languages_blog_post_translations",
				Columns:    []*schema.Column{BlogPostTranslationsColumns[7]},
				RefColumns: []*schema.Column{LanguagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// BlogSeriesColumns holds the columns for the "blog_series" table.
	BlogSeriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString, Size: 300},
		{Name: "slug", Type: field.TypeString, Unique: true, Size: 300},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "thumbnail_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "status", Type: field.TypeString, Size: 20, Default: "active"},
		{Name: "episode_count", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// BlogSeriesTable holds the schema information for the "blog_series" table.
	BlogSeriesTable = &schema.Table{
		Name:       "blog_series",
		Columns:    BlogSeriesColumns,
		PrimaryKey: []*schema.Column{BlogSeriesColumns[0]},
	}
	// BlogSeriesTranslationsColumns holds the columns for the "blog_series_translations" table.
	BlogSeriesTranslationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString, Size: 300},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "blog_series_id", Type: field.TypeUUID},
		{Name: "language_code", Type: field.TypeString, Size: 5},
	}
	// BlogSeriesTranslationsTable holds the schema information for the "blog_series_translations" table.
	BlogSeriesTranslationsTable = &schema.Table{
		Name:       "blog_series_translations",
		Columns:    BlogSeriesTranslationsColumns,
		PrimaryKey: []*schema.Column{BlogSeriesTranslationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "blog_series_translations_blog_series_translations",
				Columns:    []*schema.Column{BlogSeriesTranslationsColumns[5]},
				RefColumns: []*schema.Column{BlogSeriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "blog_series_translations_languages_blog_series_translations",
				Columns:    []*schema.Column{BlogSeriesTranslationsColumns[6]},
				RefColumns: []*schema.Column{LanguagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// BlogTagsColumns holds the columns for the "blog_tags" table.
	BlogTagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Size: 50},
		{Name: "slug", Type: field.TypeString, Unique: true, Size: 50},
		{Name: "usage_count", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
	}
	// BlogTagsTable holds the schema information for the "blog_tags" table.
	BlogTagsTable = &schema.Table{
		Name:       "blog_tags",
		Columns:    BlogTagsColumns,
		PrimaryKey: []*schema.Column{BlogTagsColumns[0]},
	}
	// EducationColumns holds the columns for the "education" table.
	EducationColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "institution", Type: field.TypeString, Size: 200},
		{Name: "degree", Type: field.TypeString, Size: 200},
		{Name: "field_of_study", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "start_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "date"}},
		{Name: "end_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "date"}},
		{Name: "is_current", Type: field.TypeBool, Default: false},
		{Name: "gpa", Type: field.TypeString, Nullable: true, Size: 10},
		{Name: "location", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "institution_website", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "institution_logo_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// EducationTable holds the schema information for the "education" table.
	EducationTable = &schema.Table{
		Name:       "education",
		Columns:    EducationColumns,
		PrimaryKey: []*schema.Column{EducationColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "education_users_education",
				Columns:    []*schema.Column{EducationColumns[14]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// EducationDetailsColumns holds the columns for the "education_details" table.
	EducationDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "detail_text", Type: field.TypeString, Size: 2147483647},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "education_id", Type: field.TypeUUID},
	}
	// EducationDetailsTable holds the schema information for the "education_details" table.
	EducationDetailsTable = &schema.Table{
		Name:       "education_details",
		Columns:    EducationDetailsColumns,
		PrimaryKey: []*schema.Column{EducationDetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "education_details_education_details",
				Columns:    []*schema.Column{EducationDetailsColumns[5]},
				RefColumns: []*schema.Column{EducationColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// EducationDetailTranslationsColumns holds the columns for the "education_detail_translations" table.
	EducationDetailTranslationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "detail_text", Type: field.TypeString, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "education_detail_id", Type: field.TypeUUID},
		{Name: "language_code", Type: field.TypeString, Size: 5},
	}
	// EducationDetailTranslationsTable holds the schema information for the "education_detail_translations" table.
	EducationDetailTranslationsTable = &schema.Table{
		Name:       "education_detail_translations",
		Columns:    EducationDetailTranslationsColumns,
		PrimaryKey: []*schema.Column{EducationDetailTranslationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "education_detail_translations_education_details_translations",
				Columns:    []*schema.Column{EducationDetailTranslationsColumns[4]},
				RefColumns: []*schema.Column{EducationDetailsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "education_detail_translations_languages_education_detail_translations",
				Columns:    []*schema.Column{EducationDetailTranslationsColumns[5]},
				RefColumns: []*schema.Column{LanguagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// EducationTranslationsColumns holds the columns for the "education_translations" table.
	EducationTranslationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "institution", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "degree", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "field_of_study", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "location", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "education_id", Type: field.TypeUUID},
		{Name: "language_code", Type: field.TypeString, Size: 5},
	}
	// EducationTranslationsTable holds the schema information for the "education_translations" table.
	EducationTranslationsTable = &schema.Table{
		Name:       "education_translations",
		Columns:    EducationTranslationsColumns,
		PrimaryKey: []*schema.Column{EducationTranslationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "education_translations_education_translations",
				Columns:    []*schema.Column{EducationTranslationsColumns[6]},
				RefColumns: []*schema.Column{EducationColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "education_translations_languages_education_translations",
				Columns:    []*schema.Column{EducationTranslationsColumns[7]},
				RefColumns: []*schema.Column{LanguagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// IdeasColumns holds the columns for the "ideas" table.
	IdeasColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString, Size: 300},
		{Name: "slug", Type: field.TypeString, Unique: true, Size: 200},
		{Name: "abstract", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "motivation", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "methodology", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "expected_outcome", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"draft", "hypothesis", "experimenting", "validating", "published", "concluded"}, Default: "draft"},
		{Name: "priority", Type: field.TypeEnum, Enums: []string{"low", "medium", "high", "urgent"}, Default: "medium"},
		{Name: "estimated_duration_months", Type: field.TypeInt, Nullable: true},
		{Name: "required_resources", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "collaboration_needed", Type: field.TypeBool, Default: false},
		{Name: "funding_required", Type: field.TypeBool, Default: false},
		{Name: "estimated_budget", Type: field.TypeFloat64, Nullable: true},
		{Name: "is_public", Type: field.TypeBool, Default: false},
		{Name: "view_count", Type: field.TypeInt, Default: 0},
		{Name: "like_count", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// IdeasTable holds the schema information for the "ideas" table.
	IdeasTable = &schema.Table{
		Name:       "ideas",
		Columns:    IdeasColumns,
		PrimaryKey: []*schema.Column{IdeasColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ideas_users_ideas",
				Columns:    []*schema.Column{IdeasColumns[19]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// IdeaTranslationsColumns holds the columns for the "idea_translations" table.
	IdeaTranslationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString, Size: 300},
		{Name: "abstract", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "motivation", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "methodology", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "expected_outcome", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "required_resources", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "idea_id", Type: field.TypeUUID},
		{Name: "language_code", Type: field.TypeString, Size: 5},
	}
	// IdeaTranslationsTable holds the schema information for the "idea_translations" table.
	IdeaTranslationsTable = &schema.Table{
		Name:       "idea_translations",
		Columns:    IdeaTranslationsColumns,
		PrimaryKey: []*schema.Column{IdeaTranslationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "idea_translations_ideas_translations",
				Columns:    []*schema.Column{IdeaTranslationsColumns[8]},
				RefColumns: []*schema.Column{IdeasColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "idea_translations_languages_idea_translations",
				Columns:    []*schema.Column{IdeaTranslationsColumns[9]},
				RefColumns: []*schema.Column{LanguagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// LanguagesColumns holds the columns for the "languages" table.
	LanguagesColumns = []*schema.Column{
		{Name: "code", Type: field.TypeString, Unique: true, Size: 5},
		{Name: "name", Type: field.TypeString, Size: 50},
		{Name: "native_name", Type: field.TypeString, Size: 50},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// LanguagesTable holds the schema information for the "languages" table.
	LanguagesTable = &schema.Table{
		Name:       "languages",
		Columns:    LanguagesColumns,
		PrimaryKey: []*schema.Column{LanguagesColumns[0]},
	}
	// PersonalInfoColumns holds the columns for the "personal_info" table.
	PersonalInfoColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "full_name", Type: field.TypeString, Size: 200},
		{Name: "title", Type: field.TypeString, Size: 200},
		{Name: "current_status", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "phone", Type: field.TypeString, Nullable: true, Size: 20},
		{Name: "email", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "location", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "website", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "avatar_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "is_primary", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// PersonalInfoTable holds the schema information for the "personal_info" table.
	PersonalInfoTable = &schema.Table{
		Name:       "personal_info",
		Columns:    PersonalInfoColumns,
		PrimaryKey: []*schema.Column{PersonalInfoColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "personal_info_users_personal_info",
				Columns:    []*schema.Column{PersonalInfoColumns[12]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// PersonalInfoTranslationsColumns holds the columns for the "personal_info_translations" table.
	PersonalInfoTranslationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "full_name", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "title", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "current_status", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "location", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "language_code", Type: field.TypeString, Size: 5},
		{Name: "personal_info_id", Type: field.TypeUUID},
	}
	// PersonalInfoTranslationsTable holds the schema information for the "personal_info_translations" table.
	PersonalInfoTranslationsTable = &schema.Table{
		Name:       "personal_info_translations",
		Columns:    PersonalInfoTranslationsColumns,
		PrimaryKey: []*schema.Column{PersonalInfoTranslationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "personal_info_translations_languages_personal_info_translations",
				Columns:    []*schema.Column{PersonalInfoTranslationsColumns[6]},
				RefColumns: []*schema.Column{LanguagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "personal_info_translations_personal_info_translations",
				Columns:    []*schema.Column{PersonalInfoTranslationsColumns[7]},
				RefColumns: []*schema.Column{PersonalInfoColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ProjectsColumns holds the columns for the "projects" table.
	ProjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString, Size: 300},
		{Name: "slug", Type: field.TypeString, Unique: true, Size: 200},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "project_type", Type: field.TypeString, Size: 50, Default: "Web Application"},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"active", "completed", "paused", "cancelled"}, Default: "active"},
		{Name: "start_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "date"}},
		{Name: "end_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "date"}},
		{Name: "github_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "demo_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "documentation_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "thumbnail_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "is_featured", Type: field.TypeBool, Default: false},
		{Name: "is_public", Type: field.TypeBool, Default: true},
		{Name: "view_count", Type: field.TypeInt, Default: 0},
		{Name: "star_count", Type: field.TypeInt, Default: 0},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// ProjectsTable holds the schema information for the "projects" table.
	ProjectsTable = &schema.Table{
		Name:       "projects",
		Columns:    ProjectsColumns,
		PrimaryKey: []*schema.Column{ProjectsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "projects_users_projects",
				Columns:    []*schema.Column{ProjectsColumns[19]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ProjectDetailsColumns holds the columns for the "project_details" table.
	ProjectDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "detailed_description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "goals", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "challenges", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "solutions", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "lessons_learned", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "future_enhancements", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "license", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "version", Type: field.TypeString, Nullable: true, Size: 20},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "project_id", Type: field.TypeUUID, Unique: true},
	}
	// ProjectDetailsTable holds the schema information for the "project_details" table.
	ProjectDetailsTable = &schema.Table{
		Name:       "project_details",
		Columns:    ProjectDetailsColumns,
		PrimaryKey: []*schema.Column{ProjectDetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "project_details_projects_details",
				Columns:    []*schema.Column{ProjectDetailsColumns[11]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ProjectDetailTranslationsColumns holds the columns for the "project_detail_translations" table.
	ProjectDetailTranslationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "detailed_description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "goals", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "challenges", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "solutions", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "lessons_learned", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "future_enhancements", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "language_code", Type: field.TypeString, Size: 5},
		{Name: "project_detail_id", Type: field.TypeUUID},
	}
	// ProjectDetailTranslationsTable holds the schema information for the "project_detail_translations" table.
	ProjectDetailTranslationsTable = &schema.Table{
		Name:       "project_detail_translations",
		Columns:    ProjectDetailTranslationsColumns,
		PrimaryKey: []*schema.Column{ProjectDetailTranslationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "project_detail_translations_languages_project_detail_translations",
				Columns:    []*schema.Column{ProjectDetailTranslationsColumns[9]},
				RefColumns: []*schema.Column{LanguagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "project_detail_translations_project_details_translations",
				Columns:    []*schema.Column{ProjectDetailTranslationsColumns[10]},
				RefColumns: []*schema.Column{ProjectDetailsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ProjectImagesColumns holds the columns for the "project_images" table.
	ProjectImagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "image_url", Type: field.TypeString, Size: 500},
		{Name: "alt_text", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "caption", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "image_type", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "project_id", Type: field.TypeUUID},
	}
	// ProjectImagesTable holds the schema information for the "project_images" table.
	ProjectImagesTable = &schema.Table{
		Name:       "project_images",
		Columns:    ProjectImagesColumns,
		PrimaryKey: []*schema.Column{ProjectImagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "project_images_projects_images",
				Columns:    []*schema.Column{ProjectImagesColumns[8]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ProjectImageTranslationsColumns holds the columns for the "project_image_translations" table.
	ProjectImageTranslationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "alt_text", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "caption", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "language_code", Type: field.TypeString, Size: 5},
		{Name: "project_image_id", Type: field.TypeUUID},
	}
	// ProjectImageTranslationsTable holds the schema information for the "project_image_translations" table.
	ProjectImageTranslationsTable = &schema.Table{
		Name:       "project_image_translations",
		Columns:    ProjectImageTranslationsColumns,
		PrimaryKey: []*schema.Column{ProjectImageTranslationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "project_image_translations_languages_project_image_translations",
				Columns:    []*schema.Column{ProjectImageTranslationsColumns[5]},
				RefColumns: []*schema.Column{LanguagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "project_image_translations_project_images_translations",
				Columns:    []*schema.Column{ProjectImageTranslationsColumns[6]},
				RefColumns: []*schema.Column{ProjectImagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ProjectRelationshipsColumns holds the columns for the "project_relationships" table.
	ProjectRelationshipsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "relationship_type", Type: field.TypeString, Size: 50},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "source_project_id", Type: field.TypeUUID},
		{Name: "target_project_id", Type: field.TypeUUID},
	}
	// ProjectRelationshipsTable holds the schema information for the "project_relationships" table.
	ProjectRelationshipsTable = &schema.Table{
		Name:       "project_relationships",
		Columns:    ProjectRelationshipsColumns,
		PrimaryKey: []*schema.Column{ProjectRelationshipsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "project_relationships_projects_source_relationships",
				Columns:    []*schema.Column{ProjectRelationshipsColumns[4]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "project_relationships_projects_target_relationships",
				Columns:    []*schema.Column{ProjectRelationshipsColumns[5]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ProjectTechnologiesColumns holds the columns for the "project_technologies" table.
	ProjectTechnologiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "technology_name", Type: field.TypeString, Size: 100},
		{Name: "technology_type", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "project_id", Type: field.TypeUUID},
	}
	// ProjectTechnologiesTable holds the schema information for the "project_technologies" table.
	ProjectTechnologiesTable = &schema.Table{
		Name:       "project_technologies",
		Columns:    ProjectTechnologiesColumns,
		PrimaryKey: []*schema.Column{ProjectTechnologiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "project_technologies_projects_technologies",
				Columns:    []*schema.Column{ProjectTechnologiesColumns[5]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ProjectTranslationsColumns holds the columns for the "project_translations" table.
	ProjectTranslationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString, Size: 300},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "project_type", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "language_code", Type: field.TypeString, Size: 5},
		{Name: "project_id", Type: field.TypeUUID},
	}
	// ProjectTranslationsTable holds the schema information for the "project_translations" table.
	ProjectTranslationsTable = &schema.Table{
		Name:       "project_translations",
		Columns:    ProjectTranslationsColumns,
		PrimaryKey: []*schema.Column{ProjectTranslationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "project_translations_languages_project_translations",
				Columns:    []*schema.Column{ProjectTranslationsColumns[5]},
				RefColumns: []*schema.Column{LanguagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "project_translations_projects_translations",
				Columns:    []*schema.Column{ProjectTranslationsColumns[6]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// PublicationsColumns holds the columns for the "publications" table.
	PublicationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString, Size: 500},
		{Name: "publication_type", Type: field.TypeString, Size: 50},
		{Name: "journal_name", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "conference_name", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "volume", Type: field.TypeString, Nullable: true, Size: 20},
		{Name: "issue", Type: field.TypeString, Nullable: true, Size: 20},
		{Name: "pages", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "publication_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "date"}},
		{Name: "doi", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "isbn", Type: field.TypeString, Nullable: true, Size: 20},
		{Name: "url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "pdf_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "citation_count", Type: field.TypeInt, Default: 0},
		{Name: "is_peer_reviewed", Type: field.TypeBool, Default: false},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// PublicationsTable holds the schema information for the "publications" table.
	PublicationsTable = &schema.Table{
		Name:       "publications",
		Columns:    PublicationsColumns,
		PrimaryKey: []*schema.Column{PublicationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "publications_users_publications",
				Columns:    []*schema.Column{PublicationsColumns[18]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// PublicationAuthorsColumns holds the columns for the "publication_authors" table.
	PublicationAuthorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "author_name", Type: field.TypeString, Size: 200},
		{Name: "author_order", Type: field.TypeInt},
		{Name: "is_corresponding", Type: field.TypeBool, Default: false},
		{Name: "affiliation", Type: field.TypeString, Nullable: true, Size: 300},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "publication_id", Type: field.TypeUUID},
	}
	// PublicationAuthorsTable holds the schema information for the "publication_authors" table.
	PublicationAuthorsTable = &schema.Table{
		Name:       "publication_authors",
		Columns:    PublicationAuthorsColumns,
		PrimaryKey: []*schema.Column{PublicationAuthorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "publication_authors_publications_authors",
				Columns:    []*schema.Column{PublicationAuthorsColumns[7]},
				RefColumns: []*schema.Column{PublicationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// PublicationTranslationsColumns holds the columns for the "publication_translations" table.
	PublicationTranslationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString, Size: 500},
		{Name: "journal_name", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "conference_name", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "language_code", Type: field.TypeString, Size: 5},
		{Name: "publication_id", Type: field.TypeUUID},
	}
	// PublicationTranslationsTable holds the schema information for the "publication_translations" table.
	PublicationTranslationsTable = &schema.Table{
		Name:       "publication_translations",
		Columns:    PublicationTranslationsColumns,
		PrimaryKey: []*schema.Column{PublicationTranslationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "publication_translations_languages_publication_translations",
				Columns:    []*schema.Column{PublicationTranslationsColumns[6]},
				RefColumns: []*schema.Column{LanguagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "publication_translations_publications_translations",
				Columns:    []*schema.Column{PublicationTranslationsColumns[7]},
				RefColumns: []*schema.Column{PublicationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ResearchProjectsColumns holds the columns for the "research_projects" table.
	ResearchProjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString, Size: 300},
		{Name: "start_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "date"}},
		{Name: "end_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "date"}},
		{Name: "is_ongoing", Type: field.TypeBool, Default: false},
		{Name: "location", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "research_type", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "funding_source", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "funding_amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// ResearchProjectsTable holds the schema information for the "research_projects" table.
	ResearchProjectsTable = &schema.Table{
		Name:       "research_projects",
		Columns:    ResearchProjectsColumns,
		PrimaryKey: []*schema.Column{ResearchProjectsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "research_projects_users_research_projects",
				Columns:    []*schema.Column{ResearchProjectsColumns[12]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ResearchProjectDetailsColumns holds the columns for the "research_project_details" table.
	ResearchProjectDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "detail_text", Type: field.TypeString, Size: 2147483647},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "research_project_id", Type: field.TypeUUID},
	}
	// ResearchProjectDetailsTable holds the schema information for the "research_project_details" table.
	ResearchProjectDetailsTable = &schema.Table{
		Name:       "research_project_details",
		Columns:    ResearchProjectDetailsColumns,
		PrimaryKey: []*schema.Column{ResearchProjectDetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "research_project_details_research_projects_details",
				Columns:    []*schema.Column{ResearchProjectDetailsColumns[5]},
				RefColumns: []*schema.Column{ResearchProjectsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ResearchProjectDetailTranslationsColumns holds the columns for the "research_project_detail_translations" table.
	ResearchProjectDetailTranslationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "detail_text", Type: field.TypeString, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "language_code", Type: field.TypeString, Size: 5},
		{Name: "research_project_detail_id", Type: field.TypeUUID},
	}
	// ResearchProjectDetailTranslationsTable holds the schema information for the "research_project_detail_translations" table.
	ResearchProjectDetailTranslationsTable = &schema.Table{
		Name:       "research_project_detail_translations",
		Columns:    ResearchProjectDetailTranslationsColumns,
		PrimaryKey: []*schema.Column{ResearchProjectDetailTranslationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "research_project_detail_translations_languages_research_project_detail_translations",
				Columns:    []*schema.Column{ResearchProjectDetailTranslationsColumns[4]},
				RefColumns: []*schema.Column{LanguagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "research_project_detail_translations_research_project_details_translations",
				Columns:    []*schema.Column{ResearchProjectDetailTranslationsColumns[5]},
				RefColumns: []*schema.Column{ResearchProjectDetailsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ResearchProjectTranslationsColumns holds the columns for the "research_project_translations" table.
	ResearchProjectTranslationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString, Size: 300},
		{Name: "location", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "research_type", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "funding_source", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "language_code", Type: field.TypeString, Size: 5},
		{Name: "research_project_id", Type: field.TypeUUID},
	}
	// ResearchProjectTranslationsTable holds the schema information for the "research_project_translations" table.
	ResearchProjectTranslationsTable = &schema.Table{
		Name:       "research_project_translations",
		Columns:    ResearchProjectTranslationsColumns,
		PrimaryKey: []*schema.Column{ResearchProjectTranslationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "research_project_translations_languages_research_project_translations",
				Columns:    []*schema.Column{ResearchProjectTranslationsColumns[7]},
				RefColumns: []*schema.Column{LanguagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "research_project_translations_research_projects_translations",
				Columns:    []*schema.Column{ResearchProjectTranslationsColumns[8]},
				RefColumns: []*schema.Column{ResearchProjectsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SocialLinksColumns holds the columns for the "social_links" table.
	SocialLinksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "platform", Type: field.TypeString, Size: 50},
		{Name: "url", Type: field.TypeString, Size: 500},
		{Name: "display_name", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "personal_info_id", Type: field.TypeUUID},
	}
	// SocialLinksTable holds the schema information for the "social_links" table.
	SocialLinksTable = &schema.Table{
		Name:       "social_links",
		Columns:    SocialLinksColumns,
		PrimaryKey: []*schema.Column{SocialLinksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "social_links_personal_info_social_links",
				Columns:    []*schema.Column{SocialLinksColumns[7]},
				RefColumns: []*schema.Column{PersonalInfoColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "username", Type: field.TypeString, Unique: true, Size: 50},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "password_hash", Type: field.TypeString, Size: 255},
		{Name: "first_name", Type: field.TypeString, Size: 100},
		{Name: "last_name", Type: field.TypeString, Size: 100},
		{Name: "avatar_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "bio", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "is_admin", Type: field.TypeBool, Default: false},
		{Name: "last_login_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// WorkExperienceColumns holds the columns for the "work_experience" table.
	WorkExperienceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "company", Type: field.TypeString, Size: 200},
		{Name: "position", Type: field.TypeString, Size: 200},
		{Name: "start_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "date"}},
		{Name: "end_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "date"}},
		{Name: "is_current", Type: field.TypeBool, Default: false},
		{Name: "location", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "company_website", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "company_logo_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// WorkExperienceTable holds the schema information for the "work_experience" table.
	WorkExperienceTable = &schema.Table{
		Name:       "work_experience",
		Columns:    WorkExperienceColumns,
		PrimaryKey: []*schema.Column{WorkExperienceColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "work_experience_users_work_experience",
				Columns:    []*schema.Column{WorkExperienceColumns[12]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// WorkExperienceDetailsColumns holds the columns for the "work_experience_details" table.
	WorkExperienceDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "detail_text", Type: field.TypeString, Size: 2147483647},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "work_experience_id", Type: field.TypeUUID},
	}
	// WorkExperienceDetailsTable holds the schema information for the "work_experience_details" table.
	WorkExperienceDetailsTable = &schema.Table{
		Name:       "work_experience_details",
		Columns:    WorkExperienceDetailsColumns,
		PrimaryKey: []*schema.Column{WorkExperienceDetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "work_experience_details_work_experience_details",
				Columns:    []*schema.Column{WorkExperienceDetailsColumns[5]},
				RefColumns: []*schema.Column{WorkExperienceColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// WorkExperienceDetailTranslationsColumns holds the columns for the "work_experience_detail_translations" table.
	WorkExperienceDetailTranslationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "detail_text", Type: field.TypeString, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "language_code", Type: field.TypeString, Size: 5},
		{Name: "work_experience_detail_id", Type: field.TypeUUID},
	}
	// WorkExperienceDetailTranslationsTable holds the schema information for the "work_experience_detail_translations" table.
	WorkExperienceDetailTranslationsTable = &schema.Table{
		Name:       "work_experience_detail_translations",
		Columns:    WorkExperienceDetailTranslationsColumns,
		PrimaryKey: []*schema.Column{WorkExperienceDetailTranslationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "work_experience_detail_translations_languages_work_experience_detail_translations",
				Columns:    []*schema.Column{WorkExperienceDetailTranslationsColumns[4]},
				RefColumns: []*schema.Column{LanguagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "work_experience_detail_translations_work_experience_details_translations",
				Columns:    []*schema.Column{WorkExperienceDetailTranslationsColumns[5]},
				RefColumns: []*schema.Column{WorkExperienceDetailsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// WorkExperienceTranslationsColumns holds the columns for the "work_experience_translations" table.
	WorkExperienceTranslationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "company", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "position", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "location", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "language_code", Type: field.TypeString, Size: 5},
		{Name: "work_experience_id", Type: field.TypeUUID},
	}
	// WorkExperienceTranslationsTable holds the schema information for the "work_experience_translations" table.
	WorkExperienceTranslationsTable = &schema.Table{
		Name:       "work_experience_translations",
		Columns:    WorkExperienceTranslationsColumns,
		PrimaryKey: []*schema.Column{WorkExperienceTranslationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "work_experience_translations_languages_work_experience_translations",
				Columns:    []*schema.Column{WorkExperienceTranslationsColumns[5]},
				RefColumns: []*schema.Column{LanguagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "work_experience_translations_work_experience_translations",
				Columns:    []*schema.Column{WorkExperienceTranslationsColumns[6]},
				RefColumns: []*schema.Column{WorkExperienceColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AwardsTable,
		AwardTranslationsTable,
		BlogCategoriesTable,
		BlogCategoryTranslationsTable,
		BlogCommentsTable,
		BlogPostsTable,
		BlogPostTagsTable,
		BlogPostTranslationsTable,
		BlogSeriesTable,
		BlogSeriesTranslationsTable,
		BlogTagsTable,
		EducationTable,
		EducationDetailsTable,
		EducationDetailTranslationsTable,
		EducationTranslationsTable,
		IdeasTable,
		IdeaTranslationsTable,
		LanguagesTable,
		PersonalInfoTable,
		PersonalInfoTranslationsTable,
		ProjectsTable,
		ProjectDetailsTable,
		ProjectDetailTranslationsTable,
		ProjectImagesTable,
		ProjectImageTranslationsTable,
		ProjectRelationshipsTable,
		ProjectTechnologiesTable,
		ProjectTranslationsTable,
		PublicationsTable,
		PublicationAuthorsTable,
		PublicationTranslationsTable,
		ResearchProjectsTable,
		ResearchProjectDetailsTable,
		ResearchProjectDetailTranslationsTable,
		ResearchProjectTranslationsTable,
		SocialLinksTable,
		UsersTable,
		WorkExperienceTable,
		WorkExperienceDetailsTable,
		WorkExperienceDetailTranslationsTable,
		WorkExperienceTranslationsTable,
	}
)

func init() {
	AwardsTable.ForeignKeys[0].RefTable = UsersTable
	AwardsTable.Annotation = &entsql.Annotation{
		Table: "awards",
	}
	AwardTranslationsTable.ForeignKeys[0].RefTable = AwardsTable
	AwardTranslationsTable.ForeignKeys[1].RefTable = LanguagesTable
	BlogCategoriesTable.Annotation = &entsql.Annotation{
		Table: "blog_categories",
	}
	BlogCategoryTranslationsTable.ForeignKeys[0].RefTable = BlogCategoriesTable
	BlogCategoryTranslationsTable.ForeignKeys[1].RefTable = LanguagesTable
	BlogCommentsTable.ForeignKeys[0].RefTable = BlogCommentsTable
	BlogCommentsTable.ForeignKeys[1].RefTable = BlogPostsTable
	BlogCommentsTable.Annotation = &entsql.Annotation{
		Table: "blog_comments",
	}
	BlogPostsTable.ForeignKeys[0].RefTable = BlogCategoriesTable
	BlogPostsTable.ForeignKeys[1].RefTable = BlogSeriesTable
	BlogPostsTable.ForeignKeys[2].RefTable = UsersTable
	BlogPostsTable.Annotation = &entsql.Annotation{
		Table: "blog_posts",
	}
	BlogPostTagsTable.ForeignKeys[0].RefTable = BlogPostsTable
	BlogPostTagsTable.ForeignKeys[1].RefTable = BlogTagsTable
	BlogPostTagsTable.Annotation = &entsql.Annotation{
		Table: "blog_post_tags",
	}
	BlogPostTranslationsTable.ForeignKeys[0].RefTable = BlogPostsTable
	BlogPostTranslationsTable.ForeignKeys[1].RefTable = LanguagesTable
	BlogSeriesTable.Annotation = &entsql.Annotation{
		Table: "blog_series",
	}
	BlogSeriesTranslationsTable.ForeignKeys[0].RefTable = BlogSeriesTable
	BlogSeriesTranslationsTable.ForeignKeys[1].RefTable = LanguagesTable
	BlogTagsTable.Annotation = &entsql.Annotation{
		Table: "blog_tags",
	}
	EducationTable.ForeignKeys[0].RefTable = UsersTable
	EducationTable.Annotation = &entsql.Annotation{
		Table: "education",
	}
	EducationDetailsTable.ForeignKeys[0].RefTable = EducationTable
	EducationDetailsTable.Annotation = &entsql.Annotation{
		Table: "education_details",
	}
	EducationDetailTranslationsTable.ForeignKeys[0].RefTable = EducationDetailsTable
	EducationDetailTranslationsTable.ForeignKeys[1].RefTable = LanguagesTable
	EducationDetailTranslationsTable.Annotation = &entsql.Annotation{
		Table: "education_detail_translations",
	}
	EducationTranslationsTable.ForeignKeys[0].RefTable = EducationTable
	EducationTranslationsTable.ForeignKeys[1].RefTable = LanguagesTable
	EducationTranslationsTable.Annotation = &entsql.Annotation{
		Table: "education_translations",
	}
	IdeasTable.ForeignKeys[0].RefTable = UsersTable
	IdeasTable.Annotation = &entsql.Annotation{
		Table: "ideas",
	}
	IdeaTranslationsTable.ForeignKeys[0].RefTable = IdeasTable
	IdeaTranslationsTable.ForeignKeys[1].RefTable = LanguagesTable
	LanguagesTable.Annotation = &entsql.Annotation{
		Table: "languages",
	}
	PersonalInfoTable.ForeignKeys[0].RefTable = UsersTable
	PersonalInfoTable.Annotation = &entsql.Annotation{
		Table: "personal_info",
	}
	PersonalInfoTranslationsTable.ForeignKeys[0].RefTable = LanguagesTable
	PersonalInfoTranslationsTable.ForeignKeys[1].RefTable = PersonalInfoTable
	PersonalInfoTranslationsTable.Annotation = &entsql.Annotation{
		Table: "personal_info_translations",
	}
	ProjectsTable.ForeignKeys[0].RefTable = UsersTable
	ProjectsTable.Annotation = &entsql.Annotation{
		Table: "projects",
	}
	ProjectDetailsTable.ForeignKeys[0].RefTable = ProjectsTable
	ProjectDetailsTable.Annotation = &entsql.Annotation{
		Table: "project_details",
	}
	ProjectDetailTranslationsTable.ForeignKeys[0].RefTable = LanguagesTable
	ProjectDetailTranslationsTable.ForeignKeys[1].RefTable = ProjectDetailsTable
	ProjectImagesTable.ForeignKeys[0].RefTable = ProjectsTable
	ProjectImagesTable.Annotation = &entsql.Annotation{
		Table: "project_images",
	}
	ProjectImageTranslationsTable.ForeignKeys[0].RefTable = LanguagesTable
	ProjectImageTranslationsTable.ForeignKeys[1].RefTable = ProjectImagesTable
	ProjectRelationshipsTable.ForeignKeys[0].RefTable = ProjectsTable
	ProjectRelationshipsTable.ForeignKeys[1].RefTable = ProjectsTable
	ProjectTechnologiesTable.ForeignKeys[0].RefTable = ProjectsTable
	ProjectTechnologiesTable.Annotation = &entsql.Annotation{
		Table: "project_technologies",
	}
	ProjectTranslationsTable.ForeignKeys[0].RefTable = LanguagesTable
	ProjectTranslationsTable.ForeignKeys[1].RefTable = ProjectsTable
	PublicationsTable.ForeignKeys[0].RefTable = UsersTable
	PublicationsTable.Annotation = &entsql.Annotation{
		Table: "publications",
	}
	PublicationAuthorsTable.ForeignKeys[0].RefTable = PublicationsTable
	PublicationTranslationsTable.ForeignKeys[0].RefTable = LanguagesTable
	PublicationTranslationsTable.ForeignKeys[1].RefTable = PublicationsTable
	ResearchProjectsTable.ForeignKeys[0].RefTable = UsersTable
	ResearchProjectsTable.Annotation = &entsql.Annotation{
		Table: "research_projects",
	}
	ResearchProjectDetailsTable.ForeignKeys[0].RefTable = ResearchProjectsTable
	ResearchProjectDetailTranslationsTable.ForeignKeys[0].RefTable = LanguagesTable
	ResearchProjectDetailTranslationsTable.ForeignKeys[1].RefTable = ResearchProjectDetailsTable
	ResearchProjectTranslationsTable.ForeignKeys[0].RefTable = LanguagesTable
	ResearchProjectTranslationsTable.ForeignKeys[1].RefTable = ResearchProjectsTable
	SocialLinksTable.ForeignKeys[0].RefTable = PersonalInfoTable
	SocialLinksTable.Annotation = &entsql.Annotation{
		Table: "social_links",
	}
	UsersTable.Annotation = &entsql.Annotation{
		Table: "users",
	}
	WorkExperienceTable.ForeignKeys[0].RefTable = UsersTable
	WorkExperienceTable.Annotation = &entsql.Annotation{
		Table: "work_experience",
	}
	WorkExperienceDetailsTable.ForeignKeys[0].RefTable = WorkExperienceTable
	WorkExperienceDetailTranslationsTable.ForeignKeys[0].RefTable = LanguagesTable
	WorkExperienceDetailTranslationsTable.ForeignKeys[1].RefTable = WorkExperienceDetailsTable
	WorkExperienceTranslationsTable.ForeignKeys[0].RefTable = LanguagesTable
	WorkExperienceTranslationsTable.ForeignKeys[1].RefTable = WorkExperienceTable
}
