// Code generated by ent, DO NOT EDIT.

package ent

import (
	"silan-backend/internal/ent/award"
	"silan-backend/internal/ent/awardtranslation"
	"silan-backend/internal/ent/blogcategory"
	"silan-backend/internal/ent/blogcategorytranslation"
	"silan-backend/internal/ent/blogcomment"
	"silan-backend/internal/ent/blogpost"
	"silan-backend/internal/ent/blogposttag"
	"silan-backend/internal/ent/blogposttranslation"
	"silan-backend/internal/ent/blogseries"
	"silan-backend/internal/ent/blogseriestranslation"
	"silan-backend/internal/ent/blogtag"
	"silan-backend/internal/ent/education"
	"silan-backend/internal/ent/educationdetail"
	"silan-backend/internal/ent/educationdetailtranslation"
	"silan-backend/internal/ent/educationtranslation"
	"silan-backend/internal/ent/idea"
	"silan-backend/internal/ent/ideatranslation"
	"silan-backend/internal/ent/language"
	"silan-backend/internal/ent/personalinfo"
	"silan-backend/internal/ent/personalinfotranslation"
	"silan-backend/internal/ent/project"
	"silan-backend/internal/ent/projectdetail"
	"silan-backend/internal/ent/projectdetailtranslation"
	"silan-backend/internal/ent/projectimage"
	"silan-backend/internal/ent/projectimagetranslation"
	"silan-backend/internal/ent/projectrelationship"
	"silan-backend/internal/ent/projecttechnology"
	"silan-backend/internal/ent/projecttranslation"
	"silan-backend/internal/ent/publication"
	"silan-backend/internal/ent/publicationauthor"
	"silan-backend/internal/ent/publicationtranslation"
	"silan-backend/internal/ent/researchproject"
	"silan-backend/internal/ent/researchprojectdetail"
	"silan-backend/internal/ent/researchprojectdetailtranslation"
	"silan-backend/internal/ent/researchprojecttranslation"
	"silan-backend/internal/ent/schema"
	"silan-backend/internal/ent/sociallink"
	"silan-backend/internal/ent/user"
	"silan-backend/internal/ent/workexperience"
	"silan-backend/internal/ent/workexperiencedetail"
	"silan-backend/internal/ent/workexperiencedetailtranslation"
	"silan-backend/internal/ent/workexperiencetranslation"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	awardFields := schema.Award{}.Fields()
	_ = awardFields
	// awardDescTitle is the schema descriptor for title field.
	awardDescTitle := awardFields[2].Descriptor()
	// award.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	award.TitleValidator = func() func(string) error {
		validators := awardDescTitle.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(title string) error {
			for _, fn := range fns {
				if err := fn(title); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// awardDescAwardingOrganization is the schema descriptor for awarding_organization field.
	awardDescAwardingOrganization := awardFields[3].Descriptor()
	// award.AwardingOrganizationValidator is a validator for the "awarding_organization" field. It is called by the builders before save.
	award.AwardingOrganizationValidator = func() func(string) error {
		validators := awardDescAwardingOrganization.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(awarding_organization string) error {
			for _, fn := range fns {
				if err := fn(awarding_organization); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// awardDescAwardType is the schema descriptor for award_type field.
	awardDescAwardType := awardFields[5].Descriptor()
	// award.AwardTypeValidator is a validator for the "award_type" field. It is called by the builders before save.
	award.AwardTypeValidator = awardDescAwardType.Validators[0].(func(string) error)
	// awardDescCertificateURL is the schema descriptor for certificate_url field.
	awardDescCertificateURL := awardFields[8].Descriptor()
	// award.CertificateURLValidator is a validator for the "certificate_url" field. It is called by the builders before save.
	award.CertificateURLValidator = awardDescCertificateURL.Validators[0].(func(string) error)
	// awardDescSortOrder is the schema descriptor for sort_order field.
	awardDescSortOrder := awardFields[9].Descriptor()
	// award.DefaultSortOrder holds the default value on creation for the sort_order field.
	award.DefaultSortOrder = awardDescSortOrder.Default.(int)
	// awardDescCreatedAt is the schema descriptor for created_at field.
	awardDescCreatedAt := awardFields[10].Descriptor()
	// award.DefaultCreatedAt holds the default value on creation for the created_at field.
	award.DefaultCreatedAt = awardDescCreatedAt.Default.(func() time.Time)
	// awardDescUpdatedAt is the schema descriptor for updated_at field.
	awardDescUpdatedAt := awardFields[11].Descriptor()
	// award.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	award.DefaultUpdatedAt = awardDescUpdatedAt.Default.(func() time.Time)
	// award.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	award.UpdateDefaultUpdatedAt = awardDescUpdatedAt.UpdateDefault.(func() time.Time)
	// awardDescID is the schema descriptor for id field.
	awardDescID := awardFields[0].Descriptor()
	// award.DefaultID holds the default value on creation for the id field.
	award.DefaultID = awardDescID.Default.(func() uuid.UUID)
	awardtranslationFields := schema.AwardTranslation{}.Fields()
	_ = awardtranslationFields
	// awardtranslationDescLanguageCode is the schema descriptor for language_code field.
	awardtranslationDescLanguageCode := awardtranslationFields[2].Descriptor()
	// awardtranslation.LanguageCodeValidator is a validator for the "language_code" field. It is called by the builders before save.
	awardtranslation.LanguageCodeValidator = awardtranslationDescLanguageCode.Validators[0].(func(string) error)
	// awardtranslationDescTitle is the schema descriptor for title field.
	awardtranslationDescTitle := awardtranslationFields[3].Descriptor()
	// awardtranslation.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	awardtranslation.TitleValidator = func() func(string) error {
		validators := awardtranslationDescTitle.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(title string) error {
			for _, fn := range fns {
				if err := fn(title); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// awardtranslationDescAwardingOrganization is the schema descriptor for awarding_organization field.
	awardtranslationDescAwardingOrganization := awardtranslationFields[4].Descriptor()
	// awardtranslation.AwardingOrganizationValidator is a validator for the "awarding_organization" field. It is called by the builders before save.
	awardtranslation.AwardingOrganizationValidator = func() func(string) error {
		validators := awardtranslationDescAwardingOrganization.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(awarding_organization string) error {
			for _, fn := range fns {
				if err := fn(awarding_organization); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// awardtranslationDescAwardType is the schema descriptor for award_type field.
	awardtranslationDescAwardType := awardtranslationFields[5].Descriptor()
	// awardtranslation.AwardTypeValidator is a validator for the "award_type" field. It is called by the builders before save.
	awardtranslation.AwardTypeValidator = awardtranslationDescAwardType.Validators[0].(func(string) error)
	// awardtranslationDescCreatedAt is the schema descriptor for created_at field.
	awardtranslationDescCreatedAt := awardtranslationFields[7].Descriptor()
	// awardtranslation.DefaultCreatedAt holds the default value on creation for the created_at field.
	awardtranslation.DefaultCreatedAt = awardtranslationDescCreatedAt.Default.(func() time.Time)
	// awardtranslationDescUpdatedAt is the schema descriptor for updated_at field.
	awardtranslationDescUpdatedAt := awardtranslationFields[8].Descriptor()
	// awardtranslation.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	awardtranslation.DefaultUpdatedAt = awardtranslationDescUpdatedAt.Default.(func() time.Time)
	// awardtranslation.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	awardtranslation.UpdateDefaultUpdatedAt = awardtranslationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// awardtranslationDescID is the schema descriptor for id field.
	awardtranslationDescID := awardtranslationFields[0].Descriptor()
	// awardtranslation.DefaultID holds the default value on creation for the id field.
	awardtranslation.DefaultID = awardtranslationDescID.Default.(func() uuid.UUID)
	blogcategoryFields := schema.BlogCategory{}.Fields()
	_ = blogcategoryFields
	// blogcategoryDescName is the schema descriptor for name field.
	blogcategoryDescName := blogcategoryFields[1].Descriptor()
	// blogcategory.NameValidator is a validator for the "name" field. It is called by the builders before save.
	blogcategory.NameValidator = func() func(string) error {
		validators := blogcategoryDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// blogcategoryDescSlug is the schema descriptor for slug field.
	blogcategoryDescSlug := blogcategoryFields[2].Descriptor()
	// blogcategory.SlugValidator is a validator for the "slug" field. It is called by the builders before save.
	blogcategory.SlugValidator = func() func(string) error {
		validators := blogcategoryDescSlug.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(slug string) error {
			for _, fn := range fns {
				if err := fn(slug); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// blogcategoryDescColor is the schema descriptor for color field.
	blogcategoryDescColor := blogcategoryFields[4].Descriptor()
	// blogcategory.ColorValidator is a validator for the "color" field. It is called by the builders before save.
	blogcategory.ColorValidator = blogcategoryDescColor.Validators[0].(func(string) error)
	// blogcategoryDescSortOrder is the schema descriptor for sort_order field.
	blogcategoryDescSortOrder := blogcategoryFields[5].Descriptor()
	// blogcategory.DefaultSortOrder holds the default value on creation for the sort_order field.
	blogcategory.DefaultSortOrder = blogcategoryDescSortOrder.Default.(int)
	// blogcategoryDescCreatedAt is the schema descriptor for created_at field.
	blogcategoryDescCreatedAt := blogcategoryFields[6].Descriptor()
	// blogcategory.DefaultCreatedAt holds the default value on creation for the created_at field.
	blogcategory.DefaultCreatedAt = blogcategoryDescCreatedAt.Default.(func() time.Time)
	// blogcategoryDescUpdatedAt is the schema descriptor for updated_at field.
	blogcategoryDescUpdatedAt := blogcategoryFields[7].Descriptor()
	// blogcategory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	blogcategory.DefaultUpdatedAt = blogcategoryDescUpdatedAt.Default.(func() time.Time)
	// blogcategory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	blogcategory.UpdateDefaultUpdatedAt = blogcategoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// blogcategoryDescID is the schema descriptor for id field.
	blogcategoryDescID := blogcategoryFields[0].Descriptor()
	// blogcategory.DefaultID holds the default value on creation for the id field.
	blogcategory.DefaultID = blogcategoryDescID.Default.(func() uuid.UUID)
	blogcategorytranslationFields := schema.BlogCategoryTranslation{}.Fields()
	_ = blogcategorytranslationFields
	// blogcategorytranslationDescLanguageCode is the schema descriptor for language_code field.
	blogcategorytranslationDescLanguageCode := blogcategorytranslationFields[2].Descriptor()
	// blogcategorytranslation.LanguageCodeValidator is a validator for the "language_code" field. It is called by the builders before save.
	blogcategorytranslation.LanguageCodeValidator = blogcategorytranslationDescLanguageCode.Validators[0].(func(string) error)
	// blogcategorytranslationDescName is the schema descriptor for name field.
	blogcategorytranslationDescName := blogcategorytranslationFields[3].Descriptor()
	// blogcategorytranslation.NameValidator is a validator for the "name" field. It is called by the builders before save.
	blogcategorytranslation.NameValidator = func() func(string) error {
		validators := blogcategorytranslationDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// blogcategorytranslationDescCreatedAt is the schema descriptor for created_at field.
	blogcategorytranslationDescCreatedAt := blogcategorytranslationFields[5].Descriptor()
	// blogcategorytranslation.DefaultCreatedAt holds the default value on creation for the created_at field.
	blogcategorytranslation.DefaultCreatedAt = blogcategorytranslationDescCreatedAt.Default.(func() time.Time)
	// blogcategorytranslationDescUpdatedAt is the schema descriptor for updated_at field.
	blogcategorytranslationDescUpdatedAt := blogcategorytranslationFields[6].Descriptor()
	// blogcategorytranslation.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	blogcategorytranslation.DefaultUpdatedAt = blogcategorytranslationDescUpdatedAt.Default.(func() time.Time)
	// blogcategorytranslation.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	blogcategorytranslation.UpdateDefaultUpdatedAt = blogcategorytranslationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// blogcategorytranslationDescID is the schema descriptor for id field.
	blogcategorytranslationDescID := blogcategorytranslationFields[0].Descriptor()
	// blogcategorytranslation.DefaultID holds the default value on creation for the id field.
	blogcategorytranslation.DefaultID = blogcategorytranslationDescID.Default.(func() uuid.UUID)
	blogcommentFields := schema.BlogComment{}.Fields()
	_ = blogcommentFields
	// blogcommentDescAuthorName is the schema descriptor for author_name field.
	blogcommentDescAuthorName := blogcommentFields[3].Descriptor()
	// blogcomment.AuthorNameValidator is a validator for the "author_name" field. It is called by the builders before save.
	blogcomment.AuthorNameValidator = func() func(string) error {
		validators := blogcommentDescAuthorName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(author_name string) error {
			for _, fn := range fns {
				if err := fn(author_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// blogcommentDescAuthorEmail is the schema descriptor for author_email field.
	blogcommentDescAuthorEmail := blogcommentFields[4].Descriptor()
	// blogcomment.AuthorEmailValidator is a validator for the "author_email" field. It is called by the builders before save.
	blogcomment.AuthorEmailValidator = func() func(string) error {
		validators := blogcommentDescAuthorEmail.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(author_email string) error {
			for _, fn := range fns {
				if err := fn(author_email); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// blogcommentDescAuthorWebsite is the schema descriptor for author_website field.
	blogcommentDescAuthorWebsite := blogcommentFields[5].Descriptor()
	// blogcomment.AuthorWebsiteValidator is a validator for the "author_website" field. It is called by the builders before save.
	blogcomment.AuthorWebsiteValidator = blogcommentDescAuthorWebsite.Validators[0].(func(string) error)
	// blogcommentDescContent is the schema descriptor for content field.
	blogcommentDescContent := blogcommentFields[6].Descriptor()
	// blogcomment.ContentValidator is a validator for the "content" field. It is called by the builders before save.
	blogcomment.ContentValidator = blogcommentDescContent.Validators[0].(func(string) error)
	// blogcommentDescIsApproved is the schema descriptor for is_approved field.
	blogcommentDescIsApproved := blogcommentFields[7].Descriptor()
	// blogcomment.DefaultIsApproved holds the default value on creation for the is_approved field.
	blogcomment.DefaultIsApproved = blogcommentDescIsApproved.Default.(bool)
	// blogcommentDescIPAddress is the schema descriptor for ip_address field.
	blogcommentDescIPAddress := blogcommentFields[8].Descriptor()
	// blogcomment.IPAddressValidator is a validator for the "ip_address" field. It is called by the builders before save.
	blogcomment.IPAddressValidator = blogcommentDescIPAddress.Validators[0].(func(string) error)
	// blogcommentDescUserAgent is the schema descriptor for user_agent field.
	blogcommentDescUserAgent := blogcommentFields[9].Descriptor()
	// blogcomment.UserAgentValidator is a validator for the "user_agent" field. It is called by the builders before save.
	blogcomment.UserAgentValidator = blogcommentDescUserAgent.Validators[0].(func(string) error)
	// blogcommentDescCreatedAt is the schema descriptor for created_at field.
	blogcommentDescCreatedAt := blogcommentFields[10].Descriptor()
	// blogcomment.DefaultCreatedAt holds the default value on creation for the created_at field.
	blogcomment.DefaultCreatedAt = blogcommentDescCreatedAt.Default.(func() time.Time)
	// blogcommentDescUpdatedAt is the schema descriptor for updated_at field.
	blogcommentDescUpdatedAt := blogcommentFields[11].Descriptor()
	// blogcomment.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	blogcomment.DefaultUpdatedAt = blogcommentDescUpdatedAt.Default.(func() time.Time)
	// blogcomment.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	blogcomment.UpdateDefaultUpdatedAt = blogcommentDescUpdatedAt.UpdateDefault.(func() time.Time)
	// blogcommentDescID is the schema descriptor for id field.
	blogcommentDescID := blogcommentFields[0].Descriptor()
	// blogcomment.DefaultID holds the default value on creation for the id field.
	blogcomment.DefaultID = blogcommentDescID.Default.(func() uuid.UUID)
	blogpostFields := schema.BlogPost{}.Fields()
	_ = blogpostFields
	// blogpostDescTitle is the schema descriptor for title field.
	blogpostDescTitle := blogpostFields[4].Descriptor()
	// blogpost.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	blogpost.TitleValidator = func() func(string) error {
		validators := blogpostDescTitle.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(title string) error {
			for _, fn := range fns {
				if err := fn(title); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// blogpostDescSlug is the schema descriptor for slug field.
	blogpostDescSlug := blogpostFields[5].Descriptor()
	// blogpost.SlugValidator is a validator for the "slug" field. It is called by the builders before save.
	blogpost.SlugValidator = func() func(string) error {
		validators := blogpostDescSlug.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(slug string) error {
			for _, fn := range fns {
				if err := fn(slug); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// blogpostDescContent is the schema descriptor for content field.
	blogpostDescContent := blogpostFields[7].Descriptor()
	// blogpost.ContentValidator is a validator for the "content" field. It is called by the builders before save.
	blogpost.ContentValidator = blogpostDescContent.Validators[0].(func(string) error)
	// blogpostDescIsFeatured is the schema descriptor for is_featured field.
	blogpostDescIsFeatured := blogpostFields[10].Descriptor()
	// blogpost.DefaultIsFeatured holds the default value on creation for the is_featured field.
	blogpost.DefaultIsFeatured = blogpostDescIsFeatured.Default.(bool)
	// blogpostDescFeaturedImageURL is the schema descriptor for featured_image_url field.
	blogpostDescFeaturedImageURL := blogpostFields[11].Descriptor()
	// blogpost.FeaturedImageURLValidator is a validator for the "featured_image_url" field. It is called by the builders before save.
	blogpost.FeaturedImageURLValidator = blogpostDescFeaturedImageURL.Validators[0].(func(string) error)
	// blogpostDescViewCount is the schema descriptor for view_count field.
	blogpostDescViewCount := blogpostFields[13].Descriptor()
	// blogpost.DefaultViewCount holds the default value on creation for the view_count field.
	blogpost.DefaultViewCount = blogpostDescViewCount.Default.(int)
	// blogpostDescLikeCount is the schema descriptor for like_count field.
	blogpostDescLikeCount := blogpostFields[14].Descriptor()
	// blogpost.DefaultLikeCount holds the default value on creation for the like_count field.
	blogpost.DefaultLikeCount = blogpostDescLikeCount.Default.(int)
	// blogpostDescCommentCount is the schema descriptor for comment_count field.
	blogpostDescCommentCount := blogpostFields[15].Descriptor()
	// blogpost.DefaultCommentCount holds the default value on creation for the comment_count field.
	blogpost.DefaultCommentCount = blogpostDescCommentCount.Default.(int)
	// blogpostDescCreatedAt is the schema descriptor for created_at field.
	blogpostDescCreatedAt := blogpostFields[18].Descriptor()
	// blogpost.DefaultCreatedAt holds the default value on creation for the created_at field.
	blogpost.DefaultCreatedAt = blogpostDescCreatedAt.Default.(func() time.Time)
	// blogpostDescUpdatedAt is the schema descriptor for updated_at field.
	blogpostDescUpdatedAt := blogpostFields[19].Descriptor()
	// blogpost.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	blogpost.DefaultUpdatedAt = blogpostDescUpdatedAt.Default.(func() time.Time)
	// blogpost.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	blogpost.UpdateDefaultUpdatedAt = blogpostDescUpdatedAt.UpdateDefault.(func() time.Time)
	// blogpostDescID is the schema descriptor for id field.
	blogpostDescID := blogpostFields[0].Descriptor()
	// blogpost.DefaultID holds the default value on creation for the id field.
	blogpost.DefaultID = blogpostDescID.Default.(func() uuid.UUID)
	blogposttagFields := schema.BlogPostTag{}.Fields()
	_ = blogposttagFields
	// blogposttagDescCreatedAt is the schema descriptor for created_at field.
	blogposttagDescCreatedAt := blogposttagFields[2].Descriptor()
	// blogposttag.DefaultCreatedAt holds the default value on creation for the created_at field.
	blogposttag.DefaultCreatedAt = blogposttagDescCreatedAt.Default.(func() time.Time)
	blogposttranslationFields := schema.BlogPostTranslation{}.Fields()
	_ = blogposttranslationFields
	// blogposttranslationDescLanguageCode is the schema descriptor for language_code field.
	blogposttranslationDescLanguageCode := blogposttranslationFields[2].Descriptor()
	// blogposttranslation.LanguageCodeValidator is a validator for the "language_code" field. It is called by the builders before save.
	blogposttranslation.LanguageCodeValidator = blogposttranslationDescLanguageCode.Validators[0].(func(string) error)
	// blogposttranslationDescTitle is the schema descriptor for title field.
	blogposttranslationDescTitle := blogposttranslationFields[3].Descriptor()
	// blogposttranslation.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	blogposttranslation.TitleValidator = func() func(string) error {
		validators := blogposttranslationDescTitle.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(title string) error {
			for _, fn := range fns {
				if err := fn(title); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// blogposttranslationDescContent is the schema descriptor for content field.
	blogposttranslationDescContent := blogposttranslationFields[5].Descriptor()
	// blogposttranslation.ContentValidator is a validator for the "content" field. It is called by the builders before save.
	blogposttranslation.ContentValidator = blogposttranslationDescContent.Validators[0].(func(string) error)
	// blogposttranslationDescCreatedAt is the schema descriptor for created_at field.
	blogposttranslationDescCreatedAt := blogposttranslationFields[6].Descriptor()
	// blogposttranslation.DefaultCreatedAt holds the default value on creation for the created_at field.
	blogposttranslation.DefaultCreatedAt = blogposttranslationDescCreatedAt.Default.(func() time.Time)
	// blogposttranslationDescUpdatedAt is the schema descriptor for updated_at field.
	blogposttranslationDescUpdatedAt := blogposttranslationFields[7].Descriptor()
	// blogposttranslation.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	blogposttranslation.DefaultUpdatedAt = blogposttranslationDescUpdatedAt.Default.(func() time.Time)
	// blogposttranslation.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	blogposttranslation.UpdateDefaultUpdatedAt = blogposttranslationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// blogposttranslationDescID is the schema descriptor for id field.
	blogposttranslationDescID := blogposttranslationFields[0].Descriptor()
	// blogposttranslation.DefaultID holds the default value on creation for the id field.
	blogposttranslation.DefaultID = blogposttranslationDescID.Default.(func() uuid.UUID)
	blogseriesFields := schema.BlogSeries{}.Fields()
	_ = blogseriesFields
	// blogseriesDescTitle is the schema descriptor for title field.
	blogseriesDescTitle := blogseriesFields[1].Descriptor()
	// blogseries.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	blogseries.TitleValidator = func() func(string) error {
		validators := blogseriesDescTitle.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(title string) error {
			for _, fn := range fns {
				if err := fn(title); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// blogseriesDescSlug is the schema descriptor for slug field.
	blogseriesDescSlug := blogseriesFields[2].Descriptor()
	// blogseries.SlugValidator is a validator for the "slug" field. It is called by the builders before save.
	blogseries.SlugValidator = func() func(string) error {
		validators := blogseriesDescSlug.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(slug string) error {
			for _, fn := range fns {
				if err := fn(slug); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// blogseriesDescThumbnailURL is the schema descriptor for thumbnail_url field.
	blogseriesDescThumbnailURL := blogseriesFields[4].Descriptor()
	// blogseries.ThumbnailURLValidator is a validator for the "thumbnail_url" field. It is called by the builders before save.
	blogseries.ThumbnailURLValidator = blogseriesDescThumbnailURL.Validators[0].(func(string) error)
	// blogseriesDescStatus is the schema descriptor for status field.
	blogseriesDescStatus := blogseriesFields[5].Descriptor()
	// blogseries.DefaultStatus holds the default value on creation for the status field.
	blogseries.DefaultStatus = blogseriesDescStatus.Default.(string)
	// blogseries.StatusValidator is a validator for the "status" field. It is called by the builders before save.
	blogseries.StatusValidator = blogseriesDescStatus.Validators[0].(func(string) error)
	// blogseriesDescEpisodeCount is the schema descriptor for episode_count field.
	blogseriesDescEpisodeCount := blogseriesFields[6].Descriptor()
	// blogseries.DefaultEpisodeCount holds the default value on creation for the episode_count field.
	blogseries.DefaultEpisodeCount = blogseriesDescEpisodeCount.Default.(int)
	// blogseriesDescCreatedAt is the schema descriptor for created_at field.
	blogseriesDescCreatedAt := blogseriesFields[7].Descriptor()
	// blogseries.DefaultCreatedAt holds the default value on creation for the created_at field.
	blogseries.DefaultCreatedAt = blogseriesDescCreatedAt.Default.(func() time.Time)
	// blogseriesDescUpdatedAt is the schema descriptor for updated_at field.
	blogseriesDescUpdatedAt := blogseriesFields[8].Descriptor()
	// blogseries.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	blogseries.DefaultUpdatedAt = blogseriesDescUpdatedAt.Default.(func() time.Time)
	// blogseries.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	blogseries.UpdateDefaultUpdatedAt = blogseriesDescUpdatedAt.UpdateDefault.(func() time.Time)
	// blogseriesDescID is the schema descriptor for id field.
	blogseriesDescID := blogseriesFields[0].Descriptor()
	// blogseries.DefaultID holds the default value on creation for the id field.
	blogseries.DefaultID = blogseriesDescID.Default.(func() uuid.UUID)
	blogseriestranslationFields := schema.BlogSeriesTranslation{}.Fields()
	_ = blogseriestranslationFields
	// blogseriestranslationDescLanguageCode is the schema descriptor for language_code field.
	blogseriestranslationDescLanguageCode := blogseriestranslationFields[2].Descriptor()
	// blogseriestranslation.LanguageCodeValidator is a validator for the "language_code" field. It is called by the builders before save.
	blogseriestranslation.LanguageCodeValidator = blogseriestranslationDescLanguageCode.Validators[0].(func(string) error)
	// blogseriestranslationDescTitle is the schema descriptor for title field.
	blogseriestranslationDescTitle := blogseriestranslationFields[3].Descriptor()
	// blogseriestranslation.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	blogseriestranslation.TitleValidator = func() func(string) error {
		validators := blogseriestranslationDescTitle.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(title string) error {
			for _, fn := range fns {
				if err := fn(title); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// blogseriestranslationDescCreatedAt is the schema descriptor for created_at field.
	blogseriestranslationDescCreatedAt := blogseriestranslationFields[5].Descriptor()
	// blogseriestranslation.DefaultCreatedAt holds the default value on creation for the created_at field.
	blogseriestranslation.DefaultCreatedAt = blogseriestranslationDescCreatedAt.Default.(func() time.Time)
	// blogseriestranslationDescUpdatedAt is the schema descriptor for updated_at field.
	blogseriestranslationDescUpdatedAt := blogseriestranslationFields[6].Descriptor()
	// blogseriestranslation.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	blogseriestranslation.DefaultUpdatedAt = blogseriestranslationDescUpdatedAt.Default.(func() time.Time)
	// blogseriestranslation.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	blogseriestranslation.UpdateDefaultUpdatedAt = blogseriestranslationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// blogseriestranslationDescID is the schema descriptor for id field.
	blogseriestranslationDescID := blogseriestranslationFields[0].Descriptor()
	// blogseriestranslation.DefaultID holds the default value on creation for the id field.
	blogseriestranslation.DefaultID = blogseriestranslationDescID.Default.(func() uuid.UUID)
	blogtagFields := schema.BlogTag{}.Fields()
	_ = blogtagFields
	// blogtagDescName is the schema descriptor for name field.
	blogtagDescName := blogtagFields[1].Descriptor()
	// blogtag.NameValidator is a validator for the "name" field. It is called by the builders before save.
	blogtag.NameValidator = func() func(string) error {
		validators := blogtagDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// blogtagDescSlug is the schema descriptor for slug field.
	blogtagDescSlug := blogtagFields[2].Descriptor()
	// blogtag.SlugValidator is a validator for the "slug" field. It is called by the builders before save.
	blogtag.SlugValidator = func() func(string) error {
		validators := blogtagDescSlug.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(slug string) error {
			for _, fn := range fns {
				if err := fn(slug); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// blogtagDescUsageCount is the schema descriptor for usage_count field.
	blogtagDescUsageCount := blogtagFields[3].Descriptor()
	// blogtag.DefaultUsageCount holds the default value on creation for the usage_count field.
	blogtag.DefaultUsageCount = blogtagDescUsageCount.Default.(int)
	// blogtagDescCreatedAt is the schema descriptor for created_at field.
	blogtagDescCreatedAt := blogtagFields[4].Descriptor()
	// blogtag.DefaultCreatedAt holds the default value on creation for the created_at field.
	blogtag.DefaultCreatedAt = blogtagDescCreatedAt.Default.(func() time.Time)
	// blogtagDescID is the schema descriptor for id field.
	blogtagDescID := blogtagFields[0].Descriptor()
	// blogtag.DefaultID holds the default value on creation for the id field.
	blogtag.DefaultID = blogtagDescID.Default.(func() uuid.UUID)
	educationFields := schema.Education{}.Fields()
	_ = educationFields
	// educationDescInstitution is the schema descriptor for institution field.
	educationDescInstitution := educationFields[2].Descriptor()
	// education.InstitutionValidator is a validator for the "institution" field. It is called by the builders before save.
	education.InstitutionValidator = func() func(string) error {
		validators := educationDescInstitution.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(institution string) error {
			for _, fn := range fns {
				if err := fn(institution); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// educationDescDegree is the schema descriptor for degree field.
	educationDescDegree := educationFields[3].Descriptor()
	// education.DegreeValidator is a validator for the "degree" field. It is called by the builders before save.
	education.DegreeValidator = func() func(string) error {
		validators := educationDescDegree.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(degree string) error {
			for _, fn := range fns {
				if err := fn(degree); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// educationDescFieldOfStudy is the schema descriptor for field_of_study field.
	educationDescFieldOfStudy := educationFields[4].Descriptor()
	// education.FieldOfStudyValidator is a validator for the "field_of_study" field. It is called by the builders before save.
	education.FieldOfStudyValidator = educationDescFieldOfStudy.Validators[0].(func(string) error)
	// educationDescIsCurrent is the schema descriptor for is_current field.
	educationDescIsCurrent := educationFields[7].Descriptor()
	// education.DefaultIsCurrent holds the default value on creation for the is_current field.
	education.DefaultIsCurrent = educationDescIsCurrent.Default.(bool)
	// educationDescGpa is the schema descriptor for gpa field.
	educationDescGpa := educationFields[8].Descriptor()
	// education.GpaValidator is a validator for the "gpa" field. It is called by the builders before save.
	education.GpaValidator = educationDescGpa.Validators[0].(func(string) error)
	// educationDescLocation is the schema descriptor for location field.
	educationDescLocation := educationFields[9].Descriptor()
	// education.LocationValidator is a validator for the "location" field. It is called by the builders before save.
	education.LocationValidator = educationDescLocation.Validators[0].(func(string) error)
	// educationDescInstitutionWebsite is the schema descriptor for institution_website field.
	educationDescInstitutionWebsite := educationFields[10].Descriptor()
	// education.InstitutionWebsiteValidator is a validator for the "institution_website" field. It is called by the builders before save.
	education.InstitutionWebsiteValidator = educationDescInstitutionWebsite.Validators[0].(func(string) error)
	// educationDescInstitutionLogoURL is the schema descriptor for institution_logo_url field.
	educationDescInstitutionLogoURL := educationFields[11].Descriptor()
	// education.InstitutionLogoURLValidator is a validator for the "institution_logo_url" field. It is called by the builders before save.
	education.InstitutionLogoURLValidator = educationDescInstitutionLogoURL.Validators[0].(func(string) error)
	// educationDescSortOrder is the schema descriptor for sort_order field.
	educationDescSortOrder := educationFields[12].Descriptor()
	// education.DefaultSortOrder holds the default value on creation for the sort_order field.
	education.DefaultSortOrder = educationDescSortOrder.Default.(int)
	// educationDescCreatedAt is the schema descriptor for created_at field.
	educationDescCreatedAt := educationFields[13].Descriptor()
	// education.DefaultCreatedAt holds the default value on creation for the created_at field.
	education.DefaultCreatedAt = educationDescCreatedAt.Default.(func() time.Time)
	// educationDescUpdatedAt is the schema descriptor for updated_at field.
	educationDescUpdatedAt := educationFields[14].Descriptor()
	// education.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	education.DefaultUpdatedAt = educationDescUpdatedAt.Default.(func() time.Time)
	// education.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	education.UpdateDefaultUpdatedAt = educationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// educationDescID is the schema descriptor for id field.
	educationDescID := educationFields[0].Descriptor()
	// education.DefaultID holds the default value on creation for the id field.
	education.DefaultID = educationDescID.Default.(func() uuid.UUID)
	educationdetailFields := schema.EducationDetail{}.Fields()
	_ = educationdetailFields
	// educationdetailDescDetailText is the schema descriptor for detail_text field.
	educationdetailDescDetailText := educationdetailFields[2].Descriptor()
	// educationdetail.DetailTextValidator is a validator for the "detail_text" field. It is called by the builders before save.
	educationdetail.DetailTextValidator = educationdetailDescDetailText.Validators[0].(func(string) error)
	// educationdetailDescSortOrder is the schema descriptor for sort_order field.
	educationdetailDescSortOrder := educationdetailFields[3].Descriptor()
	// educationdetail.DefaultSortOrder holds the default value on creation for the sort_order field.
	educationdetail.DefaultSortOrder = educationdetailDescSortOrder.Default.(int)
	// educationdetailDescCreatedAt is the schema descriptor for created_at field.
	educationdetailDescCreatedAt := educationdetailFields[4].Descriptor()
	// educationdetail.DefaultCreatedAt holds the default value on creation for the created_at field.
	educationdetail.DefaultCreatedAt = educationdetailDescCreatedAt.Default.(func() time.Time)
	// educationdetailDescUpdatedAt is the schema descriptor for updated_at field.
	educationdetailDescUpdatedAt := educationdetailFields[5].Descriptor()
	// educationdetail.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	educationdetail.DefaultUpdatedAt = educationdetailDescUpdatedAt.Default.(func() time.Time)
	// educationdetail.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	educationdetail.UpdateDefaultUpdatedAt = educationdetailDescUpdatedAt.UpdateDefault.(func() time.Time)
	// educationdetailDescID is the schema descriptor for id field.
	educationdetailDescID := educationdetailFields[0].Descriptor()
	// educationdetail.DefaultID holds the default value on creation for the id field.
	educationdetail.DefaultID = educationdetailDescID.Default.(func() uuid.UUID)
	educationdetailtranslationFields := schema.EducationDetailTranslation{}.Fields()
	_ = educationdetailtranslationFields
	// educationdetailtranslationDescLanguageCode is the schema descriptor for language_code field.
	educationdetailtranslationDescLanguageCode := educationdetailtranslationFields[2].Descriptor()
	// educationdetailtranslation.LanguageCodeValidator is a validator for the "language_code" field. It is called by the builders before save.
	educationdetailtranslation.LanguageCodeValidator = educationdetailtranslationDescLanguageCode.Validators[0].(func(string) error)
	// educationdetailtranslationDescDetailText is the schema descriptor for detail_text field.
	educationdetailtranslationDescDetailText := educationdetailtranslationFields[3].Descriptor()
	// educationdetailtranslation.DetailTextValidator is a validator for the "detail_text" field. It is called by the builders before save.
	educationdetailtranslation.DetailTextValidator = educationdetailtranslationDescDetailText.Validators[0].(func(string) error)
	// educationdetailtranslationDescCreatedAt is the schema descriptor for created_at field.
	educationdetailtranslationDescCreatedAt := educationdetailtranslationFields[4].Descriptor()
	// educationdetailtranslation.DefaultCreatedAt holds the default value on creation for the created_at field.
	educationdetailtranslation.DefaultCreatedAt = educationdetailtranslationDescCreatedAt.Default.(func() time.Time)
	// educationdetailtranslationDescUpdatedAt is the schema descriptor for updated_at field.
	educationdetailtranslationDescUpdatedAt := educationdetailtranslationFields[5].Descriptor()
	// educationdetailtranslation.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	educationdetailtranslation.DefaultUpdatedAt = educationdetailtranslationDescUpdatedAt.Default.(func() time.Time)
	// educationdetailtranslation.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	educationdetailtranslation.UpdateDefaultUpdatedAt = educationdetailtranslationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// educationdetailtranslationDescID is the schema descriptor for id field.
	educationdetailtranslationDescID := educationdetailtranslationFields[0].Descriptor()
	// educationdetailtranslation.DefaultID holds the default value on creation for the id field.
	educationdetailtranslation.DefaultID = educationdetailtranslationDescID.Default.(func() uuid.UUID)
	educationtranslationFields := schema.EducationTranslation{}.Fields()
	_ = educationtranslationFields
	// educationtranslationDescLanguageCode is the schema descriptor for language_code field.
	educationtranslationDescLanguageCode := educationtranslationFields[2].Descriptor()
	// educationtranslation.LanguageCodeValidator is a validator for the "language_code" field. It is called by the builders before save.
	educationtranslation.LanguageCodeValidator = educationtranslationDescLanguageCode.Validators[0].(func(string) error)
	// educationtranslationDescInstitution is the schema descriptor for institution field.
	educationtranslationDescInstitution := educationtranslationFields[3].Descriptor()
	// educationtranslation.InstitutionValidator is a validator for the "institution" field. It is called by the builders before save.
	educationtranslation.InstitutionValidator = educationtranslationDescInstitution.Validators[0].(func(string) error)
	// educationtranslationDescDegree is the schema descriptor for degree field.
	educationtranslationDescDegree := educationtranslationFields[4].Descriptor()
	// educationtranslation.DegreeValidator is a validator for the "degree" field. It is called by the builders before save.
	educationtranslation.DegreeValidator = educationtranslationDescDegree.Validators[0].(func(string) error)
	// educationtranslationDescFieldOfStudy is the schema descriptor for field_of_study field.
	educationtranslationDescFieldOfStudy := educationtranslationFields[5].Descriptor()
	// educationtranslation.FieldOfStudyValidator is a validator for the "field_of_study" field. It is called by the builders before save.
	educationtranslation.FieldOfStudyValidator = educationtranslationDescFieldOfStudy.Validators[0].(func(string) error)
	// educationtranslationDescLocation is the schema descriptor for location field.
	educationtranslationDescLocation := educationtranslationFields[6].Descriptor()
	// educationtranslation.LocationValidator is a validator for the "location" field. It is called by the builders before save.
	educationtranslation.LocationValidator = educationtranslationDescLocation.Validators[0].(func(string) error)
	// educationtranslationDescCreatedAt is the schema descriptor for created_at field.
	educationtranslationDescCreatedAt := educationtranslationFields[7].Descriptor()
	// educationtranslation.DefaultCreatedAt holds the default value on creation for the created_at field.
	educationtranslation.DefaultCreatedAt = educationtranslationDescCreatedAt.Default.(func() time.Time)
	// educationtranslationDescID is the schema descriptor for id field.
	educationtranslationDescID := educationtranslationFields[0].Descriptor()
	// educationtranslation.DefaultID holds the default value on creation for the id field.
	educationtranslation.DefaultID = educationtranslationDescID.Default.(func() uuid.UUID)
	ideaFields := schema.Idea{}.Fields()
	_ = ideaFields
	// ideaDescTitle is the schema descriptor for title field.
	ideaDescTitle := ideaFields[2].Descriptor()
	// idea.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	idea.TitleValidator = func() func(string) error {
		validators := ideaDescTitle.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(title string) error {
			for _, fn := range fns {
				if err := fn(title); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// ideaDescSlug is the schema descriptor for slug field.
	ideaDescSlug := ideaFields[3].Descriptor()
	// idea.SlugValidator is a validator for the "slug" field. It is called by the builders before save.
	idea.SlugValidator = func() func(string) error {
		validators := ideaDescSlug.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(slug string) error {
			for _, fn := range fns {
				if err := fn(slug); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// ideaDescCollaborationNeeded is the schema descriptor for collaboration_needed field.
	ideaDescCollaborationNeeded := ideaFields[12].Descriptor()
	// idea.DefaultCollaborationNeeded holds the default value on creation for the collaboration_needed field.
	idea.DefaultCollaborationNeeded = ideaDescCollaborationNeeded.Default.(bool)
	// ideaDescFundingRequired is the schema descriptor for funding_required field.
	ideaDescFundingRequired := ideaFields[13].Descriptor()
	// idea.DefaultFundingRequired holds the default value on creation for the funding_required field.
	idea.DefaultFundingRequired = ideaDescFundingRequired.Default.(bool)
	// ideaDescIsPublic is the schema descriptor for is_public field.
	ideaDescIsPublic := ideaFields[15].Descriptor()
	// idea.DefaultIsPublic holds the default value on creation for the is_public field.
	idea.DefaultIsPublic = ideaDescIsPublic.Default.(bool)
	// ideaDescViewCount is the schema descriptor for view_count field.
	ideaDescViewCount := ideaFields[16].Descriptor()
	// idea.DefaultViewCount holds the default value on creation for the view_count field.
	idea.DefaultViewCount = ideaDescViewCount.Default.(int)
	// ideaDescLikeCount is the schema descriptor for like_count field.
	ideaDescLikeCount := ideaFields[17].Descriptor()
	// idea.DefaultLikeCount holds the default value on creation for the like_count field.
	idea.DefaultLikeCount = ideaDescLikeCount.Default.(int)
	// ideaDescCreatedAt is the schema descriptor for created_at field.
	ideaDescCreatedAt := ideaFields[18].Descriptor()
	// idea.DefaultCreatedAt holds the default value on creation for the created_at field.
	idea.DefaultCreatedAt = ideaDescCreatedAt.Default.(func() time.Time)
	// ideaDescUpdatedAt is the schema descriptor for updated_at field.
	ideaDescUpdatedAt := ideaFields[19].Descriptor()
	// idea.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	idea.DefaultUpdatedAt = ideaDescUpdatedAt.Default.(func() time.Time)
	// idea.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	idea.UpdateDefaultUpdatedAt = ideaDescUpdatedAt.UpdateDefault.(func() time.Time)
	// ideaDescID is the schema descriptor for id field.
	ideaDescID := ideaFields[0].Descriptor()
	// idea.DefaultID holds the default value on creation for the id field.
	idea.DefaultID = ideaDescID.Default.(func() uuid.UUID)
	ideatranslationFields := schema.IdeaTranslation{}.Fields()
	_ = ideatranslationFields
	// ideatranslationDescLanguageCode is the schema descriptor for language_code field.
	ideatranslationDescLanguageCode := ideatranslationFields[2].Descriptor()
	// ideatranslation.LanguageCodeValidator is a validator for the "language_code" field. It is called by the builders before save.
	ideatranslation.LanguageCodeValidator = ideatranslationDescLanguageCode.Validators[0].(func(string) error)
	// ideatranslationDescTitle is the schema descriptor for title field.
	ideatranslationDescTitle := ideatranslationFields[3].Descriptor()
	// ideatranslation.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	ideatranslation.TitleValidator = func() func(string) error {
		validators := ideatranslationDescTitle.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(title string) error {
			for _, fn := range fns {
				if err := fn(title); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// ideatranslationDescCreatedAt is the schema descriptor for created_at field.
	ideatranslationDescCreatedAt := ideatranslationFields[9].Descriptor()
	// ideatranslation.DefaultCreatedAt holds the default value on creation for the created_at field.
	ideatranslation.DefaultCreatedAt = ideatranslationDescCreatedAt.Default.(func() time.Time)
	// ideatranslationDescID is the schema descriptor for id field.
	ideatranslationDescID := ideatranslationFields[0].Descriptor()
	// ideatranslation.DefaultID holds the default value on creation for the id field.
	ideatranslation.DefaultID = ideatranslationDescID.Default.(func() uuid.UUID)
	languageFields := schema.Language{}.Fields()
	_ = languageFields
	// languageDescName is the schema descriptor for name field.
	languageDescName := languageFields[1].Descriptor()
	// language.NameValidator is a validator for the "name" field. It is called by the builders before save.
	language.NameValidator = func() func(string) error {
		validators := languageDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// languageDescNativeName is the schema descriptor for native_name field.
	languageDescNativeName := languageFields[2].Descriptor()
	// language.NativeNameValidator is a validator for the "native_name" field. It is called by the builders before save.
	language.NativeNameValidator = func() func(string) error {
		validators := languageDescNativeName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(native_name string) error {
			for _, fn := range fns {
				if err := fn(native_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// languageDescIsActive is the schema descriptor for is_active field.
	languageDescIsActive := languageFields[3].Descriptor()
	// language.DefaultIsActive holds the default value on creation for the is_active field.
	language.DefaultIsActive = languageDescIsActive.Default.(bool)
	// languageDescCreatedAt is the schema descriptor for created_at field.
	languageDescCreatedAt := languageFields[4].Descriptor()
	// language.DefaultCreatedAt holds the default value on creation for the created_at field.
	language.DefaultCreatedAt = languageDescCreatedAt.Default.(func() time.Time)
	// languageDescID is the schema descriptor for id field.
	languageDescID := languageFields[0].Descriptor()
	// language.IDValidator is a validator for the "id" field. It is called by the builders before save.
	language.IDValidator = func() func(string) error {
		validators := languageDescID.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(id string) error {
			for _, fn := range fns {
				if err := fn(id); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	personalinfoFields := schema.PersonalInfo{}.Fields()
	_ = personalinfoFields
	// personalinfoDescFullName is the schema descriptor for full_name field.
	personalinfoDescFullName := personalinfoFields[2].Descriptor()
	// personalinfo.FullNameValidator is a validator for the "full_name" field. It is called by the builders before save.
	personalinfo.FullNameValidator = func() func(string) error {
		validators := personalinfoDescFullName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(full_name string) error {
			for _, fn := range fns {
				if err := fn(full_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// personalinfoDescTitle is the schema descriptor for title field.
	personalinfoDescTitle := personalinfoFields[3].Descriptor()
	// personalinfo.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	personalinfo.TitleValidator = func() func(string) error {
		validators := personalinfoDescTitle.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(title string) error {
			for _, fn := range fns {
				if err := fn(title); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// personalinfoDescPhone is the schema descriptor for phone field.
	personalinfoDescPhone := personalinfoFields[5].Descriptor()
	// personalinfo.PhoneValidator is a validator for the "phone" field. It is called by the builders before save.
	personalinfo.PhoneValidator = personalinfoDescPhone.Validators[0].(func(string) error)
	// personalinfoDescEmail is the schema descriptor for email field.
	personalinfoDescEmail := personalinfoFields[6].Descriptor()
	// personalinfo.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	personalinfo.EmailValidator = personalinfoDescEmail.Validators[0].(func(string) error)
	// personalinfoDescLocation is the schema descriptor for location field.
	personalinfoDescLocation := personalinfoFields[7].Descriptor()
	// personalinfo.LocationValidator is a validator for the "location" field. It is called by the builders before save.
	personalinfo.LocationValidator = personalinfoDescLocation.Validators[0].(func(string) error)
	// personalinfoDescWebsite is the schema descriptor for website field.
	personalinfoDescWebsite := personalinfoFields[8].Descriptor()
	// personalinfo.WebsiteValidator is a validator for the "website" field. It is called by the builders before save.
	personalinfo.WebsiteValidator = personalinfoDescWebsite.Validators[0].(func(string) error)
	// personalinfoDescAvatarURL is the schema descriptor for avatar_url field.
	personalinfoDescAvatarURL := personalinfoFields[9].Descriptor()
	// personalinfo.AvatarURLValidator is a validator for the "avatar_url" field. It is called by the builders before save.
	personalinfo.AvatarURLValidator = personalinfoDescAvatarURL.Validators[0].(func(string) error)
	// personalinfoDescIsPrimary is the schema descriptor for is_primary field.
	personalinfoDescIsPrimary := personalinfoFields[10].Descriptor()
	// personalinfo.DefaultIsPrimary holds the default value on creation for the is_primary field.
	personalinfo.DefaultIsPrimary = personalinfoDescIsPrimary.Default.(bool)
	// personalinfoDescCreatedAt is the schema descriptor for created_at field.
	personalinfoDescCreatedAt := personalinfoFields[11].Descriptor()
	// personalinfo.DefaultCreatedAt holds the default value on creation for the created_at field.
	personalinfo.DefaultCreatedAt = personalinfoDescCreatedAt.Default.(func() time.Time)
	// personalinfoDescUpdatedAt is the schema descriptor for updated_at field.
	personalinfoDescUpdatedAt := personalinfoFields[12].Descriptor()
	// personalinfo.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	personalinfo.DefaultUpdatedAt = personalinfoDescUpdatedAt.Default.(func() time.Time)
	// personalinfo.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	personalinfo.UpdateDefaultUpdatedAt = personalinfoDescUpdatedAt.UpdateDefault.(func() time.Time)
	// personalinfoDescID is the schema descriptor for id field.
	personalinfoDescID := personalinfoFields[0].Descriptor()
	// personalinfo.DefaultID holds the default value on creation for the id field.
	personalinfo.DefaultID = personalinfoDescID.Default.(func() uuid.UUID)
	personalinfotranslationFields := schema.PersonalInfoTranslation{}.Fields()
	_ = personalinfotranslationFields
	// personalinfotranslationDescLanguageCode is the schema descriptor for language_code field.
	personalinfotranslationDescLanguageCode := personalinfotranslationFields[2].Descriptor()
	// personalinfotranslation.LanguageCodeValidator is a validator for the "language_code" field. It is called by the builders before save.
	personalinfotranslation.LanguageCodeValidator = personalinfotranslationDescLanguageCode.Validators[0].(func(string) error)
	// personalinfotranslationDescFullName is the schema descriptor for full_name field.
	personalinfotranslationDescFullName := personalinfotranslationFields[3].Descriptor()
	// personalinfotranslation.FullNameValidator is a validator for the "full_name" field. It is called by the builders before save.
	personalinfotranslation.FullNameValidator = personalinfotranslationDescFullName.Validators[0].(func(string) error)
	// personalinfotranslationDescTitle is the schema descriptor for title field.
	personalinfotranslationDescTitle := personalinfotranslationFields[4].Descriptor()
	// personalinfotranslation.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	personalinfotranslation.TitleValidator = personalinfotranslationDescTitle.Validators[0].(func(string) error)
	// personalinfotranslationDescLocation is the schema descriptor for location field.
	personalinfotranslationDescLocation := personalinfotranslationFields[6].Descriptor()
	// personalinfotranslation.LocationValidator is a validator for the "location" field. It is called by the builders before save.
	personalinfotranslation.LocationValidator = personalinfotranslationDescLocation.Validators[0].(func(string) error)
	// personalinfotranslationDescCreatedAt is the schema descriptor for created_at field.
	personalinfotranslationDescCreatedAt := personalinfotranslationFields[7].Descriptor()
	// personalinfotranslation.DefaultCreatedAt holds the default value on creation for the created_at field.
	personalinfotranslation.DefaultCreatedAt = personalinfotranslationDescCreatedAt.Default.(func() time.Time)
	// personalinfotranslationDescID is the schema descriptor for id field.
	personalinfotranslationDescID := personalinfotranslationFields[0].Descriptor()
	// personalinfotranslation.DefaultID holds the default value on creation for the id field.
	personalinfotranslation.DefaultID = personalinfotranslationDescID.Default.(func() uuid.UUID)
	projectFields := schema.Project{}.Fields()
	_ = projectFields
	// projectDescTitle is the schema descriptor for title field.
	projectDescTitle := projectFields[2].Descriptor()
	// project.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	project.TitleValidator = func() func(string) error {
		validators := projectDescTitle.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(title string) error {
			for _, fn := range fns {
				if err := fn(title); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// projectDescSlug is the schema descriptor for slug field.
	projectDescSlug := projectFields[3].Descriptor()
	// project.SlugValidator is a validator for the "slug" field. It is called by the builders before save.
	project.SlugValidator = func() func(string) error {
		validators := projectDescSlug.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(slug string) error {
			for _, fn := range fns {
				if err := fn(slug); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// projectDescProjectType is the schema descriptor for project_type field.
	projectDescProjectType := projectFields[5].Descriptor()
	// project.DefaultProjectType holds the default value on creation for the project_type field.
	project.DefaultProjectType = projectDescProjectType.Default.(string)
	// project.ProjectTypeValidator is a validator for the "project_type" field. It is called by the builders before save.
	project.ProjectTypeValidator = projectDescProjectType.Validators[0].(func(string) error)
	// projectDescGithubURL is the schema descriptor for github_url field.
	projectDescGithubURL := projectFields[9].Descriptor()
	// project.GithubURLValidator is a validator for the "github_url" field. It is called by the builders before save.
	project.GithubURLValidator = projectDescGithubURL.Validators[0].(func(string) error)
	// projectDescDemoURL is the schema descriptor for demo_url field.
	projectDescDemoURL := projectFields[10].Descriptor()
	// project.DemoURLValidator is a validator for the "demo_url" field. It is called by the builders before save.
	project.DemoURLValidator = projectDescDemoURL.Validators[0].(func(string) error)
	// projectDescDocumentationURL is the schema descriptor for documentation_url field.
	projectDescDocumentationURL := projectFields[11].Descriptor()
	// project.DocumentationURLValidator is a validator for the "documentation_url" field. It is called by the builders before save.
	project.DocumentationURLValidator = projectDescDocumentationURL.Validators[0].(func(string) error)
	// projectDescThumbnailURL is the schema descriptor for thumbnail_url field.
	projectDescThumbnailURL := projectFields[12].Descriptor()
	// project.ThumbnailURLValidator is a validator for the "thumbnail_url" field. It is called by the builders before save.
	project.ThumbnailURLValidator = projectDescThumbnailURL.Validators[0].(func(string) error)
	// projectDescIsFeatured is the schema descriptor for is_featured field.
	projectDescIsFeatured := projectFields[13].Descriptor()
	// project.DefaultIsFeatured holds the default value on creation for the is_featured field.
	project.DefaultIsFeatured = projectDescIsFeatured.Default.(bool)
	// projectDescIsPublic is the schema descriptor for is_public field.
	projectDescIsPublic := projectFields[14].Descriptor()
	// project.DefaultIsPublic holds the default value on creation for the is_public field.
	project.DefaultIsPublic = projectDescIsPublic.Default.(bool)
	// projectDescViewCount is the schema descriptor for view_count field.
	projectDescViewCount := projectFields[15].Descriptor()
	// project.DefaultViewCount holds the default value on creation for the view_count field.
	project.DefaultViewCount = projectDescViewCount.Default.(int)
	// projectDescStarCount is the schema descriptor for star_count field.
	projectDescStarCount := projectFields[16].Descriptor()
	// project.DefaultStarCount holds the default value on creation for the star_count field.
	project.DefaultStarCount = projectDescStarCount.Default.(int)
	// projectDescSortOrder is the schema descriptor for sort_order field.
	projectDescSortOrder := projectFields[17].Descriptor()
	// project.DefaultSortOrder holds the default value on creation for the sort_order field.
	project.DefaultSortOrder = projectDescSortOrder.Default.(int)
	// projectDescCreatedAt is the schema descriptor for created_at field.
	projectDescCreatedAt := projectFields[18].Descriptor()
	// project.DefaultCreatedAt holds the default value on creation for the created_at field.
	project.DefaultCreatedAt = projectDescCreatedAt.Default.(func() time.Time)
	// projectDescUpdatedAt is the schema descriptor for updated_at field.
	projectDescUpdatedAt := projectFields[19].Descriptor()
	// project.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	project.DefaultUpdatedAt = projectDescUpdatedAt.Default.(func() time.Time)
	// project.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	project.UpdateDefaultUpdatedAt = projectDescUpdatedAt.UpdateDefault.(func() time.Time)
	// projectDescID is the schema descriptor for id field.
	projectDescID := projectFields[0].Descriptor()
	// project.DefaultID holds the default value on creation for the id field.
	project.DefaultID = projectDescID.Default.(func() uuid.UUID)
	projectdetailFields := schema.ProjectDetail{}.Fields()
	_ = projectdetailFields
	// projectdetailDescLicense is the schema descriptor for license field.
	projectdetailDescLicense := projectdetailFields[8].Descriptor()
	// projectdetail.LicenseValidator is a validator for the "license" field. It is called by the builders before save.
	projectdetail.LicenseValidator = projectdetailDescLicense.Validators[0].(func(string) error)
	// projectdetailDescVersion is the schema descriptor for version field.
	projectdetailDescVersion := projectdetailFields[9].Descriptor()
	// projectdetail.VersionValidator is a validator for the "version" field. It is called by the builders before save.
	projectdetail.VersionValidator = projectdetailDescVersion.Validators[0].(func(string) error)
	// projectdetailDescCreatedAt is the schema descriptor for created_at field.
	projectdetailDescCreatedAt := projectdetailFields[10].Descriptor()
	// projectdetail.DefaultCreatedAt holds the default value on creation for the created_at field.
	projectdetail.DefaultCreatedAt = projectdetailDescCreatedAt.Default.(func() time.Time)
	// projectdetailDescUpdatedAt is the schema descriptor for updated_at field.
	projectdetailDescUpdatedAt := projectdetailFields[11].Descriptor()
	// projectdetail.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	projectdetail.DefaultUpdatedAt = projectdetailDescUpdatedAt.Default.(func() time.Time)
	// projectdetail.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	projectdetail.UpdateDefaultUpdatedAt = projectdetailDescUpdatedAt.UpdateDefault.(func() time.Time)
	// projectdetailDescID is the schema descriptor for id field.
	projectdetailDescID := projectdetailFields[0].Descriptor()
	// projectdetail.DefaultID holds the default value on creation for the id field.
	projectdetail.DefaultID = projectdetailDescID.Default.(func() uuid.UUID)
	projectdetailtranslationFields := schema.ProjectDetailTranslation{}.Fields()
	_ = projectdetailtranslationFields
	// projectdetailtranslationDescLanguageCode is the schema descriptor for language_code field.
	projectdetailtranslationDescLanguageCode := projectdetailtranslationFields[2].Descriptor()
	// projectdetailtranslation.LanguageCodeValidator is a validator for the "language_code" field. It is called by the builders before save.
	projectdetailtranslation.LanguageCodeValidator = projectdetailtranslationDescLanguageCode.Validators[0].(func(string) error)
	// projectdetailtranslationDescCreatedAt is the schema descriptor for created_at field.
	projectdetailtranslationDescCreatedAt := projectdetailtranslationFields[9].Descriptor()
	// projectdetailtranslation.DefaultCreatedAt holds the default value on creation for the created_at field.
	projectdetailtranslation.DefaultCreatedAt = projectdetailtranslationDescCreatedAt.Default.(func() time.Time)
	// projectdetailtranslationDescUpdatedAt is the schema descriptor for updated_at field.
	projectdetailtranslationDescUpdatedAt := projectdetailtranslationFields[10].Descriptor()
	// projectdetailtranslation.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	projectdetailtranslation.DefaultUpdatedAt = projectdetailtranslationDescUpdatedAt.Default.(func() time.Time)
	// projectdetailtranslation.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	projectdetailtranslation.UpdateDefaultUpdatedAt = projectdetailtranslationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// projectdetailtranslationDescID is the schema descriptor for id field.
	projectdetailtranslationDescID := projectdetailtranslationFields[0].Descriptor()
	// projectdetailtranslation.DefaultID holds the default value on creation for the id field.
	projectdetailtranslation.DefaultID = projectdetailtranslationDescID.Default.(func() uuid.UUID)
	projectimageFields := schema.ProjectImage{}.Fields()
	_ = projectimageFields
	// projectimageDescImageURL is the schema descriptor for image_url field.
	projectimageDescImageURL := projectimageFields[2].Descriptor()
	// projectimage.ImageURLValidator is a validator for the "image_url" field. It is called by the builders before save.
	projectimage.ImageURLValidator = func() func(string) error {
		validators := projectimageDescImageURL.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(image_url string) error {
			for _, fn := range fns {
				if err := fn(image_url); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// projectimageDescAltText is the schema descriptor for alt_text field.
	projectimageDescAltText := projectimageFields[3].Descriptor()
	// projectimage.AltTextValidator is a validator for the "alt_text" field. It is called by the builders before save.
	projectimage.AltTextValidator = projectimageDescAltText.Validators[0].(func(string) error)
	// projectimageDescImageType is the schema descriptor for image_type field.
	projectimageDescImageType := projectimageFields[5].Descriptor()
	// projectimage.ImageTypeValidator is a validator for the "image_type" field. It is called by the builders before save.
	projectimage.ImageTypeValidator = projectimageDescImageType.Validators[0].(func(string) error)
	// projectimageDescSortOrder is the schema descriptor for sort_order field.
	projectimageDescSortOrder := projectimageFields[6].Descriptor()
	// projectimage.DefaultSortOrder holds the default value on creation for the sort_order field.
	projectimage.DefaultSortOrder = projectimageDescSortOrder.Default.(int)
	// projectimageDescCreatedAt is the schema descriptor for created_at field.
	projectimageDescCreatedAt := projectimageFields[7].Descriptor()
	// projectimage.DefaultCreatedAt holds the default value on creation for the created_at field.
	projectimage.DefaultCreatedAt = projectimageDescCreatedAt.Default.(func() time.Time)
	// projectimageDescUpdatedAt is the schema descriptor for updated_at field.
	projectimageDescUpdatedAt := projectimageFields[8].Descriptor()
	// projectimage.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	projectimage.DefaultUpdatedAt = projectimageDescUpdatedAt.Default.(func() time.Time)
	// projectimage.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	projectimage.UpdateDefaultUpdatedAt = projectimageDescUpdatedAt.UpdateDefault.(func() time.Time)
	// projectimageDescID is the schema descriptor for id field.
	projectimageDescID := projectimageFields[0].Descriptor()
	// projectimage.DefaultID holds the default value on creation for the id field.
	projectimage.DefaultID = projectimageDescID.Default.(func() uuid.UUID)
	projectimagetranslationFields := schema.ProjectImageTranslation{}.Fields()
	_ = projectimagetranslationFields
	// projectimagetranslationDescLanguageCode is the schema descriptor for language_code field.
	projectimagetranslationDescLanguageCode := projectimagetranslationFields[2].Descriptor()
	// projectimagetranslation.LanguageCodeValidator is a validator for the "language_code" field. It is called by the builders before save.
	projectimagetranslation.LanguageCodeValidator = projectimagetranslationDescLanguageCode.Validators[0].(func(string) error)
	// projectimagetranslationDescAltText is the schema descriptor for alt_text field.
	projectimagetranslationDescAltText := projectimagetranslationFields[3].Descriptor()
	// projectimagetranslation.AltTextValidator is a validator for the "alt_text" field. It is called by the builders before save.
	projectimagetranslation.AltTextValidator = projectimagetranslationDescAltText.Validators[0].(func(string) error)
	// projectimagetranslationDescCreatedAt is the schema descriptor for created_at field.
	projectimagetranslationDescCreatedAt := projectimagetranslationFields[5].Descriptor()
	// projectimagetranslation.DefaultCreatedAt holds the default value on creation for the created_at field.
	projectimagetranslation.DefaultCreatedAt = projectimagetranslationDescCreatedAt.Default.(func() time.Time)
	// projectimagetranslationDescUpdatedAt is the schema descriptor for updated_at field.
	projectimagetranslationDescUpdatedAt := projectimagetranslationFields[6].Descriptor()
	// projectimagetranslation.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	projectimagetranslation.DefaultUpdatedAt = projectimagetranslationDescUpdatedAt.Default.(func() time.Time)
	// projectimagetranslation.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	projectimagetranslation.UpdateDefaultUpdatedAt = projectimagetranslationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// projectimagetranslationDescID is the schema descriptor for id field.
	projectimagetranslationDescID := projectimagetranslationFields[0].Descriptor()
	// projectimagetranslation.DefaultID holds the default value on creation for the id field.
	projectimagetranslation.DefaultID = projectimagetranslationDescID.Default.(func() uuid.UUID)
	projectrelationshipFields := schema.ProjectRelationship{}.Fields()
	_ = projectrelationshipFields
	// projectrelationshipDescRelationshipType is the schema descriptor for relationship_type field.
	projectrelationshipDescRelationshipType := projectrelationshipFields[3].Descriptor()
	// projectrelationship.RelationshipTypeValidator is a validator for the "relationship_type" field. It is called by the builders before save.
	projectrelationship.RelationshipTypeValidator = func() func(string) error {
		validators := projectrelationshipDescRelationshipType.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(relationship_type string) error {
			for _, fn := range fns {
				if err := fn(relationship_type); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// projectrelationshipDescCreatedAt is the schema descriptor for created_at field.
	projectrelationshipDescCreatedAt := projectrelationshipFields[4].Descriptor()
	// projectrelationship.DefaultCreatedAt holds the default value on creation for the created_at field.
	projectrelationship.DefaultCreatedAt = projectrelationshipDescCreatedAt.Default.(func() time.Time)
	// projectrelationshipDescUpdatedAt is the schema descriptor for updated_at field.
	projectrelationshipDescUpdatedAt := projectrelationshipFields[5].Descriptor()
	// projectrelationship.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	projectrelationship.DefaultUpdatedAt = projectrelationshipDescUpdatedAt.Default.(func() time.Time)
	// projectrelationship.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	projectrelationship.UpdateDefaultUpdatedAt = projectrelationshipDescUpdatedAt.UpdateDefault.(func() time.Time)
	// projectrelationshipDescID is the schema descriptor for id field.
	projectrelationshipDescID := projectrelationshipFields[0].Descriptor()
	// projectrelationship.DefaultID holds the default value on creation for the id field.
	projectrelationship.DefaultID = projectrelationshipDescID.Default.(func() uuid.UUID)
	projecttechnologyFields := schema.ProjectTechnology{}.Fields()
	_ = projecttechnologyFields
	// projecttechnologyDescTechnologyName is the schema descriptor for technology_name field.
	projecttechnologyDescTechnologyName := projecttechnologyFields[2].Descriptor()
	// projecttechnology.TechnologyNameValidator is a validator for the "technology_name" field. It is called by the builders before save.
	projecttechnology.TechnologyNameValidator = func() func(string) error {
		validators := projecttechnologyDescTechnologyName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(technology_name string) error {
			for _, fn := range fns {
				if err := fn(technology_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// projecttechnologyDescTechnologyType is the schema descriptor for technology_type field.
	projecttechnologyDescTechnologyType := projecttechnologyFields[3].Descriptor()
	// projecttechnology.TechnologyTypeValidator is a validator for the "technology_type" field. It is called by the builders before save.
	projecttechnology.TechnologyTypeValidator = projecttechnologyDescTechnologyType.Validators[0].(func(string) error)
	// projecttechnologyDescSortOrder is the schema descriptor for sort_order field.
	projecttechnologyDescSortOrder := projecttechnologyFields[4].Descriptor()
	// projecttechnology.DefaultSortOrder holds the default value on creation for the sort_order field.
	projecttechnology.DefaultSortOrder = projecttechnologyDescSortOrder.Default.(int)
	// projecttechnologyDescCreatedAt is the schema descriptor for created_at field.
	projecttechnologyDescCreatedAt := projecttechnologyFields[5].Descriptor()
	// projecttechnology.DefaultCreatedAt holds the default value on creation for the created_at field.
	projecttechnology.DefaultCreatedAt = projecttechnologyDescCreatedAt.Default.(func() time.Time)
	// projecttechnologyDescID is the schema descriptor for id field.
	projecttechnologyDescID := projecttechnologyFields[0].Descriptor()
	// projecttechnology.DefaultID holds the default value on creation for the id field.
	projecttechnology.DefaultID = projecttechnologyDescID.Default.(func() uuid.UUID)
	projecttranslationFields := schema.ProjectTranslation{}.Fields()
	_ = projecttranslationFields
	// projecttranslationDescLanguageCode is the schema descriptor for language_code field.
	projecttranslationDescLanguageCode := projecttranslationFields[2].Descriptor()
	// projecttranslation.LanguageCodeValidator is a validator for the "language_code" field. It is called by the builders before save.
	projecttranslation.LanguageCodeValidator = projecttranslationDescLanguageCode.Validators[0].(func(string) error)
	// projecttranslationDescTitle is the schema descriptor for title field.
	projecttranslationDescTitle := projecttranslationFields[3].Descriptor()
	// projecttranslation.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	projecttranslation.TitleValidator = func() func(string) error {
		validators := projecttranslationDescTitle.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(title string) error {
			for _, fn := range fns {
				if err := fn(title); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// projecttranslationDescProjectType is the schema descriptor for project_type field.
	projecttranslationDescProjectType := projecttranslationFields[5].Descriptor()
	// projecttranslation.ProjectTypeValidator is a validator for the "project_type" field. It is called by the builders before save.
	projecttranslation.ProjectTypeValidator = projecttranslationDescProjectType.Validators[0].(func(string) error)
	// projecttranslationDescCreatedAt is the schema descriptor for created_at field.
	projecttranslationDescCreatedAt := projecttranslationFields[6].Descriptor()
	// projecttranslation.DefaultCreatedAt holds the default value on creation for the created_at field.
	projecttranslation.DefaultCreatedAt = projecttranslationDescCreatedAt.Default.(func() time.Time)
	// projecttranslationDescID is the schema descriptor for id field.
	projecttranslationDescID := projecttranslationFields[0].Descriptor()
	// projecttranslation.DefaultID holds the default value on creation for the id field.
	projecttranslation.DefaultID = projecttranslationDescID.Default.(func() uuid.UUID)
	publicationFields := schema.Publication{}.Fields()
	_ = publicationFields
	// publicationDescTitle is the schema descriptor for title field.
	publicationDescTitle := publicationFields[2].Descriptor()
	// publication.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	publication.TitleValidator = func() func(string) error {
		validators := publicationDescTitle.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(title string) error {
			for _, fn := range fns {
				if err := fn(title); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// publicationDescPublicationType is the schema descriptor for publication_type field.
	publicationDescPublicationType := publicationFields[3].Descriptor()
	// publication.PublicationTypeValidator is a validator for the "publication_type" field. It is called by the builders before save.
	publication.PublicationTypeValidator = func() func(string) error {
		validators := publicationDescPublicationType.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(publication_type string) error {
			for _, fn := range fns {
				if err := fn(publication_type); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// publicationDescJournalName is the schema descriptor for journal_name field.
	publicationDescJournalName := publicationFields[4].Descriptor()
	// publication.JournalNameValidator is a validator for the "journal_name" field. It is called by the builders before save.
	publication.JournalNameValidator = publicationDescJournalName.Validators[0].(func(string) error)
	// publicationDescConferenceName is the schema descriptor for conference_name field.
	publicationDescConferenceName := publicationFields[5].Descriptor()
	// publication.ConferenceNameValidator is a validator for the "conference_name" field. It is called by the builders before save.
	publication.ConferenceNameValidator = publicationDescConferenceName.Validators[0].(func(string) error)
	// publicationDescVolume is the schema descriptor for volume field.
	publicationDescVolume := publicationFields[6].Descriptor()
	// publication.VolumeValidator is a validator for the "volume" field. It is called by the builders before save.
	publication.VolumeValidator = publicationDescVolume.Validators[0].(func(string) error)
	// publicationDescIssue is the schema descriptor for issue field.
	publicationDescIssue := publicationFields[7].Descriptor()
	// publication.IssueValidator is a validator for the "issue" field. It is called by the builders before save.
	publication.IssueValidator = publicationDescIssue.Validators[0].(func(string) error)
	// publicationDescPages is the schema descriptor for pages field.
	publicationDescPages := publicationFields[8].Descriptor()
	// publication.PagesValidator is a validator for the "pages" field. It is called by the builders before save.
	publication.PagesValidator = publicationDescPages.Validators[0].(func(string) error)
	// publicationDescDoi is the schema descriptor for doi field.
	publicationDescDoi := publicationFields[10].Descriptor()
	// publication.DoiValidator is a validator for the "doi" field. It is called by the builders before save.
	publication.DoiValidator = publicationDescDoi.Validators[0].(func(string) error)
	// publicationDescIsbn is the schema descriptor for isbn field.
	publicationDescIsbn := publicationFields[11].Descriptor()
	// publication.IsbnValidator is a validator for the "isbn" field. It is called by the builders before save.
	publication.IsbnValidator = publicationDescIsbn.Validators[0].(func(string) error)
	// publicationDescURL is the schema descriptor for url field.
	publicationDescURL := publicationFields[12].Descriptor()
	// publication.URLValidator is a validator for the "url" field. It is called by the builders before save.
	publication.URLValidator = publicationDescURL.Validators[0].(func(string) error)
	// publicationDescPdfURL is the schema descriptor for pdf_url field.
	publicationDescPdfURL := publicationFields[13].Descriptor()
	// publication.PdfURLValidator is a validator for the "pdf_url" field. It is called by the builders before save.
	publication.PdfURLValidator = publicationDescPdfURL.Validators[0].(func(string) error)
	// publicationDescCitationCount is the schema descriptor for citation_count field.
	publicationDescCitationCount := publicationFields[14].Descriptor()
	// publication.DefaultCitationCount holds the default value on creation for the citation_count field.
	publication.DefaultCitationCount = publicationDescCitationCount.Default.(int)
	// publicationDescIsPeerReviewed is the schema descriptor for is_peer_reviewed field.
	publicationDescIsPeerReviewed := publicationFields[15].Descriptor()
	// publication.DefaultIsPeerReviewed holds the default value on creation for the is_peer_reviewed field.
	publication.DefaultIsPeerReviewed = publicationDescIsPeerReviewed.Default.(bool)
	// publicationDescSortOrder is the schema descriptor for sort_order field.
	publicationDescSortOrder := publicationFields[16].Descriptor()
	// publication.DefaultSortOrder holds the default value on creation for the sort_order field.
	publication.DefaultSortOrder = publicationDescSortOrder.Default.(int)
	// publicationDescCreatedAt is the schema descriptor for created_at field.
	publicationDescCreatedAt := publicationFields[17].Descriptor()
	// publication.DefaultCreatedAt holds the default value on creation for the created_at field.
	publication.DefaultCreatedAt = publicationDescCreatedAt.Default.(func() time.Time)
	// publicationDescUpdatedAt is the schema descriptor for updated_at field.
	publicationDescUpdatedAt := publicationFields[18].Descriptor()
	// publication.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	publication.DefaultUpdatedAt = publicationDescUpdatedAt.Default.(func() time.Time)
	// publication.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	publication.UpdateDefaultUpdatedAt = publicationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// publicationDescID is the schema descriptor for id field.
	publicationDescID := publicationFields[0].Descriptor()
	// publication.DefaultID holds the default value on creation for the id field.
	publication.DefaultID = publicationDescID.Default.(func() uuid.UUID)
	publicationauthorFields := schema.PublicationAuthor{}.Fields()
	_ = publicationauthorFields
	// publicationauthorDescAuthorName is the schema descriptor for author_name field.
	publicationauthorDescAuthorName := publicationauthorFields[2].Descriptor()
	// publicationauthor.AuthorNameValidator is a validator for the "author_name" field. It is called by the builders before save.
	publicationauthor.AuthorNameValidator = func() func(string) error {
		validators := publicationauthorDescAuthorName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(author_name string) error {
			for _, fn := range fns {
				if err := fn(author_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// publicationauthorDescIsCorresponding is the schema descriptor for is_corresponding field.
	publicationauthorDescIsCorresponding := publicationauthorFields[4].Descriptor()
	// publicationauthor.DefaultIsCorresponding holds the default value on creation for the is_corresponding field.
	publicationauthor.DefaultIsCorresponding = publicationauthorDescIsCorresponding.Default.(bool)
	// publicationauthorDescAffiliation is the schema descriptor for affiliation field.
	publicationauthorDescAffiliation := publicationauthorFields[5].Descriptor()
	// publicationauthor.AffiliationValidator is a validator for the "affiliation" field. It is called by the builders before save.
	publicationauthor.AffiliationValidator = publicationauthorDescAffiliation.Validators[0].(func(string) error)
	// publicationauthorDescCreatedAt is the schema descriptor for created_at field.
	publicationauthorDescCreatedAt := publicationauthorFields[6].Descriptor()
	// publicationauthor.DefaultCreatedAt holds the default value on creation for the created_at field.
	publicationauthor.DefaultCreatedAt = publicationauthorDescCreatedAt.Default.(func() time.Time)
	// publicationauthorDescUpdatedAt is the schema descriptor for updated_at field.
	publicationauthorDescUpdatedAt := publicationauthorFields[7].Descriptor()
	// publicationauthor.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	publicationauthor.DefaultUpdatedAt = publicationauthorDescUpdatedAt.Default.(func() time.Time)
	// publicationauthor.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	publicationauthor.UpdateDefaultUpdatedAt = publicationauthorDescUpdatedAt.UpdateDefault.(func() time.Time)
	// publicationauthorDescID is the schema descriptor for id field.
	publicationauthorDescID := publicationauthorFields[0].Descriptor()
	// publicationauthor.DefaultID holds the default value on creation for the id field.
	publicationauthor.DefaultID = publicationauthorDescID.Default.(func() uuid.UUID)
	publicationtranslationFields := schema.PublicationTranslation{}.Fields()
	_ = publicationtranslationFields
	// publicationtranslationDescLanguageCode is the schema descriptor for language_code field.
	publicationtranslationDescLanguageCode := publicationtranslationFields[2].Descriptor()
	// publicationtranslation.LanguageCodeValidator is a validator for the "language_code" field. It is called by the builders before save.
	publicationtranslation.LanguageCodeValidator = publicationtranslationDescLanguageCode.Validators[0].(func(string) error)
	// publicationtranslationDescTitle is the schema descriptor for title field.
	publicationtranslationDescTitle := publicationtranslationFields[3].Descriptor()
	// publicationtranslation.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	publicationtranslation.TitleValidator = func() func(string) error {
		validators := publicationtranslationDescTitle.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(title string) error {
			for _, fn := range fns {
				if err := fn(title); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// publicationtranslationDescJournalName is the schema descriptor for journal_name field.
	publicationtranslationDescJournalName := publicationtranslationFields[4].Descriptor()
	// publicationtranslation.JournalNameValidator is a validator for the "journal_name" field. It is called by the builders before save.
	publicationtranslation.JournalNameValidator = publicationtranslationDescJournalName.Validators[0].(func(string) error)
	// publicationtranslationDescConferenceName is the schema descriptor for conference_name field.
	publicationtranslationDescConferenceName := publicationtranslationFields[5].Descriptor()
	// publicationtranslation.ConferenceNameValidator is a validator for the "conference_name" field. It is called by the builders before save.
	publicationtranslation.ConferenceNameValidator = publicationtranslationDescConferenceName.Validators[0].(func(string) error)
	// publicationtranslationDescCreatedAt is the schema descriptor for created_at field.
	publicationtranslationDescCreatedAt := publicationtranslationFields[6].Descriptor()
	// publicationtranslation.DefaultCreatedAt holds the default value on creation for the created_at field.
	publicationtranslation.DefaultCreatedAt = publicationtranslationDescCreatedAt.Default.(func() time.Time)
	// publicationtranslationDescUpdatedAt is the schema descriptor for updated_at field.
	publicationtranslationDescUpdatedAt := publicationtranslationFields[7].Descriptor()
	// publicationtranslation.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	publicationtranslation.DefaultUpdatedAt = publicationtranslationDescUpdatedAt.Default.(func() time.Time)
	// publicationtranslation.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	publicationtranslation.UpdateDefaultUpdatedAt = publicationtranslationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// publicationtranslationDescID is the schema descriptor for id field.
	publicationtranslationDescID := publicationtranslationFields[0].Descriptor()
	// publicationtranslation.DefaultID holds the default value on creation for the id field.
	publicationtranslation.DefaultID = publicationtranslationDescID.Default.(func() uuid.UUID)
	researchprojectFields := schema.ResearchProject{}.Fields()
	_ = researchprojectFields
	// researchprojectDescTitle is the schema descriptor for title field.
	researchprojectDescTitle := researchprojectFields[2].Descriptor()
	// researchproject.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	researchproject.TitleValidator = func() func(string) error {
		validators := researchprojectDescTitle.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(title string) error {
			for _, fn := range fns {
				if err := fn(title); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// researchprojectDescIsOngoing is the schema descriptor for is_ongoing field.
	researchprojectDescIsOngoing := researchprojectFields[5].Descriptor()
	// researchproject.DefaultIsOngoing holds the default value on creation for the is_ongoing field.
	researchproject.DefaultIsOngoing = researchprojectDescIsOngoing.Default.(bool)
	// researchprojectDescLocation is the schema descriptor for location field.
	researchprojectDescLocation := researchprojectFields[6].Descriptor()
	// researchproject.LocationValidator is a validator for the "location" field. It is called by the builders before save.
	researchproject.LocationValidator = researchprojectDescLocation.Validators[0].(func(string) error)
	// researchprojectDescResearchType is the schema descriptor for research_type field.
	researchprojectDescResearchType := researchprojectFields[7].Descriptor()
	// researchproject.ResearchTypeValidator is a validator for the "research_type" field. It is called by the builders before save.
	researchproject.ResearchTypeValidator = researchprojectDescResearchType.Validators[0].(func(string) error)
	// researchprojectDescFundingSource is the schema descriptor for funding_source field.
	researchprojectDescFundingSource := researchprojectFields[8].Descriptor()
	// researchproject.FundingSourceValidator is a validator for the "funding_source" field. It is called by the builders before save.
	researchproject.FundingSourceValidator = researchprojectDescFundingSource.Validators[0].(func(string) error)
	// researchprojectDescSortOrder is the schema descriptor for sort_order field.
	researchprojectDescSortOrder := researchprojectFields[10].Descriptor()
	// researchproject.DefaultSortOrder holds the default value on creation for the sort_order field.
	researchproject.DefaultSortOrder = researchprojectDescSortOrder.Default.(int)
	// researchprojectDescCreatedAt is the schema descriptor for created_at field.
	researchprojectDescCreatedAt := researchprojectFields[11].Descriptor()
	// researchproject.DefaultCreatedAt holds the default value on creation for the created_at field.
	researchproject.DefaultCreatedAt = researchprojectDescCreatedAt.Default.(func() time.Time)
	// researchprojectDescUpdatedAt is the schema descriptor for updated_at field.
	researchprojectDescUpdatedAt := researchprojectFields[12].Descriptor()
	// researchproject.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	researchproject.DefaultUpdatedAt = researchprojectDescUpdatedAt.Default.(func() time.Time)
	// researchproject.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	researchproject.UpdateDefaultUpdatedAt = researchprojectDescUpdatedAt.UpdateDefault.(func() time.Time)
	// researchprojectDescID is the schema descriptor for id field.
	researchprojectDescID := researchprojectFields[0].Descriptor()
	// researchproject.DefaultID holds the default value on creation for the id field.
	researchproject.DefaultID = researchprojectDescID.Default.(func() uuid.UUID)
	researchprojectdetailFields := schema.ResearchProjectDetail{}.Fields()
	_ = researchprojectdetailFields
	// researchprojectdetailDescDetailText is the schema descriptor for detail_text field.
	researchprojectdetailDescDetailText := researchprojectdetailFields[2].Descriptor()
	// researchprojectdetail.DetailTextValidator is a validator for the "detail_text" field. It is called by the builders before save.
	researchprojectdetail.DetailTextValidator = researchprojectdetailDescDetailText.Validators[0].(func(string) error)
	// researchprojectdetailDescSortOrder is the schema descriptor for sort_order field.
	researchprojectdetailDescSortOrder := researchprojectdetailFields[3].Descriptor()
	// researchprojectdetail.DefaultSortOrder holds the default value on creation for the sort_order field.
	researchprojectdetail.DefaultSortOrder = researchprojectdetailDescSortOrder.Default.(int)
	// researchprojectdetailDescCreatedAt is the schema descriptor for created_at field.
	researchprojectdetailDescCreatedAt := researchprojectdetailFields[4].Descriptor()
	// researchprojectdetail.DefaultCreatedAt holds the default value on creation for the created_at field.
	researchprojectdetail.DefaultCreatedAt = researchprojectdetailDescCreatedAt.Default.(func() time.Time)
	// researchprojectdetailDescUpdatedAt is the schema descriptor for updated_at field.
	researchprojectdetailDescUpdatedAt := researchprojectdetailFields[5].Descriptor()
	// researchprojectdetail.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	researchprojectdetail.DefaultUpdatedAt = researchprojectdetailDescUpdatedAt.Default.(func() time.Time)
	// researchprojectdetail.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	researchprojectdetail.UpdateDefaultUpdatedAt = researchprojectdetailDescUpdatedAt.UpdateDefault.(func() time.Time)
	// researchprojectdetailDescID is the schema descriptor for id field.
	researchprojectdetailDescID := researchprojectdetailFields[0].Descriptor()
	// researchprojectdetail.DefaultID holds the default value on creation for the id field.
	researchprojectdetail.DefaultID = researchprojectdetailDescID.Default.(func() uuid.UUID)
	researchprojectdetailtranslationFields := schema.ResearchProjectDetailTranslation{}.Fields()
	_ = researchprojectdetailtranslationFields
	// researchprojectdetailtranslationDescLanguageCode is the schema descriptor for language_code field.
	researchprojectdetailtranslationDescLanguageCode := researchprojectdetailtranslationFields[2].Descriptor()
	// researchprojectdetailtranslation.LanguageCodeValidator is a validator for the "language_code" field. It is called by the builders before save.
	researchprojectdetailtranslation.LanguageCodeValidator = researchprojectdetailtranslationDescLanguageCode.Validators[0].(func(string) error)
	// researchprojectdetailtranslationDescDetailText is the schema descriptor for detail_text field.
	researchprojectdetailtranslationDescDetailText := researchprojectdetailtranslationFields[3].Descriptor()
	// researchprojectdetailtranslation.DetailTextValidator is a validator for the "detail_text" field. It is called by the builders before save.
	researchprojectdetailtranslation.DetailTextValidator = researchprojectdetailtranslationDescDetailText.Validators[0].(func(string) error)
	// researchprojectdetailtranslationDescCreatedAt is the schema descriptor for created_at field.
	researchprojectdetailtranslationDescCreatedAt := researchprojectdetailtranslationFields[4].Descriptor()
	// researchprojectdetailtranslation.DefaultCreatedAt holds the default value on creation for the created_at field.
	researchprojectdetailtranslation.DefaultCreatedAt = researchprojectdetailtranslationDescCreatedAt.Default.(func() time.Time)
	// researchprojectdetailtranslationDescUpdatedAt is the schema descriptor for updated_at field.
	researchprojectdetailtranslationDescUpdatedAt := researchprojectdetailtranslationFields[5].Descriptor()
	// researchprojectdetailtranslation.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	researchprojectdetailtranslation.DefaultUpdatedAt = researchprojectdetailtranslationDescUpdatedAt.Default.(func() time.Time)
	// researchprojectdetailtranslation.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	researchprojectdetailtranslation.UpdateDefaultUpdatedAt = researchprojectdetailtranslationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// researchprojectdetailtranslationDescID is the schema descriptor for id field.
	researchprojectdetailtranslationDescID := researchprojectdetailtranslationFields[0].Descriptor()
	// researchprojectdetailtranslation.DefaultID holds the default value on creation for the id field.
	researchprojectdetailtranslation.DefaultID = researchprojectdetailtranslationDescID.Default.(func() uuid.UUID)
	researchprojecttranslationFields := schema.ResearchProjectTranslation{}.Fields()
	_ = researchprojecttranslationFields
	// researchprojecttranslationDescLanguageCode is the schema descriptor for language_code field.
	researchprojecttranslationDescLanguageCode := researchprojecttranslationFields[2].Descriptor()
	// researchprojecttranslation.LanguageCodeValidator is a validator for the "language_code" field. It is called by the builders before save.
	researchprojecttranslation.LanguageCodeValidator = researchprojecttranslationDescLanguageCode.Validators[0].(func(string) error)
	// researchprojecttranslationDescTitle is the schema descriptor for title field.
	researchprojecttranslationDescTitle := researchprojecttranslationFields[3].Descriptor()
	// researchprojecttranslation.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	researchprojecttranslation.TitleValidator = func() func(string) error {
		validators := researchprojecttranslationDescTitle.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(title string) error {
			for _, fn := range fns {
				if err := fn(title); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// researchprojecttranslationDescLocation is the schema descriptor for location field.
	researchprojecttranslationDescLocation := researchprojecttranslationFields[4].Descriptor()
	// researchprojecttranslation.LocationValidator is a validator for the "location" field. It is called by the builders before save.
	researchprojecttranslation.LocationValidator = researchprojecttranslationDescLocation.Validators[0].(func(string) error)
	// researchprojecttranslationDescResearchType is the schema descriptor for research_type field.
	researchprojecttranslationDescResearchType := researchprojecttranslationFields[5].Descriptor()
	// researchprojecttranslation.ResearchTypeValidator is a validator for the "research_type" field. It is called by the builders before save.
	researchprojecttranslation.ResearchTypeValidator = researchprojecttranslationDescResearchType.Validators[0].(func(string) error)
	// researchprojecttranslationDescFundingSource is the schema descriptor for funding_source field.
	researchprojecttranslationDescFundingSource := researchprojecttranslationFields[6].Descriptor()
	// researchprojecttranslation.FundingSourceValidator is a validator for the "funding_source" field. It is called by the builders before save.
	researchprojecttranslation.FundingSourceValidator = researchprojecttranslationDescFundingSource.Validators[0].(func(string) error)
	// researchprojecttranslationDescCreatedAt is the schema descriptor for created_at field.
	researchprojecttranslationDescCreatedAt := researchprojecttranslationFields[7].Descriptor()
	// researchprojecttranslation.DefaultCreatedAt holds the default value on creation for the created_at field.
	researchprojecttranslation.DefaultCreatedAt = researchprojecttranslationDescCreatedAt.Default.(func() time.Time)
	// researchprojecttranslationDescUpdatedAt is the schema descriptor for updated_at field.
	researchprojecttranslationDescUpdatedAt := researchprojecttranslationFields[8].Descriptor()
	// researchprojecttranslation.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	researchprojecttranslation.DefaultUpdatedAt = researchprojecttranslationDescUpdatedAt.Default.(func() time.Time)
	// researchprojecttranslation.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	researchprojecttranslation.UpdateDefaultUpdatedAt = researchprojecttranslationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// researchprojecttranslationDescID is the schema descriptor for id field.
	researchprojecttranslationDescID := researchprojecttranslationFields[0].Descriptor()
	// researchprojecttranslation.DefaultID holds the default value on creation for the id field.
	researchprojecttranslation.DefaultID = researchprojecttranslationDescID.Default.(func() uuid.UUID)
	sociallinkFields := schema.SocialLink{}.Fields()
	_ = sociallinkFields
	// sociallinkDescPlatform is the schema descriptor for platform field.
	sociallinkDescPlatform := sociallinkFields[2].Descriptor()
	// sociallink.PlatformValidator is a validator for the "platform" field. It is called by the builders before save.
	sociallink.PlatformValidator = func() func(string) error {
		validators := sociallinkDescPlatform.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(platform string) error {
			for _, fn := range fns {
				if err := fn(platform); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// sociallinkDescURL is the schema descriptor for url field.
	sociallinkDescURL := sociallinkFields[3].Descriptor()
	// sociallink.URLValidator is a validator for the "url" field. It is called by the builders before save.
	sociallink.URLValidator = func() func(string) error {
		validators := sociallinkDescURL.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(url string) error {
			for _, fn := range fns {
				if err := fn(url); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// sociallinkDescDisplayName is the schema descriptor for display_name field.
	sociallinkDescDisplayName := sociallinkFields[4].Descriptor()
	// sociallink.DisplayNameValidator is a validator for the "display_name" field. It is called by the builders before save.
	sociallink.DisplayNameValidator = sociallinkDescDisplayName.Validators[0].(func(string) error)
	// sociallinkDescIsActive is the schema descriptor for is_active field.
	sociallinkDescIsActive := sociallinkFields[5].Descriptor()
	// sociallink.DefaultIsActive holds the default value on creation for the is_active field.
	sociallink.DefaultIsActive = sociallinkDescIsActive.Default.(bool)
	// sociallinkDescSortOrder is the schema descriptor for sort_order field.
	sociallinkDescSortOrder := sociallinkFields[6].Descriptor()
	// sociallink.DefaultSortOrder holds the default value on creation for the sort_order field.
	sociallink.DefaultSortOrder = sociallinkDescSortOrder.Default.(int)
	// sociallinkDescCreatedAt is the schema descriptor for created_at field.
	sociallinkDescCreatedAt := sociallinkFields[7].Descriptor()
	// sociallink.DefaultCreatedAt holds the default value on creation for the created_at field.
	sociallink.DefaultCreatedAt = sociallinkDescCreatedAt.Default.(func() time.Time)
	// sociallinkDescID is the schema descriptor for id field.
	sociallinkDescID := sociallinkFields[0].Descriptor()
	// sociallink.DefaultID holds the default value on creation for the id field.
	sociallink.DefaultID = sociallinkDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[1].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = func() func(string) error {
		validators := userDescUsername.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(username string) error {
			for _, fn := range fns {
				if err := fn(username); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[2].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = func() func(string) error {
		validators := userDescEmail.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(email string) error {
			for _, fn := range fns {
				if err := fn(email); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescPasswordHash is the schema descriptor for password_hash field.
	userDescPasswordHash := userFields[3].Descriptor()
	// user.PasswordHashValidator is a validator for the "password_hash" field. It is called by the builders before save.
	user.PasswordHashValidator = func() func(string) error {
		validators := userDescPasswordHash.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(password_hash string) error {
			for _, fn := range fns {
				if err := fn(password_hash); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescFirstName is the schema descriptor for first_name field.
	userDescFirstName := userFields[4].Descriptor()
	// user.FirstNameValidator is a validator for the "first_name" field. It is called by the builders before save.
	user.FirstNameValidator = func() func(string) error {
		validators := userDescFirstName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(first_name string) error {
			for _, fn := range fns {
				if err := fn(first_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescLastName is the schema descriptor for last_name field.
	userDescLastName := userFields[5].Descriptor()
	// user.LastNameValidator is a validator for the "last_name" field. It is called by the builders before save.
	user.LastNameValidator = func() func(string) error {
		validators := userDescLastName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(last_name string) error {
			for _, fn := range fns {
				if err := fn(last_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescAvatarURL is the schema descriptor for avatar_url field.
	userDescAvatarURL := userFields[6].Descriptor()
	// user.AvatarURLValidator is a validator for the "avatar_url" field. It is called by the builders before save.
	user.AvatarURLValidator = userDescAvatarURL.Validators[0].(func(string) error)
	// userDescIsActive is the schema descriptor for is_active field.
	userDescIsActive := userFields[8].Descriptor()
	// user.DefaultIsActive holds the default value on creation for the is_active field.
	user.DefaultIsActive = userDescIsActive.Default.(bool)
	// userDescIsAdmin is the schema descriptor for is_admin field.
	userDescIsAdmin := userFields[9].Descriptor()
	// user.DefaultIsAdmin holds the default value on creation for the is_admin field.
	user.DefaultIsAdmin = userDescIsAdmin.Default.(bool)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[11].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[12].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
	workexperienceFields := schema.WorkExperience{}.Fields()
	_ = workexperienceFields
	// workexperienceDescCompany is the schema descriptor for company field.
	workexperienceDescCompany := workexperienceFields[2].Descriptor()
	// workexperience.CompanyValidator is a validator for the "company" field. It is called by the builders before save.
	workexperience.CompanyValidator = func() func(string) error {
		validators := workexperienceDescCompany.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(company string) error {
			for _, fn := range fns {
				if err := fn(company); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// workexperienceDescPosition is the schema descriptor for position field.
	workexperienceDescPosition := workexperienceFields[3].Descriptor()
	// workexperience.PositionValidator is a validator for the "position" field. It is called by the builders before save.
	workexperience.PositionValidator = func() func(string) error {
		validators := workexperienceDescPosition.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(position string) error {
			for _, fn := range fns {
				if err := fn(position); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// workexperienceDescIsCurrent is the schema descriptor for is_current field.
	workexperienceDescIsCurrent := workexperienceFields[6].Descriptor()
	// workexperience.DefaultIsCurrent holds the default value on creation for the is_current field.
	workexperience.DefaultIsCurrent = workexperienceDescIsCurrent.Default.(bool)
	// workexperienceDescLocation is the schema descriptor for location field.
	workexperienceDescLocation := workexperienceFields[7].Descriptor()
	// workexperience.LocationValidator is a validator for the "location" field. It is called by the builders before save.
	workexperience.LocationValidator = workexperienceDescLocation.Validators[0].(func(string) error)
	// workexperienceDescCompanyWebsite is the schema descriptor for company_website field.
	workexperienceDescCompanyWebsite := workexperienceFields[8].Descriptor()
	// workexperience.CompanyWebsiteValidator is a validator for the "company_website" field. It is called by the builders before save.
	workexperience.CompanyWebsiteValidator = workexperienceDescCompanyWebsite.Validators[0].(func(string) error)
	// workexperienceDescCompanyLogoURL is the schema descriptor for company_logo_url field.
	workexperienceDescCompanyLogoURL := workexperienceFields[9].Descriptor()
	// workexperience.CompanyLogoURLValidator is a validator for the "company_logo_url" field. It is called by the builders before save.
	workexperience.CompanyLogoURLValidator = workexperienceDescCompanyLogoURL.Validators[0].(func(string) error)
	// workexperienceDescSortOrder is the schema descriptor for sort_order field.
	workexperienceDescSortOrder := workexperienceFields[10].Descriptor()
	// workexperience.DefaultSortOrder holds the default value on creation for the sort_order field.
	workexperience.DefaultSortOrder = workexperienceDescSortOrder.Default.(int)
	// workexperienceDescCreatedAt is the schema descriptor for created_at field.
	workexperienceDescCreatedAt := workexperienceFields[11].Descriptor()
	// workexperience.DefaultCreatedAt holds the default value on creation for the created_at field.
	workexperience.DefaultCreatedAt = workexperienceDescCreatedAt.Default.(func() time.Time)
	// workexperienceDescUpdatedAt is the schema descriptor for updated_at field.
	workexperienceDescUpdatedAt := workexperienceFields[12].Descriptor()
	// workexperience.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	workexperience.DefaultUpdatedAt = workexperienceDescUpdatedAt.Default.(func() time.Time)
	// workexperience.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	workexperience.UpdateDefaultUpdatedAt = workexperienceDescUpdatedAt.UpdateDefault.(func() time.Time)
	// workexperienceDescID is the schema descriptor for id field.
	workexperienceDescID := workexperienceFields[0].Descriptor()
	// workexperience.DefaultID holds the default value on creation for the id field.
	workexperience.DefaultID = workexperienceDescID.Default.(func() uuid.UUID)
	workexperiencedetailFields := schema.WorkExperienceDetail{}.Fields()
	_ = workexperiencedetailFields
	// workexperiencedetailDescDetailText is the schema descriptor for detail_text field.
	workexperiencedetailDescDetailText := workexperiencedetailFields[2].Descriptor()
	// workexperiencedetail.DetailTextValidator is a validator for the "detail_text" field. It is called by the builders before save.
	workexperiencedetail.DetailTextValidator = workexperiencedetailDescDetailText.Validators[0].(func(string) error)
	// workexperiencedetailDescSortOrder is the schema descriptor for sort_order field.
	workexperiencedetailDescSortOrder := workexperiencedetailFields[3].Descriptor()
	// workexperiencedetail.DefaultSortOrder holds the default value on creation for the sort_order field.
	workexperiencedetail.DefaultSortOrder = workexperiencedetailDescSortOrder.Default.(int)
	// workexperiencedetailDescCreatedAt is the schema descriptor for created_at field.
	workexperiencedetailDescCreatedAt := workexperiencedetailFields[4].Descriptor()
	// workexperiencedetail.DefaultCreatedAt holds the default value on creation for the created_at field.
	workexperiencedetail.DefaultCreatedAt = workexperiencedetailDescCreatedAt.Default.(func() time.Time)
	// workexperiencedetailDescUpdatedAt is the schema descriptor for updated_at field.
	workexperiencedetailDescUpdatedAt := workexperiencedetailFields[5].Descriptor()
	// workexperiencedetail.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	workexperiencedetail.DefaultUpdatedAt = workexperiencedetailDescUpdatedAt.Default.(func() time.Time)
	// workexperiencedetail.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	workexperiencedetail.UpdateDefaultUpdatedAt = workexperiencedetailDescUpdatedAt.UpdateDefault.(func() time.Time)
	// workexperiencedetailDescID is the schema descriptor for id field.
	workexperiencedetailDescID := workexperiencedetailFields[0].Descriptor()
	// workexperiencedetail.DefaultID holds the default value on creation for the id field.
	workexperiencedetail.DefaultID = workexperiencedetailDescID.Default.(func() uuid.UUID)
	workexperiencedetailtranslationFields := schema.WorkExperienceDetailTranslation{}.Fields()
	_ = workexperiencedetailtranslationFields
	// workexperiencedetailtranslationDescLanguageCode is the schema descriptor for language_code field.
	workexperiencedetailtranslationDescLanguageCode := workexperiencedetailtranslationFields[2].Descriptor()
	// workexperiencedetailtranslation.LanguageCodeValidator is a validator for the "language_code" field. It is called by the builders before save.
	workexperiencedetailtranslation.LanguageCodeValidator = workexperiencedetailtranslationDescLanguageCode.Validators[0].(func(string) error)
	// workexperiencedetailtranslationDescDetailText is the schema descriptor for detail_text field.
	workexperiencedetailtranslationDescDetailText := workexperiencedetailtranslationFields[3].Descriptor()
	// workexperiencedetailtranslation.DetailTextValidator is a validator for the "detail_text" field. It is called by the builders before save.
	workexperiencedetailtranslation.DetailTextValidator = workexperiencedetailtranslationDescDetailText.Validators[0].(func(string) error)
	// workexperiencedetailtranslationDescCreatedAt is the schema descriptor for created_at field.
	workexperiencedetailtranslationDescCreatedAt := workexperiencedetailtranslationFields[4].Descriptor()
	// workexperiencedetailtranslation.DefaultCreatedAt holds the default value on creation for the created_at field.
	workexperiencedetailtranslation.DefaultCreatedAt = workexperiencedetailtranslationDescCreatedAt.Default.(func() time.Time)
	// workexperiencedetailtranslationDescUpdatedAt is the schema descriptor for updated_at field.
	workexperiencedetailtranslationDescUpdatedAt := workexperiencedetailtranslationFields[5].Descriptor()
	// workexperiencedetailtranslation.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	workexperiencedetailtranslation.DefaultUpdatedAt = workexperiencedetailtranslationDescUpdatedAt.Default.(func() time.Time)
	// workexperiencedetailtranslation.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	workexperiencedetailtranslation.UpdateDefaultUpdatedAt = workexperiencedetailtranslationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// workexperiencedetailtranslationDescID is the schema descriptor for id field.
	workexperiencedetailtranslationDescID := workexperiencedetailtranslationFields[0].Descriptor()
	// workexperiencedetailtranslation.DefaultID holds the default value on creation for the id field.
	workexperiencedetailtranslation.DefaultID = workexperiencedetailtranslationDescID.Default.(func() uuid.UUID)
	workexperiencetranslationFields := schema.WorkExperienceTranslation{}.Fields()
	_ = workexperiencetranslationFields
	// workexperiencetranslationDescLanguageCode is the schema descriptor for language_code field.
	workexperiencetranslationDescLanguageCode := workexperiencetranslationFields[2].Descriptor()
	// workexperiencetranslation.LanguageCodeValidator is a validator for the "language_code" field. It is called by the builders before save.
	workexperiencetranslation.LanguageCodeValidator = workexperiencetranslationDescLanguageCode.Validators[0].(func(string) error)
	// workexperiencetranslationDescCompany is the schema descriptor for company field.
	workexperiencetranslationDescCompany := workexperiencetranslationFields[3].Descriptor()
	// workexperiencetranslation.CompanyValidator is a validator for the "company" field. It is called by the builders before save.
	workexperiencetranslation.CompanyValidator = workexperiencetranslationDescCompany.Validators[0].(func(string) error)
	// workexperiencetranslationDescPosition is the schema descriptor for position field.
	workexperiencetranslationDescPosition := workexperiencetranslationFields[4].Descriptor()
	// workexperiencetranslation.PositionValidator is a validator for the "position" field. It is called by the builders before save.
	workexperiencetranslation.PositionValidator = workexperiencetranslationDescPosition.Validators[0].(func(string) error)
	// workexperiencetranslationDescLocation is the schema descriptor for location field.
	workexperiencetranslationDescLocation := workexperiencetranslationFields[5].Descriptor()
	// workexperiencetranslation.LocationValidator is a validator for the "location" field. It is called by the builders before save.
	workexperiencetranslation.LocationValidator = workexperiencetranslationDescLocation.Validators[0].(func(string) error)
	// workexperiencetranslationDescCreatedAt is the schema descriptor for created_at field.
	workexperiencetranslationDescCreatedAt := workexperiencetranslationFields[6].Descriptor()
	// workexperiencetranslation.DefaultCreatedAt holds the default value on creation for the created_at field.
	workexperiencetranslation.DefaultCreatedAt = workexperiencetranslationDescCreatedAt.Default.(func() time.Time)
	// workexperiencetranslationDescID is the schema descriptor for id field.
	workexperiencetranslationDescID := workexperiencetranslationFields[0].Descriptor()
	// workexperiencetranslation.DefaultID holds the default value on creation for the id field.
	workexperiencetranslation.DefaultID = workexperiencetranslationDescID.Default.(func() uuid.UUID)
}
