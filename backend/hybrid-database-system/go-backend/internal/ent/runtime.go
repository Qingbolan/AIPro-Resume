// Code generated by ent, DO NOT EDIT.

package ent

import (
	"silan-backend/internal/ent/award"
	"silan-backend/internal/ent/blogcategory"
	"silan-backend/internal/ent/blogcomment"
	"silan-backend/internal/ent/blogpost"
	"silan-backend/internal/ent/blogseries"
	"silan-backend/internal/ent/blogtag"
	"silan-backend/internal/ent/education"
	"silan-backend/internal/ent/idea"
	"silan-backend/internal/ent/language"
	"silan-backend/internal/ent/personalinfo"
	"silan-backend/internal/ent/project"
	"silan-backend/internal/ent/projectdetail"
	"silan-backend/internal/ent/projectimage"
	"silan-backend/internal/ent/projecttechnology"
	"silan-backend/internal/ent/publication"
	"silan-backend/internal/ent/researchproject"
	"silan-backend/internal/ent/schema"
	"silan-backend/internal/ent/sociallink"
	"silan-backend/internal/ent/user"
	"silan-backend/internal/ent/workexperience"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	awardFields := schema.Award{}.Fields()
	_ = awardFields
	// awardDescTitle is the schema descriptor for title field.
	awardDescTitle := awardFields[1].Descriptor()
	// award.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	award.TitleValidator = awardDescTitle.Validators[0].(func(string) error)
	// awardDescAwardingOrganization is the schema descriptor for awarding_organization field.
	awardDescAwardingOrganization := awardFields[2].Descriptor()
	// award.AwardingOrganizationValidator is a validator for the "awarding_organization" field. It is called by the builders before save.
	award.AwardingOrganizationValidator = awardDescAwardingOrganization.Validators[0].(func(string) error)
	// awardDescAwardType is the schema descriptor for award_type field.
	awardDescAwardType := awardFields[4].Descriptor()
	// award.AwardTypeValidator is a validator for the "award_type" field. It is called by the builders before save.
	award.AwardTypeValidator = awardDescAwardType.Validators[0].(func(string) error)
	// awardDescCertificateURL is the schema descriptor for certificate_url field.
	awardDescCertificateURL := awardFields[7].Descriptor()
	// award.CertificateURLValidator is a validator for the "certificate_url" field. It is called by the builders before save.
	award.CertificateURLValidator = awardDescCertificateURL.Validators[0].(func(string) error)
	// awardDescSortOrder is the schema descriptor for sort_order field.
	awardDescSortOrder := awardFields[8].Descriptor()
	// award.DefaultSortOrder holds the default value on creation for the sort_order field.
	award.DefaultSortOrder = awardDescSortOrder.Default.(int)
	// awardDescCreatedAt is the schema descriptor for created_at field.
	awardDescCreatedAt := awardFields[9].Descriptor()
	// award.DefaultCreatedAt holds the default value on creation for the created_at field.
	award.DefaultCreatedAt = awardDescCreatedAt.Default.(func() time.Time)
	// awardDescUpdatedAt is the schema descriptor for updated_at field.
	awardDescUpdatedAt := awardFields[10].Descriptor()
	// award.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	award.DefaultUpdatedAt = awardDescUpdatedAt.Default.(func() time.Time)
	// award.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	award.UpdateDefaultUpdatedAt = awardDescUpdatedAt.UpdateDefault.(func() time.Time)
	// awardDescID is the schema descriptor for id field.
	awardDescID := awardFields[0].Descriptor()
	// award.DefaultID holds the default value on creation for the id field.
	award.DefaultID = awardDescID.Default.(func() uuid.UUID)
	blogcategoryFields := schema.BlogCategory{}.Fields()
	_ = blogcategoryFields
	// blogcategoryDescName is the schema descriptor for name field.
	blogcategoryDescName := blogcategoryFields[1].Descriptor()
	// blogcategory.NameValidator is a validator for the "name" field. It is called by the builders before save.
	blogcategory.NameValidator = blogcategoryDescName.Validators[0].(func(string) error)
	// blogcategoryDescSlug is the schema descriptor for slug field.
	blogcategoryDescSlug := blogcategoryFields[2].Descriptor()
	// blogcategory.SlugValidator is a validator for the "slug" field. It is called by the builders before save.
	blogcategory.SlugValidator = blogcategoryDescSlug.Validators[0].(func(string) error)
	// blogcategoryDescColor is the schema descriptor for color field.
	blogcategoryDescColor := blogcategoryFields[4].Descriptor()
	// blogcategory.ColorValidator is a validator for the "color" field. It is called by the builders before save.
	blogcategory.ColorValidator = blogcategoryDescColor.Validators[0].(func(string) error)
	// blogcategoryDescIcon is the schema descriptor for icon field.
	blogcategoryDescIcon := blogcategoryFields[5].Descriptor()
	// blogcategory.IconValidator is a validator for the "icon" field. It is called by the builders before save.
	blogcategory.IconValidator = blogcategoryDescIcon.Validators[0].(func(string) error)
	// blogcategoryDescPostCount is the schema descriptor for post_count field.
	blogcategoryDescPostCount := blogcategoryFields[6].Descriptor()
	// blogcategory.DefaultPostCount holds the default value on creation for the post_count field.
	blogcategory.DefaultPostCount = blogcategoryDescPostCount.Default.(int)
	// blogcategoryDescCreatedAt is the schema descriptor for created_at field.
	blogcategoryDescCreatedAt := blogcategoryFields[7].Descriptor()
	// blogcategory.DefaultCreatedAt holds the default value on creation for the created_at field.
	blogcategory.DefaultCreatedAt = blogcategoryDescCreatedAt.Default.(func() time.Time)
	// blogcategoryDescUpdatedAt is the schema descriptor for updated_at field.
	blogcategoryDescUpdatedAt := blogcategoryFields[8].Descriptor()
	// blogcategory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	blogcategory.DefaultUpdatedAt = blogcategoryDescUpdatedAt.Default.(func() time.Time)
	// blogcategory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	blogcategory.UpdateDefaultUpdatedAt = blogcategoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// blogcategoryDescID is the schema descriptor for id field.
	blogcategoryDescID := blogcategoryFields[0].Descriptor()
	// blogcategory.DefaultID holds the default value on creation for the id field.
	blogcategory.DefaultID = blogcategoryDescID.Default.(func() uuid.UUID)
	blogcommentFields := schema.BlogComment{}.Fields()
	_ = blogcommentFields
	// blogcommentDescAuthorName is the schema descriptor for author_name field.
	blogcommentDescAuthorName := blogcommentFields[3].Descriptor()
	// blogcomment.AuthorNameValidator is a validator for the "author_name" field. It is called by the builders before save.
	blogcomment.AuthorNameValidator = blogcommentDescAuthorName.Validators[0].(func(string) error)
	// blogcommentDescAuthorEmail is the schema descriptor for author_email field.
	blogcommentDescAuthorEmail := blogcommentFields[4].Descriptor()
	// blogcomment.AuthorEmailValidator is a validator for the "author_email" field. It is called by the builders before save.
	blogcomment.AuthorEmailValidator = blogcommentDescAuthorEmail.Validators[0].(func(string) error)
	// blogcommentDescAuthorWebsite is the schema descriptor for author_website field.
	blogcommentDescAuthorWebsite := blogcommentFields[5].Descriptor()
	// blogcomment.AuthorWebsiteValidator is a validator for the "author_website" field. It is called by the builders before save.
	blogcomment.AuthorWebsiteValidator = blogcommentDescAuthorWebsite.Validators[0].(func(string) error)
	// blogcommentDescIsApproved is the schema descriptor for is_approved field.
	blogcommentDescIsApproved := blogcommentFields[7].Descriptor()
	// blogcomment.DefaultIsApproved holds the default value on creation for the is_approved field.
	blogcomment.DefaultIsApproved = blogcommentDescIsApproved.Default.(bool)
	// blogcommentDescIsSpam is the schema descriptor for is_spam field.
	blogcommentDescIsSpam := blogcommentFields[8].Descriptor()
	// blogcomment.DefaultIsSpam holds the default value on creation for the is_spam field.
	blogcomment.DefaultIsSpam = blogcommentDescIsSpam.Default.(bool)
	// blogcommentDescIPAddress is the schema descriptor for ip_address field.
	blogcommentDescIPAddress := blogcommentFields[9].Descriptor()
	// blogcomment.IPAddressValidator is a validator for the "ip_address" field. It is called by the builders before save.
	blogcomment.IPAddressValidator = blogcommentDescIPAddress.Validators[0].(func(string) error)
	// blogcommentDescUserAgent is the schema descriptor for user_agent field.
	blogcommentDescUserAgent := blogcommentFields[10].Descriptor()
	// blogcomment.UserAgentValidator is a validator for the "user_agent" field. It is called by the builders before save.
	blogcomment.UserAgentValidator = blogcommentDescUserAgent.Validators[0].(func(string) error)
	// blogcommentDescLikeCount is the schema descriptor for like_count field.
	blogcommentDescLikeCount := blogcommentFields[11].Descriptor()
	// blogcomment.DefaultLikeCount holds the default value on creation for the like_count field.
	blogcomment.DefaultLikeCount = blogcommentDescLikeCount.Default.(int)
	// blogcommentDescDislikeCount is the schema descriptor for dislike_count field.
	blogcommentDescDislikeCount := blogcommentFields[12].Descriptor()
	// blogcomment.DefaultDislikeCount holds the default value on creation for the dislike_count field.
	blogcomment.DefaultDislikeCount = blogcommentDescDislikeCount.Default.(int)
	// blogcommentDescCreatedAt is the schema descriptor for created_at field.
	blogcommentDescCreatedAt := blogcommentFields[13].Descriptor()
	// blogcomment.DefaultCreatedAt holds the default value on creation for the created_at field.
	blogcomment.DefaultCreatedAt = blogcommentDescCreatedAt.Default.(func() time.Time)
	// blogcommentDescUpdatedAt is the schema descriptor for updated_at field.
	blogcommentDescUpdatedAt := blogcommentFields[14].Descriptor()
	// blogcomment.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	blogcomment.DefaultUpdatedAt = blogcommentDescUpdatedAt.Default.(func() time.Time)
	// blogcomment.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	blogcomment.UpdateDefaultUpdatedAt = blogcommentDescUpdatedAt.UpdateDefault.(func() time.Time)
	// blogcommentDescID is the schema descriptor for id field.
	blogcommentDescID := blogcommentFields[0].Descriptor()
	// blogcomment.DefaultID holds the default value on creation for the id field.
	blogcomment.DefaultID = blogcommentDescID.Default.(func() uuid.UUID)
	blogpostFields := schema.BlogPost{}.Fields()
	_ = blogpostFields
	// blogpostDescTitle is the schema descriptor for title field.
	blogpostDescTitle := blogpostFields[1].Descriptor()
	// blogpost.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	blogpost.TitleValidator = blogpostDescTitle.Validators[0].(func(string) error)
	// blogpostDescSlug is the schema descriptor for slug field.
	blogpostDescSlug := blogpostFields[2].Descriptor()
	// blogpost.SlugValidator is a validator for the "slug" field. It is called by the builders before save.
	blogpost.SlugValidator = blogpostDescSlug.Validators[0].(func(string) error)
	// blogpostDescIsFeatured is the schema descriptor for is_featured field.
	blogpostDescIsFeatured := blogpostFields[7].Descriptor()
	// blogpost.DefaultIsFeatured holds the default value on creation for the is_featured field.
	blogpost.DefaultIsFeatured = blogpostDescIsFeatured.Default.(bool)
	// blogpostDescFeaturedImageURL is the schema descriptor for featured_image_url field.
	blogpostDescFeaturedImageURL := blogpostFields[8].Descriptor()
	// blogpost.FeaturedImageURLValidator is a validator for the "featured_image_url" field. It is called by the builders before save.
	blogpost.FeaturedImageURLValidator = blogpostDescFeaturedImageURL.Validators[0].(func(string) error)
	// blogpostDescViewCount is the schema descriptor for view_count field.
	blogpostDescViewCount := blogpostFields[10].Descriptor()
	// blogpost.DefaultViewCount holds the default value on creation for the view_count field.
	blogpost.DefaultViewCount = blogpostDescViewCount.Default.(int)
	// blogpostDescLikeCount is the schema descriptor for like_count field.
	blogpostDescLikeCount := blogpostFields[11].Descriptor()
	// blogpost.DefaultLikeCount holds the default value on creation for the like_count field.
	blogpost.DefaultLikeCount = blogpostDescLikeCount.Default.(int)
	// blogpostDescCommentCount is the schema descriptor for comment_count field.
	blogpostDescCommentCount := blogpostFields[12].Descriptor()
	// blogpost.DefaultCommentCount holds the default value on creation for the comment_count field.
	blogpost.DefaultCommentCount = blogpostDescCommentCount.Default.(int)
	// blogpostDescCreatedAt is the schema descriptor for created_at field.
	blogpostDescCreatedAt := blogpostFields[15].Descriptor()
	// blogpost.DefaultCreatedAt holds the default value on creation for the created_at field.
	blogpost.DefaultCreatedAt = blogpostDescCreatedAt.Default.(func() time.Time)
	// blogpostDescUpdatedAt is the schema descriptor for updated_at field.
	blogpostDescUpdatedAt := blogpostFields[16].Descriptor()
	// blogpost.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	blogpost.DefaultUpdatedAt = blogpostDescUpdatedAt.Default.(func() time.Time)
	// blogpost.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	blogpost.UpdateDefaultUpdatedAt = blogpostDescUpdatedAt.UpdateDefault.(func() time.Time)
	// blogpostDescID is the schema descriptor for id field.
	blogpostDescID := blogpostFields[0].Descriptor()
	// blogpost.DefaultID holds the default value on creation for the id field.
	blogpost.DefaultID = blogpostDescID.Default.(func() uuid.UUID)
	blogseriesFields := schema.BlogSeries{}.Fields()
	_ = blogseriesFields
	// blogseriesDescTitle is the schema descriptor for title field.
	blogseriesDescTitle := blogseriesFields[1].Descriptor()
	// blogseries.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	blogseries.TitleValidator = blogseriesDescTitle.Validators[0].(func(string) error)
	// blogseriesDescSlug is the schema descriptor for slug field.
	blogseriesDescSlug := blogseriesFields[2].Descriptor()
	// blogseries.SlugValidator is a validator for the "slug" field. It is called by the builders before save.
	blogseries.SlugValidator = blogseriesDescSlug.Validators[0].(func(string) error)
	// blogseriesDescFeaturedImageURL is the schema descriptor for featured_image_url field.
	blogseriesDescFeaturedImageURL := blogseriesFields[4].Descriptor()
	// blogseries.FeaturedImageURLValidator is a validator for the "featured_image_url" field. It is called by the builders before save.
	blogseries.FeaturedImageURLValidator = blogseriesDescFeaturedImageURL.Validators[0].(func(string) error)
	// blogseriesDescPostCount is the schema descriptor for post_count field.
	blogseriesDescPostCount := blogseriesFields[5].Descriptor()
	// blogseries.DefaultPostCount holds the default value on creation for the post_count field.
	blogseries.DefaultPostCount = blogseriesDescPostCount.Default.(int)
	// blogseriesDescIsCompleted is the schema descriptor for is_completed field.
	blogseriesDescIsCompleted := blogseriesFields[6].Descriptor()
	// blogseries.DefaultIsCompleted holds the default value on creation for the is_completed field.
	blogseries.DefaultIsCompleted = blogseriesDescIsCompleted.Default.(bool)
	// blogseriesDescCreatedAt is the schema descriptor for created_at field.
	blogseriesDescCreatedAt := blogseriesFields[7].Descriptor()
	// blogseries.DefaultCreatedAt holds the default value on creation for the created_at field.
	blogseries.DefaultCreatedAt = blogseriesDescCreatedAt.Default.(func() time.Time)
	// blogseriesDescUpdatedAt is the schema descriptor for updated_at field.
	blogseriesDescUpdatedAt := blogseriesFields[8].Descriptor()
	// blogseries.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	blogseries.DefaultUpdatedAt = blogseriesDescUpdatedAt.Default.(func() time.Time)
	// blogseries.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	blogseries.UpdateDefaultUpdatedAt = blogseriesDescUpdatedAt.UpdateDefault.(func() time.Time)
	// blogseriesDescID is the schema descriptor for id field.
	blogseriesDescID := blogseriesFields[0].Descriptor()
	// blogseries.DefaultID holds the default value on creation for the id field.
	blogseries.DefaultID = blogseriesDescID.Default.(func() uuid.UUID)
	blogtagFields := schema.BlogTag{}.Fields()
	_ = blogtagFields
	// blogtagDescName is the schema descriptor for name field.
	blogtagDescName := blogtagFields[1].Descriptor()
	// blogtag.NameValidator is a validator for the "name" field. It is called by the builders before save.
	blogtag.NameValidator = blogtagDescName.Validators[0].(func(string) error)
	// blogtagDescSlug is the schema descriptor for slug field.
	blogtagDescSlug := blogtagFields[2].Descriptor()
	// blogtag.SlugValidator is a validator for the "slug" field. It is called by the builders before save.
	blogtag.SlugValidator = blogtagDescSlug.Validators[0].(func(string) error)
	// blogtagDescColor is the schema descriptor for color field.
	blogtagDescColor := blogtagFields[4].Descriptor()
	// blogtag.ColorValidator is a validator for the "color" field. It is called by the builders before save.
	blogtag.ColorValidator = blogtagDescColor.Validators[0].(func(string) error)
	// blogtagDescPostCount is the schema descriptor for post_count field.
	blogtagDescPostCount := blogtagFields[5].Descriptor()
	// blogtag.DefaultPostCount holds the default value on creation for the post_count field.
	blogtag.DefaultPostCount = blogtagDescPostCount.Default.(int)
	// blogtagDescCreatedAt is the schema descriptor for created_at field.
	blogtagDescCreatedAt := blogtagFields[6].Descriptor()
	// blogtag.DefaultCreatedAt holds the default value on creation for the created_at field.
	blogtag.DefaultCreatedAt = blogtagDescCreatedAt.Default.(func() time.Time)
	// blogtagDescUpdatedAt is the schema descriptor for updated_at field.
	blogtagDescUpdatedAt := blogtagFields[7].Descriptor()
	// blogtag.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	blogtag.DefaultUpdatedAt = blogtagDescUpdatedAt.Default.(func() time.Time)
	// blogtag.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	blogtag.UpdateDefaultUpdatedAt = blogtagDescUpdatedAt.UpdateDefault.(func() time.Time)
	// blogtagDescID is the schema descriptor for id field.
	blogtagDescID := blogtagFields[0].Descriptor()
	// blogtag.DefaultID holds the default value on creation for the id field.
	blogtag.DefaultID = blogtagDescID.Default.(func() uuid.UUID)
	educationFields := schema.Education{}.Fields()
	_ = educationFields
	// educationDescInstitution is the schema descriptor for institution field.
	educationDescInstitution := educationFields[1].Descriptor()
	// education.InstitutionValidator is a validator for the "institution" field. It is called by the builders before save.
	education.InstitutionValidator = educationDescInstitution.Validators[0].(func(string) error)
	// educationDescDegree is the schema descriptor for degree field.
	educationDescDegree := educationFields[2].Descriptor()
	// education.DegreeValidator is a validator for the "degree" field. It is called by the builders before save.
	education.DegreeValidator = educationDescDegree.Validators[0].(func(string) error)
	// educationDescFieldOfStudy is the schema descriptor for field_of_study field.
	educationDescFieldOfStudy := educationFields[3].Descriptor()
	// education.FieldOfStudyValidator is a validator for the "field_of_study" field. It is called by the builders before save.
	education.FieldOfStudyValidator = educationDescFieldOfStudy.Validators[0].(func(string) error)
	// educationDescIsCurrent is the schema descriptor for is_current field.
	educationDescIsCurrent := educationFields[6].Descriptor()
	// education.DefaultIsCurrent holds the default value on creation for the is_current field.
	education.DefaultIsCurrent = educationDescIsCurrent.Default.(bool)
	// educationDescGpa is the schema descriptor for gpa field.
	educationDescGpa := educationFields[7].Descriptor()
	// education.GpaValidator is a validator for the "gpa" field. It is called by the builders before save.
	education.GpaValidator = educationDescGpa.Validators[0].(func(string) error)
	// educationDescLocation is the schema descriptor for location field.
	educationDescLocation := educationFields[8].Descriptor()
	// education.LocationValidator is a validator for the "location" field. It is called by the builders before save.
	education.LocationValidator = educationDescLocation.Validators[0].(func(string) error)
	// educationDescInstitutionWebsite is the schema descriptor for institution_website field.
	educationDescInstitutionWebsite := educationFields[9].Descriptor()
	// education.InstitutionWebsiteValidator is a validator for the "institution_website" field. It is called by the builders before save.
	education.InstitutionWebsiteValidator = educationDescInstitutionWebsite.Validators[0].(func(string) error)
	// educationDescInstitutionLogoURL is the schema descriptor for institution_logo_url field.
	educationDescInstitutionLogoURL := educationFields[10].Descriptor()
	// education.InstitutionLogoURLValidator is a validator for the "institution_logo_url" field. It is called by the builders before save.
	education.InstitutionLogoURLValidator = educationDescInstitutionLogoURL.Validators[0].(func(string) error)
	// educationDescSortOrder is the schema descriptor for sort_order field.
	educationDescSortOrder := educationFields[11].Descriptor()
	// education.DefaultSortOrder holds the default value on creation for the sort_order field.
	education.DefaultSortOrder = educationDescSortOrder.Default.(int)
	// educationDescCreatedAt is the schema descriptor for created_at field.
	educationDescCreatedAt := educationFields[12].Descriptor()
	// education.DefaultCreatedAt holds the default value on creation for the created_at field.
	education.DefaultCreatedAt = educationDescCreatedAt.Default.(func() time.Time)
	// educationDescUpdatedAt is the schema descriptor for updated_at field.
	educationDescUpdatedAt := educationFields[13].Descriptor()
	// education.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	education.DefaultUpdatedAt = educationDescUpdatedAt.Default.(func() time.Time)
	// education.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	education.UpdateDefaultUpdatedAt = educationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// educationDescID is the schema descriptor for id field.
	educationDescID := educationFields[0].Descriptor()
	// education.DefaultID holds the default value on creation for the id field.
	education.DefaultID = educationDescID.Default.(func() uuid.UUID)
	ideaFields := schema.Idea{}.Fields()
	_ = ideaFields
	// ideaDescTitle is the schema descriptor for title field.
	ideaDescTitle := ideaFields[1].Descriptor()
	// idea.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	idea.TitleValidator = ideaDescTitle.Validators[0].(func(string) error)
	// ideaDescSlug is the schema descriptor for slug field.
	ideaDescSlug := ideaFields[2].Descriptor()
	// idea.SlugValidator is a validator for the "slug" field. It is called by the builders before save.
	idea.SlugValidator = ideaDescSlug.Validators[0].(func(string) error)
	// ideaDescCollaborationNeeded is the schema descriptor for collaboration_needed field.
	ideaDescCollaborationNeeded := ideaFields[11].Descriptor()
	// idea.DefaultCollaborationNeeded holds the default value on creation for the collaboration_needed field.
	idea.DefaultCollaborationNeeded = ideaDescCollaborationNeeded.Default.(bool)
	// ideaDescFundingRequired is the schema descriptor for funding_required field.
	ideaDescFundingRequired := ideaFields[12].Descriptor()
	// idea.DefaultFundingRequired holds the default value on creation for the funding_required field.
	idea.DefaultFundingRequired = ideaDescFundingRequired.Default.(bool)
	// ideaDescIsPublic is the schema descriptor for is_public field.
	ideaDescIsPublic := ideaFields[14].Descriptor()
	// idea.DefaultIsPublic holds the default value on creation for the is_public field.
	idea.DefaultIsPublic = ideaDescIsPublic.Default.(bool)
	// ideaDescViewCount is the schema descriptor for view_count field.
	ideaDescViewCount := ideaFields[15].Descriptor()
	// idea.DefaultViewCount holds the default value on creation for the view_count field.
	idea.DefaultViewCount = ideaDescViewCount.Default.(int)
	// ideaDescLikeCount is the schema descriptor for like_count field.
	ideaDescLikeCount := ideaFields[16].Descriptor()
	// idea.DefaultLikeCount holds the default value on creation for the like_count field.
	idea.DefaultLikeCount = ideaDescLikeCount.Default.(int)
	// ideaDescCreatedAt is the schema descriptor for created_at field.
	ideaDescCreatedAt := ideaFields[17].Descriptor()
	// idea.DefaultCreatedAt holds the default value on creation for the created_at field.
	idea.DefaultCreatedAt = ideaDescCreatedAt.Default.(func() time.Time)
	// ideaDescUpdatedAt is the schema descriptor for updated_at field.
	ideaDescUpdatedAt := ideaFields[18].Descriptor()
	// idea.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	idea.DefaultUpdatedAt = ideaDescUpdatedAt.Default.(func() time.Time)
	// idea.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	idea.UpdateDefaultUpdatedAt = ideaDescUpdatedAt.UpdateDefault.(func() time.Time)
	// ideaDescID is the schema descriptor for id field.
	ideaDescID := ideaFields[0].Descriptor()
	// idea.DefaultID holds the default value on creation for the id field.
	idea.DefaultID = ideaDescID.Default.(func() uuid.UUID)
	languageFields := schema.Language{}.Fields()
	_ = languageFields
	// languageDescCode is the schema descriptor for code field.
	languageDescCode := languageFields[0].Descriptor()
	// language.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	language.CodeValidator = languageDescCode.Validators[0].(func(string) error)
	// languageDescName is the schema descriptor for name field.
	languageDescName := languageFields[1].Descriptor()
	// language.NameValidator is a validator for the "name" field. It is called by the builders before save.
	language.NameValidator = languageDescName.Validators[0].(func(string) error)
	// languageDescNativeName is the schema descriptor for native_name field.
	languageDescNativeName := languageFields[2].Descriptor()
	// language.NativeNameValidator is a validator for the "native_name" field. It is called by the builders before save.
	language.NativeNameValidator = languageDescNativeName.Validators[0].(func(string) error)
	// languageDescIsActive is the schema descriptor for is_active field.
	languageDescIsActive := languageFields[3].Descriptor()
	// language.DefaultIsActive holds the default value on creation for the is_active field.
	language.DefaultIsActive = languageDescIsActive.Default.(bool)
	// languageDescCreatedAt is the schema descriptor for created_at field.
	languageDescCreatedAt := languageFields[4].Descriptor()
	// language.DefaultCreatedAt holds the default value on creation for the created_at field.
	language.DefaultCreatedAt = languageDescCreatedAt.Default.(func() time.Time)
	personalinfoFields := schema.PersonalInfo{}.Fields()
	_ = personalinfoFields
	// personalinfoDescPhone is the schema descriptor for phone field.
	personalinfoDescPhone := personalinfoFields[1].Descriptor()
	// personalinfo.PhoneValidator is a validator for the "phone" field. It is called by the builders before save.
	personalinfo.PhoneValidator = personalinfoDescPhone.Validators[0].(func(string) error)
	// personalinfoDescWebsite is the schema descriptor for website field.
	personalinfoDescWebsite := personalinfoFields[2].Descriptor()
	// personalinfo.WebsiteValidator is a validator for the "website" field. It is called by the builders before save.
	personalinfo.WebsiteValidator = personalinfoDescWebsite.Validators[0].(func(string) error)
	// personalinfoDescLocation is the schema descriptor for location field.
	personalinfoDescLocation := personalinfoFields[3].Descriptor()
	// personalinfo.LocationValidator is a validator for the "location" field. It is called by the builders before save.
	personalinfo.LocationValidator = personalinfoDescLocation.Validators[0].(func(string) error)
	// personalinfoDescAddress is the schema descriptor for address field.
	personalinfoDescAddress := personalinfoFields[4].Descriptor()
	// personalinfo.AddressValidator is a validator for the "address" field. It is called by the builders before save.
	personalinfo.AddressValidator = personalinfoDescAddress.Validators[0].(func(string) error)
	// personalinfoDescLinkedin is the schema descriptor for linkedin field.
	personalinfoDescLinkedin := personalinfoFields[5].Descriptor()
	// personalinfo.LinkedinValidator is a validator for the "linkedin" field. It is called by the builders before save.
	personalinfo.LinkedinValidator = personalinfoDescLinkedin.Validators[0].(func(string) error)
	// personalinfoDescGithub is the schema descriptor for github field.
	personalinfoDescGithub := personalinfoFields[6].Descriptor()
	// personalinfo.GithubValidator is a validator for the "github" field. It is called by the builders before save.
	personalinfo.GithubValidator = personalinfoDescGithub.Validators[0].(func(string) error)
	// personalinfoDescTwitter is the schema descriptor for twitter field.
	personalinfoDescTwitter := personalinfoFields[7].Descriptor()
	// personalinfo.TwitterValidator is a validator for the "twitter" field. It is called by the builders before save.
	personalinfo.TwitterValidator = personalinfoDescTwitter.Validators[0].(func(string) error)
	// personalinfoDescPersonalEmail is the schema descriptor for personal_email field.
	personalinfoDescPersonalEmail := personalinfoFields[8].Descriptor()
	// personalinfo.PersonalEmailValidator is a validator for the "personal_email" field. It is called by the builders before save.
	personalinfo.PersonalEmailValidator = personalinfoDescPersonalEmail.Validators[0].(func(string) error)
	// personalinfoDescCreatedAt is the schema descriptor for created_at field.
	personalinfoDescCreatedAt := personalinfoFields[10].Descriptor()
	// personalinfo.DefaultCreatedAt holds the default value on creation for the created_at field.
	personalinfo.DefaultCreatedAt = personalinfoDescCreatedAt.Default.(func() time.Time)
	// personalinfoDescUpdatedAt is the schema descriptor for updated_at field.
	personalinfoDescUpdatedAt := personalinfoFields[11].Descriptor()
	// personalinfo.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	personalinfo.DefaultUpdatedAt = personalinfoDescUpdatedAt.Default.(func() time.Time)
	// personalinfo.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	personalinfo.UpdateDefaultUpdatedAt = personalinfoDescUpdatedAt.UpdateDefault.(func() time.Time)
	// personalinfoDescID is the schema descriptor for id field.
	personalinfoDescID := personalinfoFields[0].Descriptor()
	// personalinfo.DefaultID holds the default value on creation for the id field.
	personalinfo.DefaultID = personalinfoDescID.Default.(func() uuid.UUID)
	projectFields := schema.Project{}.Fields()
	_ = projectFields
	// projectDescTitle is the schema descriptor for title field.
	projectDescTitle := projectFields[1].Descriptor()
	// project.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	project.TitleValidator = projectDescTitle.Validators[0].(func(string) error)
	// projectDescSlug is the schema descriptor for slug field.
	projectDescSlug := projectFields[2].Descriptor()
	// project.SlugValidator is a validator for the "slug" field. It is called by the builders before save.
	project.SlugValidator = projectDescSlug.Validators[0].(func(string) error)
	// projectDescProjectType is the schema descriptor for project_type field.
	projectDescProjectType := projectFields[4].Descriptor()
	// project.DefaultProjectType holds the default value on creation for the project_type field.
	project.DefaultProjectType = projectDescProjectType.Default.(string)
	// project.ProjectTypeValidator is a validator for the "project_type" field. It is called by the builders before save.
	project.ProjectTypeValidator = projectDescProjectType.Validators[0].(func(string) error)
	// projectDescGithubURL is the schema descriptor for github_url field.
	projectDescGithubURL := projectFields[8].Descriptor()
	// project.GithubURLValidator is a validator for the "github_url" field. It is called by the builders before save.
	project.GithubURLValidator = projectDescGithubURL.Validators[0].(func(string) error)
	// projectDescDemoURL is the schema descriptor for demo_url field.
	projectDescDemoURL := projectFields[9].Descriptor()
	// project.DemoURLValidator is a validator for the "demo_url" field. It is called by the builders before save.
	project.DemoURLValidator = projectDescDemoURL.Validators[0].(func(string) error)
	// projectDescDocumentationURL is the schema descriptor for documentation_url field.
	projectDescDocumentationURL := projectFields[10].Descriptor()
	// project.DocumentationURLValidator is a validator for the "documentation_url" field. It is called by the builders before save.
	project.DocumentationURLValidator = projectDescDocumentationURL.Validators[0].(func(string) error)
	// projectDescThumbnailURL is the schema descriptor for thumbnail_url field.
	projectDescThumbnailURL := projectFields[11].Descriptor()
	// project.ThumbnailURLValidator is a validator for the "thumbnail_url" field. It is called by the builders before save.
	project.ThumbnailURLValidator = projectDescThumbnailURL.Validators[0].(func(string) error)
	// projectDescIsFeatured is the schema descriptor for is_featured field.
	projectDescIsFeatured := projectFields[12].Descriptor()
	// project.DefaultIsFeatured holds the default value on creation for the is_featured field.
	project.DefaultIsFeatured = projectDescIsFeatured.Default.(bool)
	// projectDescIsPublic is the schema descriptor for is_public field.
	projectDescIsPublic := projectFields[13].Descriptor()
	// project.DefaultIsPublic holds the default value on creation for the is_public field.
	project.DefaultIsPublic = projectDescIsPublic.Default.(bool)
	// projectDescViewCount is the schema descriptor for view_count field.
	projectDescViewCount := projectFields[14].Descriptor()
	// project.DefaultViewCount holds the default value on creation for the view_count field.
	project.DefaultViewCount = projectDescViewCount.Default.(int)
	// projectDescStarCount is the schema descriptor for star_count field.
	projectDescStarCount := projectFields[15].Descriptor()
	// project.DefaultStarCount holds the default value on creation for the star_count field.
	project.DefaultStarCount = projectDescStarCount.Default.(int)
	// projectDescSortOrder is the schema descriptor for sort_order field.
	projectDescSortOrder := projectFields[16].Descriptor()
	// project.DefaultSortOrder holds the default value on creation for the sort_order field.
	project.DefaultSortOrder = projectDescSortOrder.Default.(int)
	// projectDescCreatedAt is the schema descriptor for created_at field.
	projectDescCreatedAt := projectFields[17].Descriptor()
	// project.DefaultCreatedAt holds the default value on creation for the created_at field.
	project.DefaultCreatedAt = projectDescCreatedAt.Default.(func() time.Time)
	// projectDescUpdatedAt is the schema descriptor for updated_at field.
	projectDescUpdatedAt := projectFields[18].Descriptor()
	// project.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	project.DefaultUpdatedAt = projectDescUpdatedAt.Default.(func() time.Time)
	// project.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	project.UpdateDefaultUpdatedAt = projectDescUpdatedAt.UpdateDefault.(func() time.Time)
	// projectDescID is the schema descriptor for id field.
	projectDescID := projectFields[0].Descriptor()
	// project.DefaultID holds the default value on creation for the id field.
	project.DefaultID = projectDescID.Default.(func() uuid.UUID)
	projectdetailFields := schema.ProjectDetail{}.Fields()
	_ = projectdetailFields
	// projectdetailDescProjectDuration is the schema descriptor for project_duration field.
	projectdetailDescProjectDuration := projectdetailFields[13].Descriptor()
	// projectdetail.ProjectDurationValidator is a validator for the "project_duration" field. It is called by the builders before save.
	projectdetail.ProjectDurationValidator = projectdetailDescProjectDuration.Validators[0].(func(string) error)
	// projectdetailDescTargetAudience is the schema descriptor for target_audience field.
	projectdetailDescTargetAudience := projectdetailFields[14].Descriptor()
	// projectdetail.TargetAudienceValidator is a validator for the "target_audience" field. It is called by the builders before save.
	projectdetail.TargetAudienceValidator = projectdetailDescTargetAudience.Validators[0].(func(string) error)
	// projectdetailDescCreatedAt is the schema descriptor for created_at field.
	projectdetailDescCreatedAt := projectdetailFields[17].Descriptor()
	// projectdetail.DefaultCreatedAt holds the default value on creation for the created_at field.
	projectdetail.DefaultCreatedAt = projectdetailDescCreatedAt.Default.(func() time.Time)
	// projectdetailDescUpdatedAt is the schema descriptor for updated_at field.
	projectdetailDescUpdatedAt := projectdetailFields[18].Descriptor()
	// projectdetail.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	projectdetail.DefaultUpdatedAt = projectdetailDescUpdatedAt.Default.(func() time.Time)
	// projectdetail.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	projectdetail.UpdateDefaultUpdatedAt = projectdetailDescUpdatedAt.UpdateDefault.(func() time.Time)
	// projectdetailDescID is the schema descriptor for id field.
	projectdetailDescID := projectdetailFields[0].Descriptor()
	// projectdetail.DefaultID holds the default value on creation for the id field.
	projectdetail.DefaultID = projectdetailDescID.Default.(func() uuid.UUID)
	projectimageFields := schema.ProjectImage{}.Fields()
	_ = projectimageFields
	// projectimageDescImageURL is the schema descriptor for image_url field.
	projectimageDescImageURL := projectimageFields[1].Descriptor()
	// projectimage.ImageURLValidator is a validator for the "image_url" field. It is called by the builders before save.
	projectimage.ImageURLValidator = projectimageDescImageURL.Validators[0].(func(string) error)
	// projectimageDescTitle is the schema descriptor for title field.
	projectimageDescTitle := projectimageFields[2].Descriptor()
	// projectimage.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	projectimage.TitleValidator = projectimageDescTitle.Validators[0].(func(string) error)
	// projectimageDescAltText is the schema descriptor for alt_text field.
	projectimageDescAltText := projectimageFields[4].Descriptor()
	// projectimage.AltTextValidator is a validator for the "alt_text" field. It is called by the builders before save.
	projectimage.AltTextValidator = projectimageDescAltText.Validators[0].(func(string) error)
	// projectimageDescFileName is the schema descriptor for file_name field.
	projectimageDescFileName := projectimageFields[6].Descriptor()
	// projectimage.FileNameValidator is a validator for the "file_name" field. It is called by the builders before save.
	projectimage.FileNameValidator = projectimageDescFileName.Validators[0].(func(string) error)
	// projectimageDescMimeType is the schema descriptor for mime_type field.
	projectimageDescMimeType := projectimageFields[8].Descriptor()
	// projectimage.MimeTypeValidator is a validator for the "mime_type" field. It is called by the builders before save.
	projectimage.MimeTypeValidator = projectimageDescMimeType.Validators[0].(func(string) error)
	// projectimageDescIsPrimary is the schema descriptor for is_primary field.
	projectimageDescIsPrimary := projectimageFields[11].Descriptor()
	// projectimage.DefaultIsPrimary holds the default value on creation for the is_primary field.
	projectimage.DefaultIsPrimary = projectimageDescIsPrimary.Default.(bool)
	// projectimageDescIsPublic is the schema descriptor for is_public field.
	projectimageDescIsPublic := projectimageFields[12].Descriptor()
	// projectimage.DefaultIsPublic holds the default value on creation for the is_public field.
	projectimage.DefaultIsPublic = projectimageDescIsPublic.Default.(bool)
	// projectimageDescSortOrder is the schema descriptor for sort_order field.
	projectimageDescSortOrder := projectimageFields[13].Descriptor()
	// projectimage.DefaultSortOrder holds the default value on creation for the sort_order field.
	projectimage.DefaultSortOrder = projectimageDescSortOrder.Default.(int)
	// projectimageDescCreatedAt is the schema descriptor for created_at field.
	projectimageDescCreatedAt := projectimageFields[14].Descriptor()
	// projectimage.DefaultCreatedAt holds the default value on creation for the created_at field.
	projectimage.DefaultCreatedAt = projectimageDescCreatedAt.Default.(func() time.Time)
	// projectimageDescUpdatedAt is the schema descriptor for updated_at field.
	projectimageDescUpdatedAt := projectimageFields[15].Descriptor()
	// projectimage.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	projectimage.DefaultUpdatedAt = projectimageDescUpdatedAt.Default.(func() time.Time)
	// projectimage.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	projectimage.UpdateDefaultUpdatedAt = projectimageDescUpdatedAt.UpdateDefault.(func() time.Time)
	// projectimageDescID is the schema descriptor for id field.
	projectimageDescID := projectimageFields[0].Descriptor()
	// projectimage.DefaultID holds the default value on creation for the id field.
	projectimage.DefaultID = projectimageDescID.Default.(func() uuid.UUID)
	projecttechnologyFields := schema.ProjectTechnology{}.Fields()
	_ = projecttechnologyFields
	// projecttechnologyDescTechnologyName is the schema descriptor for technology_name field.
	projecttechnologyDescTechnologyName := projecttechnologyFields[1].Descriptor()
	// projecttechnology.TechnologyNameValidator is a validator for the "technology_name" field. It is called by the builders before save.
	projecttechnology.TechnologyNameValidator = projecttechnologyDescTechnologyName.Validators[0].(func(string) error)
	// projecttechnologyDescCategory is the schema descriptor for category field.
	projecttechnologyDescCategory := projecttechnologyFields[2].Descriptor()
	// projecttechnology.CategoryValidator is a validator for the "category" field. It is called by the builders before save.
	projecttechnology.CategoryValidator = projecttechnologyDescCategory.Validators[0].(func(string) error)
	// projecttechnologyDescVersion is the schema descriptor for version field.
	projecttechnologyDescVersion := projecttechnologyFields[3].Descriptor()
	// projecttechnology.VersionValidator is a validator for the "version" field. It is called by the builders before save.
	projecttechnology.VersionValidator = projecttechnologyDescVersion.Validators[0].(func(string) error)
	// projecttechnologyDescProficiencyLevel is the schema descriptor for proficiency_level field.
	projecttechnologyDescProficiencyLevel := projecttechnologyFields[4].Descriptor()
	// projecttechnology.ProficiencyLevelValidator is a validator for the "proficiency_level" field. It is called by the builders before save.
	projecttechnology.ProficiencyLevelValidator = projecttechnologyDescProficiencyLevel.Validators[0].(func(string) error)
	// projecttechnologyDescIconURL is the schema descriptor for icon_url field.
	projecttechnologyDescIconURL := projecttechnologyFields[6].Descriptor()
	// projecttechnology.IconURLValidator is a validator for the "icon_url" field. It is called by the builders before save.
	projecttechnology.IconURLValidator = projecttechnologyDescIconURL.Validators[0].(func(string) error)
	// projecttechnologyDescDocumentationURL is the schema descriptor for documentation_url field.
	projecttechnologyDescDocumentationURL := projecttechnologyFields[7].Descriptor()
	// projecttechnology.DocumentationURLValidator is a validator for the "documentation_url" field. It is called by the builders before save.
	projecttechnology.DocumentationURLValidator = projecttechnologyDescDocumentationURL.Validators[0].(func(string) error)
	// projecttechnologyDescSortOrder is the schema descriptor for sort_order field.
	projecttechnologyDescSortOrder := projecttechnologyFields[8].Descriptor()
	// projecttechnology.DefaultSortOrder holds the default value on creation for the sort_order field.
	projecttechnology.DefaultSortOrder = projecttechnologyDescSortOrder.Default.(int)
	// projecttechnologyDescCreatedAt is the schema descriptor for created_at field.
	projecttechnologyDescCreatedAt := projecttechnologyFields[9].Descriptor()
	// projecttechnology.DefaultCreatedAt holds the default value on creation for the created_at field.
	projecttechnology.DefaultCreatedAt = projecttechnologyDescCreatedAt.Default.(func() time.Time)
	// projecttechnologyDescUpdatedAt is the schema descriptor for updated_at field.
	projecttechnologyDescUpdatedAt := projecttechnologyFields[10].Descriptor()
	// projecttechnology.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	projecttechnology.DefaultUpdatedAt = projecttechnologyDescUpdatedAt.Default.(func() time.Time)
	// projecttechnology.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	projecttechnology.UpdateDefaultUpdatedAt = projecttechnologyDescUpdatedAt.UpdateDefault.(func() time.Time)
	// projecttechnologyDescID is the schema descriptor for id field.
	projecttechnologyDescID := projecttechnologyFields[0].Descriptor()
	// projecttechnology.DefaultID holds the default value on creation for the id field.
	projecttechnology.DefaultID = projecttechnologyDescID.Default.(func() uuid.UUID)
	publicationFields := schema.Publication{}.Fields()
	_ = publicationFields
	// publicationDescTitle is the schema descriptor for title field.
	publicationDescTitle := publicationFields[1].Descriptor()
	// publication.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	publication.TitleValidator = publicationDescTitle.Validators[0].(func(string) error)
	// publicationDescPublicationType is the schema descriptor for publication_type field.
	publicationDescPublicationType := publicationFields[2].Descriptor()
	// publication.PublicationTypeValidator is a validator for the "publication_type" field. It is called by the builders before save.
	publication.PublicationTypeValidator = publicationDescPublicationType.Validators[0].(func(string) error)
	// publicationDescJournalName is the schema descriptor for journal_name field.
	publicationDescJournalName := publicationFields[3].Descriptor()
	// publication.JournalNameValidator is a validator for the "journal_name" field. It is called by the builders before save.
	publication.JournalNameValidator = publicationDescJournalName.Validators[0].(func(string) error)
	// publicationDescConferenceName is the schema descriptor for conference_name field.
	publicationDescConferenceName := publicationFields[4].Descriptor()
	// publication.ConferenceNameValidator is a validator for the "conference_name" field. It is called by the builders before save.
	publication.ConferenceNameValidator = publicationDescConferenceName.Validators[0].(func(string) error)
	// publicationDescVolume is the schema descriptor for volume field.
	publicationDescVolume := publicationFields[5].Descriptor()
	// publication.VolumeValidator is a validator for the "volume" field. It is called by the builders before save.
	publication.VolumeValidator = publicationDescVolume.Validators[0].(func(string) error)
	// publicationDescIssue is the schema descriptor for issue field.
	publicationDescIssue := publicationFields[6].Descriptor()
	// publication.IssueValidator is a validator for the "issue" field. It is called by the builders before save.
	publication.IssueValidator = publicationDescIssue.Validators[0].(func(string) error)
	// publicationDescPages is the schema descriptor for pages field.
	publicationDescPages := publicationFields[7].Descriptor()
	// publication.PagesValidator is a validator for the "pages" field. It is called by the builders before save.
	publication.PagesValidator = publicationDescPages.Validators[0].(func(string) error)
	// publicationDescDoi is the schema descriptor for doi field.
	publicationDescDoi := publicationFields[9].Descriptor()
	// publication.DoiValidator is a validator for the "doi" field. It is called by the builders before save.
	publication.DoiValidator = publicationDescDoi.Validators[0].(func(string) error)
	// publicationDescIsbn is the schema descriptor for isbn field.
	publicationDescIsbn := publicationFields[10].Descriptor()
	// publication.IsbnValidator is a validator for the "isbn" field. It is called by the builders before save.
	publication.IsbnValidator = publicationDescIsbn.Validators[0].(func(string) error)
	// publicationDescURL is the schema descriptor for url field.
	publicationDescURL := publicationFields[11].Descriptor()
	// publication.URLValidator is a validator for the "url" field. It is called by the builders before save.
	publication.URLValidator = publicationDescURL.Validators[0].(func(string) error)
	// publicationDescPdfURL is the schema descriptor for pdf_url field.
	publicationDescPdfURL := publicationFields[12].Descriptor()
	// publication.PdfURLValidator is a validator for the "pdf_url" field. It is called by the builders before save.
	publication.PdfURLValidator = publicationDescPdfURL.Validators[0].(func(string) error)
	// publicationDescCitationCount is the schema descriptor for citation_count field.
	publicationDescCitationCount := publicationFields[13].Descriptor()
	// publication.DefaultCitationCount holds the default value on creation for the citation_count field.
	publication.DefaultCitationCount = publicationDescCitationCount.Default.(int)
	// publicationDescIsPeerReviewed is the schema descriptor for is_peer_reviewed field.
	publicationDescIsPeerReviewed := publicationFields[14].Descriptor()
	// publication.DefaultIsPeerReviewed holds the default value on creation for the is_peer_reviewed field.
	publication.DefaultIsPeerReviewed = publicationDescIsPeerReviewed.Default.(bool)
	// publicationDescSortOrder is the schema descriptor for sort_order field.
	publicationDescSortOrder := publicationFields[15].Descriptor()
	// publication.DefaultSortOrder holds the default value on creation for the sort_order field.
	publication.DefaultSortOrder = publicationDescSortOrder.Default.(int)
	// publicationDescCreatedAt is the schema descriptor for created_at field.
	publicationDescCreatedAt := publicationFields[16].Descriptor()
	// publication.DefaultCreatedAt holds the default value on creation for the created_at field.
	publication.DefaultCreatedAt = publicationDescCreatedAt.Default.(func() time.Time)
	// publicationDescUpdatedAt is the schema descriptor for updated_at field.
	publicationDescUpdatedAt := publicationFields[17].Descriptor()
	// publication.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	publication.DefaultUpdatedAt = publicationDescUpdatedAt.Default.(func() time.Time)
	// publication.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	publication.UpdateDefaultUpdatedAt = publicationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// publicationDescID is the schema descriptor for id field.
	publicationDescID := publicationFields[0].Descriptor()
	// publication.DefaultID holds the default value on creation for the id field.
	publication.DefaultID = publicationDescID.Default.(func() uuid.UUID)
	researchprojectFields := schema.ResearchProject{}.Fields()
	_ = researchprojectFields
	// researchprojectDescTitle is the schema descriptor for title field.
	researchprojectDescTitle := researchprojectFields[1].Descriptor()
	// researchproject.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	researchproject.TitleValidator = researchprojectDescTitle.Validators[0].(func(string) error)
	// researchprojectDescIsOngoing is the schema descriptor for is_ongoing field.
	researchprojectDescIsOngoing := researchprojectFields[4].Descriptor()
	// researchproject.DefaultIsOngoing holds the default value on creation for the is_ongoing field.
	researchproject.DefaultIsOngoing = researchprojectDescIsOngoing.Default.(bool)
	// researchprojectDescLocation is the schema descriptor for location field.
	researchprojectDescLocation := researchprojectFields[5].Descriptor()
	// researchproject.LocationValidator is a validator for the "location" field. It is called by the builders before save.
	researchproject.LocationValidator = researchprojectDescLocation.Validators[0].(func(string) error)
	// researchprojectDescResearchType is the schema descriptor for research_type field.
	researchprojectDescResearchType := researchprojectFields[6].Descriptor()
	// researchproject.ResearchTypeValidator is a validator for the "research_type" field. It is called by the builders before save.
	researchproject.ResearchTypeValidator = researchprojectDescResearchType.Validators[0].(func(string) error)
	// researchprojectDescFundingSource is the schema descriptor for funding_source field.
	researchprojectDescFundingSource := researchprojectFields[7].Descriptor()
	// researchproject.FundingSourceValidator is a validator for the "funding_source" field. It is called by the builders before save.
	researchproject.FundingSourceValidator = researchprojectDescFundingSource.Validators[0].(func(string) error)
	// researchprojectDescSortOrder is the schema descriptor for sort_order field.
	researchprojectDescSortOrder := researchprojectFields[9].Descriptor()
	// researchproject.DefaultSortOrder holds the default value on creation for the sort_order field.
	researchproject.DefaultSortOrder = researchprojectDescSortOrder.Default.(int)
	// researchprojectDescCreatedAt is the schema descriptor for created_at field.
	researchprojectDescCreatedAt := researchprojectFields[10].Descriptor()
	// researchproject.DefaultCreatedAt holds the default value on creation for the created_at field.
	researchproject.DefaultCreatedAt = researchprojectDescCreatedAt.Default.(func() time.Time)
	// researchprojectDescUpdatedAt is the schema descriptor for updated_at field.
	researchprojectDescUpdatedAt := researchprojectFields[11].Descriptor()
	// researchproject.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	researchproject.DefaultUpdatedAt = researchprojectDescUpdatedAt.Default.(func() time.Time)
	// researchproject.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	researchproject.UpdateDefaultUpdatedAt = researchprojectDescUpdatedAt.UpdateDefault.(func() time.Time)
	// researchprojectDescID is the schema descriptor for id field.
	researchprojectDescID := researchprojectFields[0].Descriptor()
	// researchproject.DefaultID holds the default value on creation for the id field.
	researchproject.DefaultID = researchprojectDescID.Default.(func() uuid.UUID)
	sociallinkFields := schema.SocialLink{}.Fields()
	_ = sociallinkFields
	// sociallinkDescPlatform is the schema descriptor for platform field.
	sociallinkDescPlatform := sociallinkFields[1].Descriptor()
	// sociallink.PlatformValidator is a validator for the "platform" field. It is called by the builders before save.
	sociallink.PlatformValidator = sociallinkDescPlatform.Validators[0].(func(string) error)
	// sociallinkDescURL is the schema descriptor for url field.
	sociallinkDescURL := sociallinkFields[2].Descriptor()
	// sociallink.URLValidator is a validator for the "url" field. It is called by the builders before save.
	sociallink.URLValidator = sociallinkDescURL.Validators[0].(func(string) error)
	// sociallinkDescUsername is the schema descriptor for username field.
	sociallinkDescUsername := sociallinkFields[3].Descriptor()
	// sociallink.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	sociallink.UsernameValidator = sociallinkDescUsername.Validators[0].(func(string) error)
	// sociallinkDescDisplayName is the schema descriptor for display_name field.
	sociallinkDescDisplayName := sociallinkFields[4].Descriptor()
	// sociallink.DisplayNameValidator is a validator for the "display_name" field. It is called by the builders before save.
	sociallink.DisplayNameValidator = sociallinkDescDisplayName.Validators[0].(func(string) error)
	// sociallinkDescIsPublic is the schema descriptor for is_public field.
	sociallinkDescIsPublic := sociallinkFields[5].Descriptor()
	// sociallink.DefaultIsPublic holds the default value on creation for the is_public field.
	sociallink.DefaultIsPublic = sociallinkDescIsPublic.Default.(bool)
	// sociallinkDescOrder is the schema descriptor for order field.
	sociallinkDescOrder := sociallinkFields[6].Descriptor()
	// sociallink.DefaultOrder holds the default value on creation for the order field.
	sociallink.DefaultOrder = sociallinkDescOrder.Default.(int)
	// sociallinkDescCreatedAt is the schema descriptor for created_at field.
	sociallinkDescCreatedAt := sociallinkFields[7].Descriptor()
	// sociallink.DefaultCreatedAt holds the default value on creation for the created_at field.
	sociallink.DefaultCreatedAt = sociallinkDescCreatedAt.Default.(func() time.Time)
	// sociallinkDescUpdatedAt is the schema descriptor for updated_at field.
	sociallinkDescUpdatedAt := sociallinkFields[8].Descriptor()
	// sociallink.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	sociallink.DefaultUpdatedAt = sociallinkDescUpdatedAt.Default.(func() time.Time)
	// sociallink.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	sociallink.UpdateDefaultUpdatedAt = sociallinkDescUpdatedAt.UpdateDefault.(func() time.Time)
	// sociallinkDescID is the schema descriptor for id field.
	sociallinkDescID := sociallinkFields[0].Descriptor()
	// sociallink.DefaultID holds the default value on creation for the id field.
	sociallink.DefaultID = sociallinkDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[1].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[2].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPasswordHash is the schema descriptor for password_hash field.
	userDescPasswordHash := userFields[3].Descriptor()
	// user.PasswordHashValidator is a validator for the "password_hash" field. It is called by the builders before save.
	user.PasswordHashValidator = userDescPasswordHash.Validators[0].(func(string) error)
	// userDescFirstName is the schema descriptor for first_name field.
	userDescFirstName := userFields[4].Descriptor()
	// user.FirstNameValidator is a validator for the "first_name" field. It is called by the builders before save.
	user.FirstNameValidator = userDescFirstName.Validators[0].(func(string) error)
	// userDescLastName is the schema descriptor for last_name field.
	userDescLastName := userFields[5].Descriptor()
	// user.LastNameValidator is a validator for the "last_name" field. It is called by the builders before save.
	user.LastNameValidator = userDescLastName.Validators[0].(func(string) error)
	// userDescAvatarURL is the schema descriptor for avatar_url field.
	userDescAvatarURL := userFields[6].Descriptor()
	// user.AvatarURLValidator is a validator for the "avatar_url" field. It is called by the builders before save.
	user.AvatarURLValidator = userDescAvatarURL.Validators[0].(func(string) error)
	// userDescIsActive is the schema descriptor for is_active field.
	userDescIsActive := userFields[8].Descriptor()
	// user.DefaultIsActive holds the default value on creation for the is_active field.
	user.DefaultIsActive = userDescIsActive.Default.(bool)
	// userDescIsAdmin is the schema descriptor for is_admin field.
	userDescIsAdmin := userFields[9].Descriptor()
	// user.DefaultIsAdmin holds the default value on creation for the is_admin field.
	user.DefaultIsAdmin = userDescIsAdmin.Default.(bool)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[11].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[12].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
	workexperienceFields := schema.WorkExperience{}.Fields()
	_ = workexperienceFields
	// workexperienceDescCompany is the schema descriptor for company field.
	workexperienceDescCompany := workexperienceFields[1].Descriptor()
	// workexperience.CompanyValidator is a validator for the "company" field. It is called by the builders before save.
	workexperience.CompanyValidator = workexperienceDescCompany.Validators[0].(func(string) error)
	// workexperienceDescPosition is the schema descriptor for position field.
	workexperienceDescPosition := workexperienceFields[2].Descriptor()
	// workexperience.PositionValidator is a validator for the "position" field. It is called by the builders before save.
	workexperience.PositionValidator = workexperienceDescPosition.Validators[0].(func(string) error)
	// workexperienceDescIsCurrent is the schema descriptor for is_current field.
	workexperienceDescIsCurrent := workexperienceFields[5].Descriptor()
	// workexperience.DefaultIsCurrent holds the default value on creation for the is_current field.
	workexperience.DefaultIsCurrent = workexperienceDescIsCurrent.Default.(bool)
	// workexperienceDescLocation is the schema descriptor for location field.
	workexperienceDescLocation := workexperienceFields[6].Descriptor()
	// workexperience.LocationValidator is a validator for the "location" field. It is called by the builders before save.
	workexperience.LocationValidator = workexperienceDescLocation.Validators[0].(func(string) error)
	// workexperienceDescCompanyWebsite is the schema descriptor for company_website field.
	workexperienceDescCompanyWebsite := workexperienceFields[7].Descriptor()
	// workexperience.CompanyWebsiteValidator is a validator for the "company_website" field. It is called by the builders before save.
	workexperience.CompanyWebsiteValidator = workexperienceDescCompanyWebsite.Validators[0].(func(string) error)
	// workexperienceDescCompanyLogoURL is the schema descriptor for company_logo_url field.
	workexperienceDescCompanyLogoURL := workexperienceFields[8].Descriptor()
	// workexperience.CompanyLogoURLValidator is a validator for the "company_logo_url" field. It is called by the builders before save.
	workexperience.CompanyLogoURLValidator = workexperienceDescCompanyLogoURL.Validators[0].(func(string) error)
	// workexperienceDescSortOrder is the schema descriptor for sort_order field.
	workexperienceDescSortOrder := workexperienceFields[9].Descriptor()
	// workexperience.DefaultSortOrder holds the default value on creation for the sort_order field.
	workexperience.DefaultSortOrder = workexperienceDescSortOrder.Default.(int)
	// workexperienceDescCreatedAt is the schema descriptor for created_at field.
	workexperienceDescCreatedAt := workexperienceFields[10].Descriptor()
	// workexperience.DefaultCreatedAt holds the default value on creation for the created_at field.
	workexperience.DefaultCreatedAt = workexperienceDescCreatedAt.Default.(func() time.Time)
	// workexperienceDescUpdatedAt is the schema descriptor for updated_at field.
	workexperienceDescUpdatedAt := workexperienceFields[11].Descriptor()
	// workexperience.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	workexperience.DefaultUpdatedAt = workexperienceDescUpdatedAt.Default.(func() time.Time)
	// workexperience.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	workexperience.UpdateDefaultUpdatedAt = workexperienceDescUpdatedAt.UpdateDefault.(func() time.Time)
	// workexperienceDescID is the schema descriptor for id field.
	workexperienceDescID := workexperienceFields[0].Descriptor()
	// workexperience.DefaultID holds the default value on creation for the id field.
	workexperience.DefaultID = workexperienceDescID.Default.(func() uuid.UUID)
}
