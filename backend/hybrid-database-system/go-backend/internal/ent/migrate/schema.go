// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AwardsColumns holds the columns for the "awards" table.
	AwardsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString, Size: 300},
		{Name: "awarding_organization", Type: field.TypeString, Size: 200},
		{Name: "award_date", Type: field.TypeTime, Nullable: true},
		{Name: "award_type", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "certificate_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_awards", Type: field.TypeUUID, Nullable: true},
	}
	// AwardsTable holds the schema information for the "awards" table.
	AwardsTable = &schema.Table{
		Name:       "awards",
		Columns:    AwardsColumns,
		PrimaryKey: []*schema.Column{AwardsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "awards_users_awards",
				Columns:    []*schema.Column{AwardsColumns[12]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// BlogCategoriesColumns holds the columns for the "blog_categories" table.
	BlogCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 100},
		{Name: "slug", Type: field.TypeString, Unique: true, Size: 100},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "color", Type: field.TypeString, Nullable: true, Size: 7},
		{Name: "icon", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "post_count", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// BlogCategoriesTable holds the schema information for the "blog_categories" table.
	BlogCategoriesTable = &schema.Table{
		Name:       "blog_categories",
		Columns:    BlogCategoriesColumns,
		PrimaryKey: []*schema.Column{BlogCategoriesColumns[0]},
	}
	// BlogCommentsColumns holds the columns for the "blog_comments" table.
	BlogCommentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "blog_post_id", Type: field.TypeUUID},
		{Name: "author_name", Type: field.TypeString, Size: 100},
		{Name: "author_email", Type: field.TypeString, Size: 255},
		{Name: "author_website", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "is_approved", Type: field.TypeBool, Default: false},
		{Name: "is_spam", Type: field.TypeBool, Default: false},
		{Name: "ip_address", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "user_agent", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "like_count", Type: field.TypeInt, Default: 0},
		{Name: "dislike_count", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "parent_id", Type: field.TypeUUID, Nullable: true},
		{Name: "blog_post_comments", Type: field.TypeUUID, Nullable: true},
	}
	// BlogCommentsTable holds the schema information for the "blog_comments" table.
	BlogCommentsTable = &schema.Table{
		Name:       "blog_comments",
		Columns:    BlogCommentsColumns,
		PrimaryKey: []*schema.Column{BlogCommentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "blog_comments_blog_comments_replies",
				Columns:    []*schema.Column{BlogCommentsColumns[14]},
				RefColumns: []*schema.Column{BlogCommentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "blog_comments_blog_posts_comments",
				Columns:    []*schema.Column{BlogCommentsColumns[15]},
				RefColumns: []*schema.Column{BlogPostsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// BlogPostsColumns holds the columns for the "blog_posts" table.
	BlogPostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "category_id", Type: field.TypeUUID, Nullable: true},
		{Name: "series_id", Type: field.TypeUUID, Nullable: true},
		{Name: "title", Type: field.TypeString, Size: 500},
		{Name: "slug", Type: field.TypeString, Unique: true, Size: 300},
		{Name: "excerpt", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "content_type", Type: field.TypeEnum, Enums: []string{"article", "vlog", "podcast", "tutorial"}, Default: "article"},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"draft", "published", "archived"}, Default: "draft"},
		{Name: "is_featured", Type: field.TypeBool, Default: false},
		{Name: "featured_image_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "reading_time_minutes", Type: field.TypeInt, Nullable: true},
		{Name: "view_count", Type: field.TypeInt, Default: 0},
		{Name: "like_count", Type: field.TypeInt, Default: 0},
		{Name: "comment_count", Type: field.TypeInt, Default: 0},
		{Name: "published_at", Type: field.TypeTime, Nullable: true},
		{Name: "series_order", Type: field.TypeInt, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "blog_category_blog_posts", Type: field.TypeUUID, Nullable: true},
		{Name: "blog_series_blog_posts", Type: field.TypeUUID, Nullable: true},
		{Name: "user_blog_posts", Type: field.TypeUUID, Nullable: true},
	}
	// BlogPostsTable holds the schema information for the "blog_posts" table.
	BlogPostsTable = &schema.Table{
		Name:       "blog_posts",
		Columns:    BlogPostsColumns,
		PrimaryKey: []*schema.Column{BlogPostsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "blog_posts_blog_categories_blog_posts",
				Columns:    []*schema.Column{BlogPostsColumns[20]},
				RefColumns: []*schema.Column{BlogCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "blog_posts_blog_series_blog_posts",
				Columns:    []*schema.Column{BlogPostsColumns[21]},
				RefColumns: []*schema.Column{BlogSeriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "blog_posts_users_blog_posts",
				Columns:    []*schema.Column{BlogPostsColumns[22]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// BlogSeriesColumns holds the columns for the "blog_series" table.
	BlogSeriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString, Size: 200},
		{Name: "slug", Type: field.TypeString, Unique: true, Size: 200},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "featured_image_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "post_count", Type: field.TypeInt, Default: 0},
		{Name: "is_completed", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_blog_series", Type: field.TypeUUID, Nullable: true},
	}
	// BlogSeriesTable holds the schema information for the "blog_series" table.
	BlogSeriesTable = &schema.Table{
		Name:       "blog_series",
		Columns:    BlogSeriesColumns,
		PrimaryKey: []*schema.Column{BlogSeriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "blog_series_users_blog_series",
				Columns:    []*schema.Column{BlogSeriesColumns[10]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// BlogTagsColumns holds the columns for the "blog_tags" table.
	BlogTagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 50},
		{Name: "slug", Type: field.TypeString, Unique: true, Size: 50},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "color", Type: field.TypeString, Nullable: true, Size: 7},
		{Name: "post_count", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// BlogTagsTable holds the schema information for the "blog_tags" table.
	BlogTagsTable = &schema.Table{
		Name:       "blog_tags",
		Columns:    BlogTagsColumns,
		PrimaryKey: []*schema.Column{BlogTagsColumns[0]},
	}
	// EducationsColumns holds the columns for the "educations" table.
	EducationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "institution", Type: field.TypeString, Size: 200},
		{Name: "degree", Type: field.TypeString, Size: 200},
		{Name: "field_of_study", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "start_date", Type: field.TypeTime, Nullable: true},
		{Name: "end_date", Type: field.TypeTime, Nullable: true},
		{Name: "is_current", Type: field.TypeBool, Default: false},
		{Name: "gpa", Type: field.TypeString, Nullable: true, Size: 10},
		{Name: "location", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "institution_website", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "institution_logo_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_education", Type: field.TypeUUID, Nullable: true},
	}
	// EducationsTable holds the schema information for the "educations" table.
	EducationsTable = &schema.Table{
		Name:       "educations",
		Columns:    EducationsColumns,
		PrimaryKey: []*schema.Column{EducationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "educations_users_education",
				Columns:    []*schema.Column{EducationsColumns[15]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// IdeasColumns holds the columns for the "ideas" table.
	IdeasColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString, Size: 300},
		{Name: "slug", Type: field.TypeString, Unique: true, Size: 200},
		{Name: "abstract", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "motivation", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "methodology", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "expected_outcome", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"draft", "hypothesis", "experimenting", "validating", "published", "concluded"}, Default: "draft"},
		{Name: "priority", Type: field.TypeEnum, Enums: []string{"low", "medium", "high", "urgent"}, Default: "medium"},
		{Name: "estimated_duration_months", Type: field.TypeInt, Nullable: true},
		{Name: "required_resources", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "collaboration_needed", Type: field.TypeBool, Default: false},
		{Name: "funding_required", Type: field.TypeBool, Default: false},
		{Name: "estimated_budget", Type: field.TypeFloat64, Nullable: true},
		{Name: "is_public", Type: field.TypeBool, Default: false},
		{Name: "view_count", Type: field.TypeInt, Default: 0},
		{Name: "like_count", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_ideas", Type: field.TypeUUID, Nullable: true},
	}
	// IdeasTable holds the schema information for the "ideas" table.
	IdeasTable = &schema.Table{
		Name:       "ideas",
		Columns:    IdeasColumns,
		PrimaryKey: []*schema.Column{IdeasColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ideas_users_ideas",
				Columns:    []*schema.Column{IdeasColumns[20]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// LanguagesColumns holds the columns for the "languages" table.
	LanguagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "code", Type: field.TypeString, Unique: true, Size: 5},
		{Name: "name", Type: field.TypeString, Size: 50},
		{Name: "native_name", Type: field.TypeString, Size: 50},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// LanguagesTable holds the schema information for the "languages" table.
	LanguagesTable = &schema.Table{
		Name:       "languages",
		Columns:    LanguagesColumns,
		PrimaryKey: []*schema.Column{LanguagesColumns[0]},
	}
	// PersonalInfosColumns holds the columns for the "personal_infos" table.
	PersonalInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "phone", Type: field.TypeString, Nullable: true, Size: 20},
		{Name: "website", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "location", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "address", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "linkedin", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "github", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "twitter", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "personal_email", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "summary", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_personal_info", Type: field.TypeUUID},
	}
	// PersonalInfosTable holds the schema information for the "personal_infos" table.
	PersonalInfosTable = &schema.Table{
		Name:       "personal_infos",
		Columns:    PersonalInfosColumns,
		PrimaryKey: []*schema.Column{PersonalInfosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "personal_infos_users_personal_info",
				Columns:    []*schema.Column{PersonalInfosColumns[13]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ProjectsColumns holds the columns for the "projects" table.
	ProjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString, Size: 300},
		{Name: "slug", Type: field.TypeString, Unique: true, Size: 200},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "project_type", Type: field.TypeString, Size: 50, Default: "Web Application"},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"active", "completed", "paused", "cancelled"}, Default: "active"},
		{Name: "start_date", Type: field.TypeTime, Nullable: true},
		{Name: "end_date", Type: field.TypeTime, Nullable: true},
		{Name: "github_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "demo_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "documentation_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "thumbnail_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "is_featured", Type: field.TypeBool, Default: false},
		{Name: "is_public", Type: field.TypeBool, Default: true},
		{Name: "view_count", Type: field.TypeInt, Default: 0},
		{Name: "star_count", Type: field.TypeInt, Default: 0},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_projects", Type: field.TypeUUID, Nullable: true},
	}
	// ProjectsTable holds the schema information for the "projects" table.
	ProjectsTable = &schema.Table{
		Name:       "projects",
		Columns:    ProjectsColumns,
		PrimaryKey: []*schema.Column{ProjectsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "projects_users_projects",
				Columns:    []*schema.Column{ProjectsColumns[20]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProjectDetailsColumns holds the columns for the "project_details" table.
	ProjectDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "project_id", Type: field.TypeUUID},
		{Name: "full_description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "features", Type: field.TypeJSON, Nullable: true},
		{Name: "key_achievements", Type: field.TypeJSON, Nullable: true},
		{Name: "challenges_faced", Type: field.TypeJSON, Nullable: true},
		{Name: "lessons_learned", Type: field.TypeJSON, Nullable: true},
		{Name: "technical_overview", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "installation_instructions", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "usage_instructions", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "api_documentation", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "deployment_notes", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "future_enhancements", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "team_members", Type: field.TypeJSON, Nullable: true},
		{Name: "project_duration", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "target_audience", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "performance_metrics", Type: field.TypeJSON, Nullable: true},
		{Name: "testing_approach", Type: field.TypeJSON, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "project_detail", Type: field.TypeUUID, Unique: true, Nullable: true},
	}
	// ProjectDetailsTable holds the schema information for the "project_details" table.
	ProjectDetailsTable = &schema.Table{
		Name:       "project_details",
		Columns:    ProjectDetailsColumns,
		PrimaryKey: []*schema.Column{ProjectDetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "project_details_projects_detail",
				Columns:    []*schema.Column{ProjectDetailsColumns[20]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProjectImagesColumns holds the columns for the "project_images" table.
	ProjectImagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "project_id", Type: field.TypeUUID},
		{Name: "image_url", Type: field.TypeString, Size: 500},
		{Name: "title", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "alt_text", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "image_type", Type: field.TypeEnum, Enums: []string{"screenshot", "diagram", "logo", "thumbnail", "demo", "other"}, Default: "screenshot"},
		{Name: "file_name", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "file_size", Type: field.TypeInt, Nullable: true},
		{Name: "mime_type", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "width", Type: field.TypeInt, Nullable: true},
		{Name: "height", Type: field.TypeInt, Nullable: true},
		{Name: "is_primary", Type: field.TypeBool, Default: false},
		{Name: "is_public", Type: field.TypeBool, Default: true},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "project_images", Type: field.TypeUUID, Nullable: true},
	}
	// ProjectImagesTable holds the schema information for the "project_images" table.
	ProjectImagesTable = &schema.Table{
		Name:       "project_images",
		Columns:    ProjectImagesColumns,
		PrimaryKey: []*schema.Column{ProjectImagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "project_images_projects_images",
				Columns:    []*schema.Column{ProjectImagesColumns[17]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProjectTechnologiesColumns holds the columns for the "project_technologies" table.
	ProjectTechnologiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "project_id", Type: field.TypeUUID},
		{Name: "technology_name", Type: field.TypeString, Size: 100},
		{Name: "category", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "version", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "proficiency_level", Type: field.TypeString, Nullable: true, Size: 20},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "icon_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "documentation_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "project_technologies", Type: field.TypeUUID, Nullable: true},
	}
	// ProjectTechnologiesTable holds the schema information for the "project_technologies" table.
	ProjectTechnologiesTable = &schema.Table{
		Name:       "project_technologies",
		Columns:    ProjectTechnologiesColumns,
		PrimaryKey: []*schema.Column{ProjectTechnologiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "project_technologies_projects_technologies",
				Columns:    []*schema.Column{ProjectTechnologiesColumns[12]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PublicationsColumns holds the columns for the "publications" table.
	PublicationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString, Size: 500},
		{Name: "publication_type", Type: field.TypeString, Size: 50},
		{Name: "journal_name", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "conference_name", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "volume", Type: field.TypeString, Nullable: true, Size: 20},
		{Name: "issue", Type: field.TypeString, Nullable: true, Size: 20},
		{Name: "pages", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "publication_date", Type: field.TypeTime, Nullable: true},
		{Name: "doi", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "isbn", Type: field.TypeString, Nullable: true, Size: 20},
		{Name: "url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "pdf_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "citation_count", Type: field.TypeInt, Default: 0},
		{Name: "is_peer_reviewed", Type: field.TypeBool, Default: false},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_publications", Type: field.TypeUUID, Nullable: true},
	}
	// PublicationsTable holds the schema information for the "publications" table.
	PublicationsTable = &schema.Table{
		Name:       "publications",
		Columns:    PublicationsColumns,
		PrimaryKey: []*schema.Column{PublicationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "publications_users_publications",
				Columns:    []*schema.Column{PublicationsColumns[19]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ResearchProjectsColumns holds the columns for the "research_projects" table.
	ResearchProjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString, Size: 300},
		{Name: "start_date", Type: field.TypeTime, Nullable: true},
		{Name: "end_date", Type: field.TypeTime, Nullable: true},
		{Name: "is_ongoing", Type: field.TypeBool, Default: false},
		{Name: "location", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "research_type", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "funding_source", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "funding_amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_research_projects", Type: field.TypeUUID, Nullable: true},
	}
	// ResearchProjectsTable holds the schema information for the "research_projects" table.
	ResearchProjectsTable = &schema.Table{
		Name:       "research_projects",
		Columns:    ResearchProjectsColumns,
		PrimaryKey: []*schema.Column{ResearchProjectsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "research_projects_users_research_projects",
				Columns:    []*schema.Column{ResearchProjectsColumns[13]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SocialLinksColumns holds the columns for the "social_links" table.
	SocialLinksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "platform", Type: field.TypeString, Size: 50},
		{Name: "url", Type: field.TypeString, Size: 500},
		{Name: "username", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "display_name", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "is_public", Type: field.TypeBool, Default: true},
		{Name: "order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_social_links", Type: field.TypeUUID},
	}
	// SocialLinksTable holds the schema information for the "social_links" table.
	SocialLinksTable = &schema.Table{
		Name:       "social_links",
		Columns:    SocialLinksColumns,
		PrimaryKey: []*schema.Column{SocialLinksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "social_links_users_social_links",
				Columns:    []*schema.Column{SocialLinksColumns[10]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "username", Type: field.TypeString, Unique: true, Size: 50},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "password_hash", Type: field.TypeString, Size: 255},
		{Name: "first_name", Type: field.TypeString, Size: 100},
		{Name: "last_name", Type: field.TypeString, Size: 100},
		{Name: "avatar_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "bio", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "is_admin", Type: field.TypeBool, Default: false},
		{Name: "last_login_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// WorkExperiencesColumns holds the columns for the "work_experiences" table.
	WorkExperiencesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "company", Type: field.TypeString, Size: 200},
		{Name: "position", Type: field.TypeString, Size: 200},
		{Name: "start_date", Type: field.TypeTime, Nullable: true},
		{Name: "end_date", Type: field.TypeTime, Nullable: true},
		{Name: "is_current", Type: field.TypeBool, Default: false},
		{Name: "location", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "company_website", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "company_logo_url", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_work_experience", Type: field.TypeUUID, Nullable: true},
	}
	// WorkExperiencesTable holds the schema information for the "work_experiences" table.
	WorkExperiencesTable = &schema.Table{
		Name:       "work_experiences",
		Columns:    WorkExperiencesColumns,
		PrimaryKey: []*schema.Column{WorkExperiencesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "work_experiences_users_work_experience",
				Columns:    []*schema.Column{WorkExperiencesColumns[13]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// BlogPostTagsColumns holds the columns for the "blog_post_tags" table.
	BlogPostTagsColumns = []*schema.Column{
		{Name: "blog_post_id", Type: field.TypeUUID},
		{Name: "blog_tag_id", Type: field.TypeUUID},
	}
	// BlogPostTagsTable holds the schema information for the "blog_post_tags" table.
	BlogPostTagsTable = &schema.Table{
		Name:       "blog_post_tags",
		Columns:    BlogPostTagsColumns,
		PrimaryKey: []*schema.Column{BlogPostTagsColumns[0], BlogPostTagsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "blog_post_tags_blog_post_id",
				Columns:    []*schema.Column{BlogPostTagsColumns[0]},
				RefColumns: []*schema.Column{BlogPostsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "blog_post_tags_blog_tag_id",
				Columns:    []*schema.Column{BlogPostTagsColumns[1]},
				RefColumns: []*schema.Column{BlogTagsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AwardsTable,
		BlogCategoriesTable,
		BlogCommentsTable,
		BlogPostsTable,
		BlogSeriesTable,
		BlogTagsTable,
		EducationsTable,
		IdeasTable,
		LanguagesTable,
		PersonalInfosTable,
		ProjectsTable,
		ProjectDetailsTable,
		ProjectImagesTable,
		ProjectTechnologiesTable,
		PublicationsTable,
		ResearchProjectsTable,
		SocialLinksTable,
		UsersTable,
		WorkExperiencesTable,
		BlogPostTagsTable,
	}
)

func init() {
	AwardsTable.ForeignKeys[0].RefTable = UsersTable
	BlogCommentsTable.ForeignKeys[0].RefTable = BlogCommentsTable
	BlogCommentsTable.ForeignKeys[1].RefTable = BlogPostsTable
	BlogPostsTable.ForeignKeys[0].RefTable = BlogCategoriesTable
	BlogPostsTable.ForeignKeys[1].RefTable = BlogSeriesTable
	BlogPostsTable.ForeignKeys[2].RefTable = UsersTable
	BlogSeriesTable.ForeignKeys[0].RefTable = UsersTable
	EducationsTable.ForeignKeys[0].RefTable = UsersTable
	IdeasTable.ForeignKeys[0].RefTable = UsersTable
	PersonalInfosTable.ForeignKeys[0].RefTable = UsersTable
	ProjectsTable.ForeignKeys[0].RefTable = UsersTable
	ProjectDetailsTable.ForeignKeys[0].RefTable = ProjectsTable
	ProjectImagesTable.ForeignKeys[0].RefTable = ProjectsTable
	ProjectTechnologiesTable.ForeignKeys[0].RefTable = ProjectsTable
	PublicationsTable.ForeignKeys[0].RefTable = UsersTable
	ResearchProjectsTable.ForeignKeys[0].RefTable = UsersTable
	SocialLinksTable.ForeignKeys[0].RefTable = UsersTable
	WorkExperiencesTable.ForeignKeys[0].RefTable = UsersTable
	BlogPostTagsTable.ForeignKeys[0].RefTable = BlogPostsTable
	BlogPostTagsTable.ForeignKeys[1].RefTable = BlogTagsTable
}
