// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4

package types

type AnnualPlan struct {
	ID           string        `json:"id"`
	Year         int           `json:"year"`
	Name         string        `json:"name"`
	Description  string        `json:"description"`
	Icon         string        `json:"icon,omitempty"`
	Image        string        `json:"image,omitempty"`
	ProjectCount int           `json:"project_count"`
	Objectives   []string      `json:"objectives"`
	Projects     []PlanProject `json:"projects"`
	CreatedAt    string        `json:"created_at"`
	UpdatedAt    string        `json:"updated_at"`
}

type AnnualPlanListRequest struct {
	Language string `form:"lang,default=en"`
}

type AnnualPlanRequest struct {
	Name     string `path:"name"`
	Language string `form:"lang,default=en"`
}

type Award struct {
	ID           string `json:"id"`
	UserID       string `json:"user_id"`
	Title        string `json:"title"`
	Organization string `json:"organization"`
	Description  string `json:"description,omitempty"`
	AwardDate    string `json:"award_date,omitempty"`
	Category     string `json:"category,omitempty"`
	SortOrder    int    `json:"sort_order"`
	CreatedAt    string `json:"created_at"`
	UpdatedAt    string `json:"updated_at"`
}

type BlogCategoriesRequest struct {
	Language string `form:"lang,default=en"`
}

type BlogCategory struct {
	ID          string `json:"id"`
	Name        string `json:"name"`
	Slug        string `json:"slug"`
	Description string `json:"description,omitempty"`
	Color       string `json:"color,omitempty"`
	SortOrder   int    `json:"sort_order"`
}

type BlogContent struct {
	Type       string `json:"type"`
	Content    string `json:"content"`
	Caption    string `json:"caption,omitempty"`
	Language   string `json:"language,omitempty"`
	Annotation string `json:"annotation,omitempty"`
	ID         string `json:"id"`
}

type BlogData struct {
	ID                  string        `json:"id"`
	Title               string        `json:"title"`
	TitleZh             string        `json:"title_zh,omitempty"`
	Author              string        `json:"author"`
	PublishDate         string        `json:"publish_date"`
	ReadTime            string        `json:"read_time"`
	Category            string        `json:"category"`
	Tags                []string      `json:"tags"`
	Content             []BlogContent `json:"content"`
	Likes               int64         `json:"likes"`
	Views               int64         `json:"views"`
	Summary             string        `json:"summary"`
	SummaryZh           string        `json:"summary_zh,omitempty"`
	Type                string        `json:"type,omitempty"`
	VideoURL            string        `json:"video_url,omitempty"`
	VideoDuration       string        `json:"video_duration,omitempty"`
	VideoThumbnail      string        `json:"video_thumbnail,omitempty"`
	SeriesID            string        `json:"series_id,omitempty"`
	SeriesTitle         string        `json:"series_title,omitempty"`
	SeriesTitleZh       string        `json:"series_title_zh,omitempty"`
	SeriesDescription   string        `json:"series_description,omitempty"`
	SeriesDescriptionZh string        `json:"series_description_zh,omitempty"`
	EpisodeNumber       int           `json:"episode_number,omitempty"`
	TotalEpisodes       int           `json:"total_episodes,omitempty"`
	SeriesImage         string        `json:"series_image,omitempty"`
}

type BlogListRequest struct {
	Page        int    `form:"page,default=1"`
	Size        int    `form:"size,default=10"`
	Status      string `form:"status,optional"`
	ContentType string `form:"content_type,optional"`
	Featured    bool   `form:"featured,optional"`
	Tag         string `form:"tag,optional"`
	Category    string `form:"category,optional"`
	Author      string `form:"author,optional"`
	Search      string `form:"search,optional"`
	Language    string `form:"lang,default=en"`
}

type BlogListResponse struct {
	Posts      []BlogData `json:"posts"`
	Total      int64      `json:"total"`
	Page       int        `json:"page"`
	Size       int        `json:"size"`
	TotalPages int        `json:"total_pages"`
}

type BlogRequest struct {
	Slug     string `path:"slug"`
	Language string `form:"lang,default=en"`
}

type BlogSearchRequest struct {
	Query    string `form:"query,optional"`
	Category string `form:"category,optional"`
	Tags     string `form:"tags,optional"`
	Author   string `form:"author,optional"`
	Language string `form:"lang,default=en"`
	Page     int    `form:"page,default=1"`
	Size     int    `form:"size,default=10"`
}

type BlogSeries struct {
	ID             string          `json:"id"`
	Title          string          `json:"title"`
	Description    string          `json:"description"`
	ThumbnailURL   string          `json:"thumbnail_url,omitempty"`
	Episodes       []SeriesEpisode `json:"episodes"`
	TotalDuration  string          `json:"total_duration"`
	CompletedCount int             `json:"completed_count"`
	CreatedAt      string          `json:"created_at"`
	UpdatedAt      string          `json:"updated_at"`
}

type BlogSeriesRequest struct {
	SeriesID string `path:"series_id"`
	Language string `form:"lang,default=en"`
}

type BlogTag struct {
	ID         string `json:"id"`
	Name       string `json:"name"`
	Slug       string `json:"slug"`
	UsageCount int    `json:"usage_count"`
}

type BlogTagsRequest struct {
	Language string `form:"lang,default=en"`
}

type Collaborator struct {
	ID          string `json:"id"`
	Name        string `json:"name"`
	Affiliation string `json:"affiliation,omitempty"`
	Role        string `json:"role"`
	Contact     string `json:"contact,omitempty"`
}

type Contact struct {
	Type  string `json:"type"`
	Value string `json:"value"`
}

type CreateIdeaRequest struct {
	Title                string   `json:"title"`
	Description          string   `json:"description"`
	Category             string   `json:"category"`
	Tags                 []string `json:"tags"`
	Status               string   `json:"status,default=draft"`
	Abstract             string   `json:"abstract,optional"`
	Motivation           string   `json:"motivation,optional"`
	TechStack            []string `json:"tech_stack,optional"`
	Difficulty           string   `json:"difficulty"`
	ResearchField        string   `json:"research_field"`
	Keywords             []string `json:"keywords,optional"`
	EstimatedDuration    string   `json:"estimated_duration,optional"`
	OpenForCollaboration bool     `json:"open_for_collaboration,optional"`
	FundingStatus        string   `json:"funding_status,optional"`
}

type CreateProjectRequest struct {
	Name        string   `json:"name"`
	Description string   `json:"description,optional"`
	Tags        []string `json:"tags,optional"`
	Year        int      `json:"year"`
	AnnualPlan  string   `json:"annual_plan"`
}

type DeleteIdeaRequest struct {
	ID string `path:"id"`
}

type DeleteProjectRequest struct {
	ID string `path:"id"`
}

type Education struct {
	ID                 string   `json:"id"`
	UserID             string   `json:"user_id"`
	Institution        string   `json:"institution"`
	Degree             string   `json:"degree"`
	FieldOfStudy       string   `json:"field_of_study,omitempty"`
	StartDate          string   `json:"start_date,omitempty"`
	EndDate            string   `json:"end_date,omitempty"`
	IsCurrent          bool     `json:"is_current"`
	GPA                string   `json:"gpa,omitempty"`
	Location           string   `json:"location,omitempty"`
	InstitutionWebsite string   `json:"institution_website,omitempty"`
	InstitutionLogoURL string   `json:"institution_logo_url,omitempty"`
	Details            []string `json:"details"`
	SortOrder          int      `json:"sort_order"`
	CreatedAt          string   `json:"created_at"`
	UpdatedAt          string   `json:"updated_at"`
}

type Experiment struct {
	ID            string `json:"id"`
	Title         string `json:"title"`
	TitleZh       string `json:"title_zh,omitempty"`
	Description   string `json:"description"`
	DescriptionZh string `json:"description_zh,omitempty"`
	Status        string `json:"status"`
	StartDate     string `json:"start_date,omitempty"`
	EndDate       string `json:"end_date,omitempty"`
	Results       string `json:"results,omitempty"`
	ResultsZh     string `json:"results_zh,omitempty"`
	DataURL       string `json:"data_url,omitempty"`
}

type FeedbackType struct {
	Type          string `json:"type"`
	Description   string `json:"description"`
	DescriptionZh string `json:"description_zh,omitempty"`
}

type GraphData struct {
	Nodes []GraphNode `json:"nodes"`
	Links []GraphLink `json:"links"`
}

type GraphLink struct {
	Source string `json:"source"`
	Target string `json:"target"`
	Value  int    `json:"value"`
}

type GraphNode struct {
	ID    string `json:"id"`
	Group int    `json:"group"`
}

type GraphRequest struct {
	Category string `form:"category,default=all"`
	Language string `form:"lang,default=en"`
}

type IdeaCategoriesRequest struct {
	Language string `form:"lang,default=en"`
}

type IdeaData struct {
	ID                   string               `json:"id"`
	Title                string               `json:"title"`
	Description          string               `json:"description"`
	Category             string               `json:"category"`
	Tags                 []string             `json:"tags"`
	Status               string               `json:"status"`
	CreatedAt            string               `json:"created_at"`
	LastUpdated          string               `json:"last_updated,omitempty"`
	Abstract             string               `json:"abstract,omitempty"`
	AbstractZh           string               `json:"abstract_zh,omitempty"`
	Hypothesis           string               `json:"hypothesis,omitempty"`
	HypothesisZh         string               `json:"hypothesis_zh,omitempty"`
	Motivation           string               `json:"motivation,omitempty"`
	MotivationZh         string               `json:"motivation_zh,omitempty"`
	Methodology          string               `json:"methodology,omitempty"`
	MethodologyZh        string               `json:"methodology_zh,omitempty"`
	Experiments          []Experiment         `json:"experiments,omitempty"`
	PreliminaryResults   string               `json:"preliminary_results,omitempty"`
	PreliminaryResultsZh string               `json:"preliminary_results_zh,omitempty"`
	RelatedWorks         []Reference          `json:"related_works,omitempty"`
	Citations            []Reference          `json:"citations,omitempty"`
	FutureDirections     []string             `json:"future_directions,omitempty"`
	FutureDirectionsZh   []string             `json:"future_directions_zh,omitempty"`
	TechStack            []string             `json:"tech_stack,omitempty"`
	CodeRepository       string               `json:"code_repository,omitempty"`
	DemoURL              string               `json:"demo_url,omitempty"`
	Collaborators        []Collaborator       `json:"collaborators,omitempty"`
	OpenForCollaboration bool                 `json:"open_for_collaboration,omitempty"`
	FeedbackRequested    []FeedbackType       `json:"feedback_requested,omitempty"`
	Publications         []IdeaPublicationRef `json:"publications,omitempty"`
	Conferences          []string             `json:"conferences,omitempty"`
	ValidationStatus     string               `json:"validation_status,omitempty"`
	KeyFindings          []string             `json:"key_findings,omitempty"`
	KeyFindingsZh        []string             `json:"key_findings_zh,omitempty"`
	Limitations          []string             `json:"limitations,omitempty"`
	LimitationsZh        []string             `json:"limitations_zh,omitempty"`
	Difficulty           string               `json:"difficulty,omitempty"`
	ResearchField        string               `json:"research_field,omitempty"`
	Keywords             []string             `json:"keywords,omitempty"`
	EstimatedDuration    string               `json:"estimated_duration,omitempty"`
	FundingStatus        string               `json:"funding_status,omitempty"`
}

type IdeaListRequest struct {
	Page          int    `form:"page,default=1"`
	Size          int    `form:"size,default=10"`
	Status        string `form:"status,optional"`
	Category      string `form:"category,optional"`
	Difficulty    string `form:"difficulty,optional"`
	Collaboration bool   `form:"collaboration,optional"`
	Funding       string `form:"funding,optional"`
	Search        string `form:"search,optional"`
	Tags          string `form:"tags,optional"`
	Language      string `form:"lang,default=en"`
}

type IdeaListResponse struct {
	Ideas      []IdeaData `json:"ideas"`
	Total      int64      `json:"total"`
	Page       int        `json:"page"`
	Size       int        `json:"size"`
	TotalPages int        `json:"total_pages"`
}

type IdeaPublicationRef struct {
	ID      string   `json:"id"`
	Title   string   `json:"title"`
	Authors []string `json:"authors"`
	Venue   string   `json:"venue"`
	Year    int      `json:"year"`
	Status  string   `json:"status"`
	URL     string   `json:"url,omitempty"`
	DOI     string   `json:"doi,omitempty"`
}

type IdeaRequest struct {
	ID       string `path:"id"`
	Language string `form:"lang,default=en"`
}

type IdeaSearchRequest struct {
	Query    string `form:"query,optional"`
	Category string `form:"category,optional"`
	Status   string `form:"status,optional"`
	Tags     string `form:"tags,optional"`
	Language string `form:"lang,default=en"`
	Page     int    `form:"page,default=1"`
	Size     int    `form:"size,default=10"`
}

type IdeaTagsRequest struct {
	Language string `form:"lang,default=en"`
}

type PersonalInfo struct {
	ID            string       `json:"id"`
	UserID        string       `json:"user_id"`
	FullName      string       `json:"full_name"`
	Title         string       `json:"title"`
	CurrentStatus string       `json:"current_status,omitempty"`
	Phone         string       `json:"phone,omitempty"`
	Email         string       `json:"email,omitempty"`
	Location      string       `json:"location,omitempty"`
	Website       string       `json:"website,omitempty"`
	AvatarURL     string       `json:"avatar_url,omitempty"`
	IsPrimary     bool         `json:"is_primary"`
	Contacts      []Contact    `json:"contacts"`
	SocialLinks   []SocialLink `json:"social_links"`
	CreatedAt     string       `json:"created_at"`
	UpdatedAt     string       `json:"updated_at"`
}

type PersonalInfoRequest struct {
	Language string `form:"lang,default=en"`
}

type PlanProject struct {
	ID          string `json:"id"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

type Project struct {
	ID          string   `json:"id"`
	Name        string   `json:"name"`
	Description string   `json:"description"`
	Tags        []string `json:"tags"`
	Year        int      `json:"year"`
	AnnualPlan  string   `json:"annual_plan"`
}

type ProjectBlogRef struct {
	ID          string   `json:"id"`
	Title       string   `json:"title"`
	Summary     string   `json:"summary"`
	PublishDate string   `json:"publish_date"`
	Category    string   `json:"category"`
	Tags        []string `json:"tags"`
	ReadTime    string   `json:"read_time"`
	URL         string   `json:"url"`
	Relevance   string   `json:"relevance"`
	Description string   `json:"description"`
}

type ProjectByIdRequest struct {
	ID       string `path:"id"`
	Language string `form:"lang,default=en"`
}

type ProjectDetail struct {
	ID                  string           `json:"id"`
	ProjectID           string           `json:"project_id"`
	DetailedDescription string           `json:"detailed_description,omitempty"`
	Goals               string           `json:"goals,omitempty"`
	Challenges          string           `json:"challenges,omitempty"`
	Solutions           string           `json:"solutions,omitempty"`
	LessonsLearned      string           `json:"lessons_learned,omitempty"`
	FutureEnhancements  string           `json:"future_enhancements,omitempty"`
	License             string           `json:"license,omitempty"`
	Version             string           `json:"version,omitempty"`
	Timeline            ProjectTimeline  `json:"timeline"`
	Metrics             ProjectMetrics   `json:"metrics"`
	RelatedBlogs        []ProjectBlogRef `json:"related_blogs"`
	CreatedAt           string           `json:"created_at"`
	UpdatedAt           string           `json:"updated_at"`
}

type ProjectDetailRequest struct {
	ID       string `path:"id"`
	Language string `form:"lang,default=en"`
}

type ProjectExtended struct {
	ID               string   `json:"id"`
	UserID           string   `json:"user_id"`
	Title            string   `json:"title"`
	Slug             string   `json:"slug"`
	Description      string   `json:"description"`
	FullDescription  string   `json:"full_description,omitempty"`
	ProjectType      string   `json:"project_type"`
	Status           string   `json:"status"`
	StartDate        string   `json:"start_date,omitempty"`
	EndDate          string   `json:"end_date,omitempty"`
	Technologies     []string `json:"technologies"`
	GithubURL        string   `json:"github_url,omitempty"`
	DemoURL          string   `json:"demo_url,omitempty"`
	DocumentationURL string   `json:"documentation_url,omitempty"`
	ThumbnailURL     string   `json:"thumbnail_url,omitempty"`
	IsFeatured       bool     `json:"is_featured"`
	IsPublic         bool     `json:"is_public"`
	ViewCount        int64    `json:"view_count"`
	StarCount        int64    `json:"star_count"`
	SortOrder        int      `json:"sort_order"`
	Year             int      `json:"year"`
	AnnualPlan       string   `json:"annual_plan,omitempty"`
	TeamSize         int      `json:"team_size,omitempty"`
	MyRole           string   `json:"my_role,omitempty"`
	Features         []string `json:"features"`
	LinesOfCode      int      `json:"lines_of_code,omitempty"`
	Commits          int      `json:"commits,omitempty"`
	Downloads        int      `json:"downloads,omitempty"`
	CreatedAt        string   `json:"created_at"`
	UpdatedAt        string   `json:"updated_at"`
}

type ProjectListRequest struct {
	Page       int    `form:"page,default=1"`
	Size       int    `form:"size,default=10"`
	Type       string `form:"type,optional"`
	Featured   bool   `form:"featured,optional"`
	Status     string `form:"status,optional"`
	Search     string `form:"search,optional"`
	Year       int    `form:"year,optional"`
	AnnualPlan string `form:"annual_plan,optional"`
	Tags       string `form:"tags,optional"`
	Language   string `form:"lang,default=en"`
}

type ProjectListResponse struct {
	Projects   []Project `json:"projects"`
	Total      int64     `json:"total"`
	Page       int       `json:"page"`
	Size       int       `json:"size"`
	TotalPages int       `json:"total_pages"`
}

type ProjectMetrics struct {
	LinesOfCode int `json:"lines_of_code"`
	Commits     int `json:"commits"`
	Stars       int `json:"stars"`
	Downloads   int `json:"downloads"`
}

type ProjectRequest struct {
	Slug     string `path:"slug"`
	Language string `form:"lang,default=en"`
}

type ProjectSearchRequest struct {
	Query    string `form:"query,optional"`
	Tags     string `form:"tags,optional"`
	Year     int    `form:"year,optional"`
	PlanID   string `form:"plan_id,optional"`
	Language string `form:"lang,default=en"`
}

type ProjectTimeline struct {
	Start    string `json:"start"`
	End      string `json:"end"`
	Duration string `json:"duration"`
}

type ProjectsByPlanRequest struct {
	PlanName string `path:"plan_name"`
	Language string `form:"lang,default=en"`
}

type ProjectsWithPlansRequest struct {
	Language string `form:"lang,default=en"`
}

type Publication struct {
	ID            string `json:"id"`
	UserID        string `json:"user_id"`
	Title         string `json:"title"`
	Authors       string `json:"authors"`
	Journal       string `json:"journal,omitempty"`
	Conference    string `json:"conference,omitempty"`
	Publisher     string `json:"publisher,omitempty"`
	PublishedAt   string `json:"published_at,omitempty"`
	DOI           string `json:"doi,omitempty"`
	URL           string `json:"url,omitempty"`
	CitationCount int    `json:"citation_count"`
	CreatedAt     string `json:"created_at"`
	UpdatedAt     string `json:"updated_at"`
}

type RecentUpdate struct {
	ID          string   `json:"id"`
	UserID      string   `json:"user_id"`
	Type        string   `json:"type"`
	Title       string   `json:"title"`
	Description string   `json:"description"`
	Date        string   `json:"date"`
	Tags        []string `json:"tags"`
	Status      string   `json:"status"`
	Priority    string   `json:"priority"`
	CreatedAt   string   `json:"created_at"`
	UpdatedAt   string   `json:"updated_at"`
}

type Reference struct {
	ID      string   `json:"id"`
	Title   string   `json:"title"`
	Authors []string `json:"authors"`
	Year    int      `json:"year"`
	Venue   string   `json:"venue,omitempty"`
	URL     string   `json:"url,omitempty"`
	DOI     string   `json:"doi,omitempty"`
	Notes   string   `json:"notes,omitempty"`
	NotesZh string   `json:"notes_zh,omitempty"`
}

type ResearchProject struct {
	ID          string   `json:"id"`
	UserID      string   `json:"user_id"`
	Title       string   `json:"title"`
	Institution string   `json:"institution,omitempty"`
	Location    string   `json:"location,omitempty"`
	StartDate   string   `json:"start_date,omitempty"`
	EndDate     string   `json:"end_date,omitempty"`
	Details     []string `json:"details"`
	SortOrder   int      `json:"sort_order"`
	CreatedAt   string   `json:"created_at"`
	UpdatedAt   string   `json:"updated_at"`
}

type ResumeData struct {
	PersonalInfo  PersonalInfo      `json:"personal_info"`
	Education     []Education       `json:"education"`
	Experience    []WorkExperience  `json:"experience"`
	Research      []ResearchProject `json:"research"`
	Publications  []Publication     `json:"publications"`
	Awards        []Award           `json:"awards"`
	RecentUpdates []RecentUpdate    `json:"recent_updates"`
	Skills        []string          `json:"skills"`
}

type ResumeRequest struct {
	Language string `form:"lang,default=en"`
}

type SeriesEpisode struct {
	ID        string `json:"id"`
	Title     string `json:"title"`
	Duration  string `json:"duration,omitempty"`
	Completed bool   `json:"completed,omitempty"`
	Current   bool   `json:"current,omitempty"`
	Order     int    `json:"order"`
}

type SocialLink struct {
	ID          string `json:"id"`
	Platform    string `json:"platform"`
	URL         string `json:"url"`
	DisplayName string `json:"display_name,omitempty"`
	IsActive    bool   `json:"is_active"`
	SortOrder   int    `json:"sort_order"`
}

type UpdateBlogLikesRequest struct {
	ID        string `path:"id"`
	Increment bool   `json:"increment,default=true"`
	Language  string `form:"lang,default=en"`
}

type UpdateBlogLikesResponse struct {
	Likes int64 `json:"likes"`
}

type UpdateBlogViewsRequest struct {
	ID       string `path:"id"`
	Language string `form:"lang,default=en"`
}

type UpdateIdeaRequest struct {
	ID                   string   `path:"id"`
	Title                string   `json:"title,optional"`
	Description          string   `json:"description,optional"`
	Category             string   `json:"category,optional"`
	Tags                 []string `json:"tags,optional"`
	Status               string   `json:"status,optional"`
	Abstract             string   `json:"abstract,optional"`
	Motivation           string   `json:"motivation,optional"`
	TechStack            []string `json:"tech_stack,optional"`
	Difficulty           string   `json:"difficulty,optional"`
	ResearchField        string   `json:"research_field,optional"`
	Keywords             []string `json:"keywords,optional"`
	EstimatedDuration    string   `json:"estimated_duration,optional"`
	OpenForCollaboration bool     `json:"open_for_collaboration,optional"`
	FundingStatus        string   `json:"funding_status,optional"`
	DemoURL              string   `json:"demo_url,optional"`
	CodeRepository       string   `json:"code_repository,optional"`
}

type UpdatePersonalInfoRequest struct {
	FullName      string       `json:"full_name,optional"`
	Title         string       `json:"title,optional"`
	CurrentStatus string       `json:"current_status,optional"`
	Phone         string       `json:"phone,optional"`
	Email         string       `json:"email,optional"`
	Location      string       `json:"location,optional"`
	Website       string       `json:"website,optional"`
	AvatarURL     string       `json:"avatar_url,optional"`
	Contacts      []Contact    `json:"contacts,optional"`
	SocialLinks   []SocialLink `json:"social_links,optional"`
}

type UpdateProjectRequest struct {
	ID          string   `path:"id"`
	Name        string   `json:"name,optional"`
	Description string   `json:"description,optional"`
	Tags        []string `json:"tags,optional"`
	Year        int      `json:"year,optional"`
	AnnualPlan  string   `json:"annual_plan,optional"`
}

type UpdateSeriesProgressRequest struct {
	SeriesID  string `path:"series_id"`
	EpisodeID string `path:"episode_id"`
	Completed bool   `json:"completed"`
	Language  string `form:"lang,default=en"`
}

type WorkExperience struct {
	ID             string   `json:"id"`
	UserID         string   `json:"user_id"`
	Company        string   `json:"company"`
	Position       string   `json:"position"`
	StartDate      string   `json:"start_date,omitempty"`
	EndDate        string   `json:"end_date,omitempty"`
	IsCurrent      bool     `json:"is_current"`
	Location       string   `json:"location,omitempty"`
	CompanyWebsite string   `json:"company_website,omitempty"`
	CompanyLogoURL string   `json:"company_logo_url,omitempty"`
	Details        []string `json:"details"`
	SortOrder      int      `json:"sort_order"`
	CreatedAt      string   `json:"created_at"`
	UpdatedAt      string   `json:"updated_at"`
}
